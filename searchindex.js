Search.setIndex({"docnames": ["array/activations", "array/activations/ArrayWithActivations", "array/array", "array/array/Array", "array/array/Variable", "array/array_methods", "array/array_methods/abs", "array/array_methods/acos", "array/array_methods/acosh", "array/array_methods/adam_step", "array/array_methods/adam_update", "array/array_methods/add", "array/array_methods/add_ivy_array_instance_methods", "array/array_methods/all", "array/array_methods/all_equal", "array/array_methods/any", "array/array_methods/argmax", "array/array_methods/argmin", "array/array_methods/argsort", "array/array_methods/array_equal", "array/array_methods/arrays_equal", "array/array_methods/asarray", "array/array_methods/asin", "array/array_methods/asinh", "array/array_methods/assert_supports_inplace", "array/array_methods/astype", "array/array_methods/atan", "array/array_methods/atan2", "array/array_methods/atanh", "array/array_methods/binary_cross_entropy", "array/array_methods/bitwise_and", "array/array_methods/bitwise_invert", "array/array_methods/bitwise_left_shift", "array/array_methods/bitwise_or", "array/array_methods/bitwise_right_shift", "array/array_methods/bitwise_xor", "array/array_methods/broadcast_arrays", "array/array_methods/broadcast_to", "array/array_methods/can_cast", "array/array_methods/ceil", "array/array_methods/cholesky", "array/array_methods/clip", "array/array_methods/clip_matrix_norm", "array/array_methods/clip_vector_norm", "array/array_methods/concat", "array/array_methods/constant_pad", "array/array_methods/conv1d", "array/array_methods/conv1d_transpose", "array/array_methods/conv2d", "array/array_methods/conv3d", "array/array_methods/conv3d_transpose", "array/array_methods/copy_array", "array/array_methods/cos", "array/array_methods/cosh", "array/array_methods/cross", "array/array_methods/cross_entropy", "array/array_methods/cumprod", "array/array_methods/cumsum", "array/array_methods/default", "array/array_methods/depthwise_conv2d", "array/array_methods/det", "array/array_methods/dev", "array/array_methods/diagonal", "array/array_methods/divide", "array/array_methods/dropout", "array/array_methods/dtype", "array/array_methods/eigh", "array/array_methods/eigvalsh", "array/array_methods/einops_rearrange", "array/array_methods/einops_reduce", "array/array_methods/einops_repeat", "array/array_methods/einsum", "array/array_methods/empty_like", "array/array_methods/equal", "array/array_methods/erf", "array/array_methods/exists", "array/array_methods/exp", "array/array_methods/expand_dims", "array/array_methods/expm1", "array/array_methods/finfo", "array/array_methods/flip", "array/array_methods/floor", "array/array_methods/floor_divide", "array/array_methods/floormod", "array/array_methods/fourier_encode", "array/array_methods/from_dlpack", "array/array_methods/full_like", "array/array_methods/gather", "array/array_methods/gather_nd", "array/array_methods/gelu", "array/array_methods/get_num_dims", "array/array_methods/gradient_descent_update", "array/array_methods/greater", "array/array_methods/greater_equal", "array/array_methods/has_nans", "array/array_methods/iinfo", "array/array_methods/indices_where", "array/array_methods/inplace_decrement", "array/array_methods/inplace_increment", "array/array_methods/inplace_update", "array/array_methods/inv", "array/array_methods/is_array", "array/array_methods/is_bool_dtype", "array/array_methods/is_float_dtype", "array/array_methods/is_int_dtype", "array/array_methods/is_ivy_array", "array/array_methods/is_ivy_container", "array/array_methods/is_native_array", "array/array_methods/is_uint_dtype", "array/array_methods/is_variable", "array/array_methods/isfinite", "array/array_methods/isinf", "array/array_methods/isnan", "array/array_methods/lamb_update", "array/array_methods/lars_update", "array/array_methods/layer_norm", "array/array_methods/leaky_relu", "array/array_methods/less", "array/array_methods/less_equal", "array/array_methods/linear", "array/array_methods/log", "array/array_methods/log10", "array/array_methods/log1p", "array/array_methods/log2", "array/array_methods/logaddexp", "array/array_methods/logical_and", "array/array_methods/logical_not", "array/array_methods/logical_or", "array/array_methods/logical_xor", "array/array_methods/lstm_update", "array/array_methods/matmul", "array/array_methods/matrix_norm", "array/array_methods/matrix_rank", "array/array_methods/matrix_transpose", "array/array_methods/max", "array/array_methods/mean", "array/array_methods/meshgrid", "array/array_methods/min", "array/array_methods/multi_head_attention", "array/array_methods/multinomial", "array/array_methods/multiply", "array/array_methods/native_array", "array/array_methods/negative", "array/array_methods/nonzero", "array/array_methods/not_equal", "array/array_methods/one_hot", "array/array_methods/ones_like", "array/array_methods/optimizer_update", "array/array_methods/outer", "array/array_methods/permute_dims", "array/array_methods/pinv", "array/array_methods/positive", "array/array_methods/pow", "array/array_methods/prod", "array/array_methods/qr", "array/array_methods/randint", "array/array_methods/random_normal", "array/array_methods/random_uniform", "array/array_methods/relu", "array/array_methods/remainder", "array/array_methods/repeat", "array/array_methods/reshape", "array/array_methods/result_type", "array/array_methods/roll", "array/array_methods/round", "array/array_methods/scaled_dot_product_attention", "array/array_methods/scatter_flat", "array/array_methods/scatter_nd", "array/array_methods/searchsorted", "array/array_methods/shuffle", "array/array_methods/sigmoid", "array/array_methods/sign", "array/array_methods/sin", "array/array_methods/sinh", "array/array_methods/softmax", "array/array_methods/softplus", "array/array_methods/solve", "array/array_methods/sort", "array/array_methods/sparse_cross_entropy", "array/array_methods/split", "array/array_methods/sqrt", "array/array_methods/square", "array/array_methods/squeeze", "array/array_methods/stable_divide", "array/array_methods/stable_pow", "array/array_methods/stack", "array/array_methods/std", "array/array_methods/stop_gradient", "array/array_methods/subtract", "array/array_methods/sum", "array/array_methods/supports_inplace", "array/array_methods/svd", "array/array_methods/svdvals", "array/array_methods/swapaxes", "array/array_methods/tan", "array/array_methods/tanh", "array/array_methods/tensordot", "array/array_methods/tile", "array/array_methods/to_device", "array/array_methods/to_list", "array/array_methods/to_numpy", "array/array_methods/to_scalar", "array/array_methods/trace", "array/array_methods/tril", "array/array_methods/triu", "array/array_methods/trunc", "array/array_methods/unique_all", "array/array_methods/unique_counts", "array/array_methods/unique_inverse", "array/array_methods/unique_values", "array/array_methods/unstack", "array/array_methods/value_is_nan", "array/array_methods/var", "array/array_methods/variable", "array/array_methods/variable_data", "array/array_methods/vecdot", "array/array_methods/vector_norm", "array/array_methods/vector_to_skew_symmetric_matrix", "array/array_methods/where", "array/array_methods/zero_pad", "array/array_methods/zeros_like", "array/conversions", "array/conversions/args_to_ivy", "array/conversions/args_to_native", "array/conversions/to_ivy", "array/conversions/to_native", "array/creation", "array/creation/ArrayWithCreation", "array/data_type", "array/data_type/ArrayWithDataTypes", "array/device", "array/device/ArrayWithDevice", "array/elementwise", "array/elementwise/ArrayWithElementwise", "array/general", "array/general/ArrayWithGeneral", "array/gradients", "array/gradients/ArrayWithGradients", "array/image", "array/image/ArrayWithImage", "array/layers", "array/layers/ArrayWithLayers", "array/linear_algebra", "array/linear_algebra/ArrayWithLinearAlgebra", "array/losses", "array/losses/ArrayWithLosses", "array/manipulation", "array/manipulation/ArrayWithManipulation", "array/norms", "array/norms/ArrayWithNorms", "array/random", "array/random/ArrayWithRandom", "array/searching", "array/searching/ArrayWithSearching", "array/set", "array/set/ArrayWithSet", "array/sorting", "array/sorting/ArrayWithSorting", "array/statistical", "array/statistical/ArrayWithStatistical", "array/utility", "array/utility/ArrayWithUtility", "array/wrapping", "array/wrapping/add_ivy_array_instance_methods", "backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/try_import_ivy_jax", "backend_handler/try_import_ivy_mxnet", "backend_handler/try_import_ivy_numpy", "backend_handler/try_import_ivy_tf", "backend_handler/try_import_ivy_torch", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "container/activations", "container/activations/ContainerWithActivations", "container/base", "container/base/ContainerBase", "container/container", "container/container/Container", "container/container_methods", "container/container_methods/abs", "container/container_methods/acos", "container/container_methods/acosh", "container/container_methods/adam_step", "container/container_methods/adam_update", "container/container_methods/add", "container/container_methods/add_ivy_container_instance_methods", "container/container_methods/all", "container/container_methods/all_equal", "container/container_methods/any", "container/container_methods/argmax", "container/container_methods/argmin", "container/container_methods/argsort", "container/container_methods/asin", "container/container_methods/asinh", "container/container_methods/assert_supports_inplace", "container/container_methods/astype", "container/container_methods/atan", "container/container_methods/atan2", "container/container_methods/atanh", "container/container_methods/binary_cross_entropy", "container/container_methods/bitwise_and", "container/container_methods/bitwise_invert", "container/container_methods/bitwise_left_shift", "container/container_methods/bitwise_or", "container/container_methods/bitwise_right_shift", "container/container_methods/bitwise_xor", "container/container_methods/broadcast_arrays", "container/container_methods/broadcast_to", "container/container_methods/can_cast", "container/container_methods/ceil", "container/container_methods/cholesky", "container/container_methods/clip", "container/container_methods/clip_matrix_norm", "container/container_methods/clip_vector_norm", "container/container_methods/concat", "container/container_methods/constant_pad", "container/container_methods/conv1d", "container/container_methods/conv1d_transpose", "container/container_methods/conv2d", "container/container_methods/conv2d_transpose", "container/container_methods/conv3d", "container/container_methods/conv3d_transpose", "container/container_methods/cos", "container/container_methods/cosh", "container/container_methods/cross", "container/container_methods/cross_entropy", "container/container_methods/cumprod", "container/container_methods/cumsum", "container/container_methods/depthwise_conv2d", "container/container_methods/det", "container/container_methods/dev", "container/container_methods/diagonal", "container/container_methods/divide", "container/container_methods/dropout", "container/container_methods/dtype", "container/container_methods/eigh", "container/container_methods/einops_rearrange", "container/container_methods/einops_reduce", "container/container_methods/einops_repeat", "container/container_methods/einsum", "container/container_methods/empty_like", "container/container_methods/equal", "container/container_methods/erf", "container/container_methods/exp", "container/container_methods/expand_dims", "container/container_methods/expm1", "container/container_methods/finfo", "container/container_methods/flip", "container/container_methods/floor", "container/container_methods/floor_divide", "container/container_methods/floormod", "container/container_methods/fourier_encode", "container/container_methods/from_dlpack", "container/container_methods/full_like", "container/container_methods/gather", "container/container_methods/gather_nd", "container/container_methods/gelu", "container/container_methods/gradient_descent_update", "container/container_methods/greater", "container/container_methods/greater_equal", "container/container_methods/has_nans", "container/container_methods/iinfo", "container/container_methods/indices_where", "container/container_methods/inplace_decrement", "container/container_methods/inplace_increment", "container/container_methods/inplace_update", "container/container_methods/inv", "container/container_methods/is_array", "container/container_methods/is_bool_dtype", "container/container_methods/is_float_dtype", "container/container_methods/is_int_dtype", "container/container_methods/is_ivy_array", "container/container_methods/is_ivy_container", "container/container_methods/is_native_array", "container/container_methods/is_uint_dtype", "container/container_methods/is_variable", "container/container_methods/isfinite", "container/container_methods/isinf", "container/container_methods/isnan", "container/container_methods/lamb_update", "container/container_methods/lars_update", "container/container_methods/layer_norm", "container/container_methods/leaky_relu", "container/container_methods/less", "container/container_methods/less_equal", "container/container_methods/linear", "container/container_methods/log", "container/container_methods/log10", "container/container_methods/log1p", "container/container_methods/log2", "container/container_methods/logaddexp", "container/container_methods/logical_and", "container/container_methods/logical_not", "container/container_methods/logical_or", "container/container_methods/logical_xor", "container/container_methods/lstm_update", "container/container_methods/matmul", "container/container_methods/matrix_norm", "container/container_methods/matrix_power", "container/container_methods/matrix_rank", "container/container_methods/matrix_transpose", "container/container_methods/max", "container/container_methods/maximum", "container/container_methods/mean", "container/container_methods/meshgrid", "container/container_methods/min", "container/container_methods/minimum", "container/container_methods/multi_head_attention", "container/container_methods/multinomial", "container/container_methods/multiply", "container/container_methods/native_array", "container/container_methods/negative", "container/container_methods/nonzero", "container/container_methods/not_equal", "container/container_methods/one_hot", "container/container_methods/ones_like", "container/container_methods/optimizer_update", "container/container_methods/outer", "container/container_methods/permute_dims", "container/container_methods/positive", "container/container_methods/pow", "container/container_methods/prod", "container/container_methods/qr", "container/container_methods/randint", "container/container_methods/random_normal", "container/container_methods/random_uniform", "container/container_methods/relu", "container/container_methods/remainder", "container/container_methods/repeat", "container/container_methods/reshape", "container/container_methods/result_type", "container/container_methods/roll", "container/container_methods/round", "container/container_methods/scaled_dot_product_attention", "container/container_methods/scatter_flat", "container/container_methods/scatter_nd", "container/container_methods/searchsorted", "container/container_methods/shuffle", "container/container_methods/sigmoid", "container/container_methods/sign", "container/container_methods/sin", "container/container_methods/sinh", "container/container_methods/slogdet", "container/container_methods/softmax", "container/container_methods/softplus", "container/container_methods/solve", "container/container_methods/sort", "container/container_methods/sparse_cross_entropy", "container/container_methods/split", "container/container_methods/sqrt", "container/container_methods/square", "container/container_methods/squeeze", "container/container_methods/stable_divide", "container/container_methods/stable_pow", "container/container_methods/stack", "container/container_methods/static_abs", "container/container_methods/static_acos", "container/container_methods/static_acosh", "container/container_methods/static_add", "container/container_methods/static_all", "container/container_methods/static_all_equal", "container/container_methods/static_any", "container/container_methods/static_arange", "container/container_methods/static_argmax", "container/container_methods/static_argmin", "container/container_methods/static_argsort", "container/container_methods/static_asarray", "container/container_methods/static_asin", "container/container_methods/static_asinh", "container/container_methods/static_assert_supports_inplace", "container/container_methods/static_astype", "container/container_methods/static_atan", "container/container_methods/static_atan2", "container/container_methods/static_atanh", "container/container_methods/static_binary_cross_entropy", "container/container_methods/static_bitwise_and", "container/container_methods/static_bitwise_invert", "container/container_methods/static_bitwise_left_shift", "container/container_methods/static_bitwise_or", "container/container_methods/static_bitwise_right_shift", "container/container_methods/static_bitwise_xor", "container/container_methods/static_broadcast_arrays", "container/container_methods/static_broadcast_to", "container/container_methods/static_can_cast", "container/container_methods/static_ceil", "container/container_methods/static_cholesky", "container/container_methods/static_clip", "container/container_methods/static_clip_matrix_norm", "container/container_methods/static_clip_vector_norm", "container/container_methods/static_concat", "container/container_methods/static_constant_pad", "container/container_methods/static_conv1d", "container/container_methods/static_conv1d_transpose", "container/container_methods/static_conv2d", "container/container_methods/static_conv2d_transpose", "container/container_methods/static_conv3d", "container/container_methods/static_conv3d_transpose", "container/container_methods/static_cos", "container/container_methods/static_cosh", "container/container_methods/static_cross", "container/container_methods/static_cross_entropy", "container/container_methods/static_cumprod", "container/container_methods/static_cumsum", "container/container_methods/static_default_float_dtype", "container/container_methods/static_depthwise_conv2d", "container/container_methods/static_det", "container/container_methods/static_dev", "container/container_methods/static_diagonal", "container/container_methods/static_divide", "container/container_methods/static_dropout", "container/container_methods/static_dtype", "container/container_methods/static_einops_rearrange", "container/container_methods/static_einops_reduce", "container/container_methods/static_einops_repeat", "container/container_methods/static_empty_like", "container/container_methods/static_equal", "container/container_methods/static_erf", "container/container_methods/static_exp", "container/container_methods/static_expand_dims", "container/container_methods/static_expm1", "container/container_methods/static_eye", "container/container_methods/static_finfo", "container/container_methods/static_flip", "container/container_methods/static_floor", "container/container_methods/static_floor_divide", "container/container_methods/static_floormod", "container/container_methods/static_fourier_encode", "container/container_methods/static_from_dlpack", "container/container_methods/static_full_like", "container/container_methods/static_function_supported_dtypes", "container/container_methods/static_function_unsupported_dtypes", "container/container_methods/static_gather", "container/container_methods/static_gather_nd", "container/container_methods/static_gelu", "container/container_methods/static_greater", "container/container_methods/static_greater_equal", "container/container_methods/static_has_nans", "container/container_methods/static_iinfo", "container/container_methods/static_indices_where", "container/container_methods/static_inplace_decrement", "container/container_methods/static_inplace_increment", "container/container_methods/static_inplace_update", "container/container_methods/static_inv", "container/container_methods/static_is_array", "container/container_methods/static_is_bool_dtype", "container/container_methods/static_is_float_dtype", "container/container_methods/static_is_int_dtype", "container/container_methods/static_is_ivy_array", "container/container_methods/static_is_ivy_container", "container/container_methods/static_is_native_array", "container/container_methods/static_is_uint_dtype", "container/container_methods/static_is_variable", "container/container_methods/static_isfinite", "container/container_methods/static_isinf", "container/container_methods/static_isnan", "container/container_methods/static_leaky_relu", "container/container_methods/static_less", "container/container_methods/static_less_equal", "container/container_methods/static_linear", "container/container_methods/static_linspace", "container/container_methods/static_log", "container/container_methods/static_log10", "container/container_methods/static_log1p", "container/container_methods/static_log2", "container/container_methods/static_logaddexp", "container/container_methods/static_logical_and", "container/container_methods/static_logical_not", "container/container_methods/static_logical_or", "container/container_methods/static_logical_xor", "container/container_methods/static_logspace", "container/container_methods/static_lstm_update", "container/container_methods/static_matrix_norm", "container/container_methods/static_matrix_power", "container/container_methods/static_matrix_rank", "container/container_methods/static_matrix_transpose", "container/container_methods/static_maximum", "container/container_methods/static_meshgrid", "container/container_methods/static_minimum", "container/container_methods/static_multi_head_attention", "container/container_methods/static_multinomial", "container/container_methods/static_multiply", "container/container_methods/static_native_array", "container/container_methods/static_negative", "container/container_methods/static_nonzero", "container/container_methods/static_not_equal", "container/container_methods/static_one_hot", "container/container_methods/static_ones", "container/container_methods/static_ones_like", "container/container_methods/static_outer", "container/container_methods/static_permute_dims", "container/container_methods/static_positive", "container/container_methods/static_pow", "container/container_methods/static_qr", "container/container_methods/static_randint", "container/container_methods/static_random_normal", "container/container_methods/static_random_uniform", "container/container_methods/static_relu", "container/container_methods/static_remainder", "container/container_methods/static_repeat", "container/container_methods/static_reshape", "container/container_methods/static_result_type", "container/container_methods/static_roll", "container/container_methods/static_round", "container/container_methods/static_scaled_dot_product_attention", "container/container_methods/static_scatter_flat", "container/container_methods/static_scatter_nd", "container/container_methods/static_searchsorted", "container/container_methods/static_shuffle", "container/container_methods/static_sigmoid", "container/container_methods/static_sign", "container/container_methods/static_sin", "container/container_methods/static_sinh", "container/container_methods/static_slogdet", "container/container_methods/static_softmax", "container/container_methods/static_softplus", "container/container_methods/static_solve", "container/container_methods/static_sort", "container/container_methods/static_sparse_cross_entropy", "container/container_methods/static_split", "container/container_methods/static_sqrt", "container/container_methods/static_square", "container/container_methods/static_squeeze", "container/container_methods/static_stable_divide", "container/container_methods/static_stable_pow", "container/container_methods/static_stack", "container/container_methods/static_stop_gradient", "container/container_methods/static_subtract", "container/container_methods/static_supports_inplace_update", "container/container_methods/static_svd", "container/container_methods/static_svdvals", "container/container_methods/static_swapaxes", "container/container_methods/static_tan", "container/container_methods/static_tanh", "container/container_methods/static_tensordot", "container/container_methods/static_tile", "container/container_methods/static_to_device", "container/container_methods/static_to_ivy", "container/container_methods/static_to_list", "container/container_methods/static_to_native", "container/container_methods/static_to_numpy", "container/container_methods/static_to_scalar", "container/container_methods/static_trace", "container/container_methods/static_tril", "container/container_methods/static_triu", "container/container_methods/static_trunc", "container/container_methods/static_unique_all", "container/container_methods/static_unique_counts", "container/container_methods/static_unique_inverse", "container/container_methods/static_unique_values", "container/container_methods/static_unstack", "container/container_methods/static_value_is_nan", "container/container_methods/static_var", "container/container_methods/static_variable", "container/container_methods/static_variable_data", "container/container_methods/static_vecdot", "container/container_methods/static_vector_norm", "container/container_methods/static_vector_to_skew_symmetric_matrix", "container/container_methods/static_where", "container/container_methods/static_zero_pad", "container/container_methods/static_zeros", "container/container_methods/static_zeros_like", "container/container_methods/std", "container/container_methods/stop_gradient", "container/container_methods/subtract", "container/container_methods/sum", "container/container_methods/supports_inplace_update", "container/container_methods/svd", "container/container_methods/svdvals", "container/container_methods/swapaxes", "container/container_methods/tan", "container/container_methods/tanh", "container/container_methods/tensordot", "container/container_methods/tile", "container/container_methods/to_device", "container/container_methods/to_ivy", "container/container_methods/to_list", "container/container_methods/to_native", "container/container_methods/to_numpy", "container/container_methods/to_scalar", "container/container_methods/trace", "container/container_methods/tril", "container/container_methods/triu", "container/container_methods/trunc", "container/container_methods/unique_all", "container/container_methods/unique_counts", "container/container_methods/unique_inverse", "container/container_methods/unique_values", "container/container_methods/unstack", "container/container_methods/value_is_nan", "container/container_methods/var", "container/container_methods/variable", "container/container_methods/variable_data", "container/container_methods/vecdot", "container/container_methods/vector_norm", "container/container_methods/vector_to_skew_symmetric_matrix", "container/container_methods/where", "container/container_methods/zero_pad", "container/container_methods/zeros_like", "container/conversions", "container/conversions/ContainerWithConversions", "container/creation", "container/creation/ContainerWithCreation", "container/data_type", "container/data_type/ContainerWithDataTypes", "container/device", "container/device/ContainerWithDevice", "container/elementwise", "container/elementwise/ContainerWithElementwise", "container/general", "container/general/ContainerWithGeneral", "container/gradients", "container/gradients/ContainerWithGradients", "container/image", "container/image/ContainerWithImage", "container/layers", "container/layers/ContainerWithLayers", "container/linear_algebra", "container/linear_algebra/ContainerWithLinearAlgebra", "container/losses", "container/losses/ContainerWithLosses", "container/manipulation", "container/manipulation/ContainerWithManipulation", "container/norms", "container/norms/ContainerWithNorms", "container/random", "container/random/ContainerWithRandom", "container/searching", "container/searching/ContainerWithSearching", "container/set", "container/set/ContainerWithSet", "container/sorting", "container/sorting/ContainerWithSorting", "container/statistical", "container/statistical/ContainerWithStatistical", "container/utility", "container/utility/ContainerWithUtility", "container/wrapping", "container/wrapping/add_ivy_container_instance_methods", "contributing", "contributing/0_setting_up", "contributing/1_the_basics", "contributing/4_open_tasks", "contributing/5_applied_libraries", "contributing/building_the_docs", "deep_dive", "deep_dive/0_navigating_the_code", "deep_dive/10_formatting", "deep_dive/11_function_arguments", "deep_dive/12_docstrings", "deep_dive/13_docstring_examples", "deep_dive/14_array_api_tests", "deep_dive/15_ivy_tests", "deep_dive/16_ivy_frontends", "deep_dive/17_ivy_frontends_tests", "deep_dive/1_function_types", "deep_dive/2_superset_behaviour", "deep_dive/3_backend_setting", "deep_dive/4_function_wrapping", "deep_dive/5_arrays", "deep_dive/6_containers", "deep_dive/7_data_types", "deep_dive/8_devices", "deep_dive/9_inplace_updates", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/relu", "functional/ivy/activations/sigmoid", "functional/ivy/activations/softmax", "functional/ivy/activations/softplus", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/arange", "functional/ivy/creation/asarray", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/eye", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/linspace", "functional/ivy/creation/logspace", "functional/ivy/creation/meshgrid", "functional/ivy/creation/native_array", "functional/ivy/creation/ones", "functional/ivy/creation/ones_like", "functional/ivy/creation/tril", "functional/ivy/creation/triu", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros_like", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/add", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floormod", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/square", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/trunc", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/arrays_equal", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/container_types", "functional/ivy/general/copy_array", "functional/ivy/general/cumprod", "functional/ivy/general/cumsum", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_repeat", "functional/ivy/general/exists", "functional/ivy/general/fourier_encode", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather_nd", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/indices_where", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_native_array", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/one_hot", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_nd", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_pow", "functional/ivy/general/supports_inplace", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_scalar", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/unstack", "functional/ivy/general/value_is_nan", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/dropout", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/lstm_update", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/split", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/zero_pad", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_indices_where", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/randint", "functional/ivy/random/random_normal", "functional/ivy/random/random_uniform", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmin", "functional/ivy/searching/nonzero", "functional/ivy/searching/where", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_values", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/sort", "functional/ivy/statistical", "functional/ivy/statistical/einsum", "functional/ivy/statistical/max", "functional/ivy/statistical/mean", "functional/ivy/statistical/min", "functional/ivy/statistical/prod", "functional/ivy/statistical/std", "functional/ivy/statistical/sum", "functional/ivy/statistical/var", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/any", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["array/activations.rst", "array/activations/ArrayWithActivations.rst", "array/array.rst", "array/array/Array.rst", "array/array/Variable.rst", "array/array_methods.rst", "array/array_methods/abs.rst", "array/array_methods/acos.rst", "array/array_methods/acosh.rst", "array/array_methods/adam_step.rst", "array/array_methods/adam_update.rst", "array/array_methods/add.rst", "array/array_methods/add_ivy_array_instance_methods.rst", "array/array_methods/all.rst", "array/array_methods/all_equal.rst", "array/array_methods/any.rst", "array/array_methods/argmax.rst", "array/array_methods/argmin.rst", "array/array_methods/argsort.rst", "array/array_methods/array_equal.rst", "array/array_methods/arrays_equal.rst", "array/array_methods/asarray.rst", "array/array_methods/asin.rst", "array/array_methods/asinh.rst", "array/array_methods/assert_supports_inplace.rst", "array/array_methods/astype.rst", "array/array_methods/atan.rst", "array/array_methods/atan2.rst", "array/array_methods/atanh.rst", "array/array_methods/binary_cross_entropy.rst", "array/array_methods/bitwise_and.rst", "array/array_methods/bitwise_invert.rst", "array/array_methods/bitwise_left_shift.rst", "array/array_methods/bitwise_or.rst", "array/array_methods/bitwise_right_shift.rst", "array/array_methods/bitwise_xor.rst", "array/array_methods/broadcast_arrays.rst", "array/array_methods/broadcast_to.rst", "array/array_methods/can_cast.rst", "array/array_methods/ceil.rst", "array/array_methods/cholesky.rst", "array/array_methods/clip.rst", "array/array_methods/clip_matrix_norm.rst", "array/array_methods/clip_vector_norm.rst", "array/array_methods/concat.rst", "array/array_methods/constant_pad.rst", "array/array_methods/conv1d.rst", "array/array_methods/conv1d_transpose.rst", "array/array_methods/conv2d.rst", "array/array_methods/conv3d.rst", "array/array_methods/conv3d_transpose.rst", "array/array_methods/copy_array.rst", "array/array_methods/cos.rst", "array/array_methods/cosh.rst", "array/array_methods/cross.rst", "array/array_methods/cross_entropy.rst", "array/array_methods/cumprod.rst", "array/array_methods/cumsum.rst", "array/array_methods/default.rst", "array/array_methods/depthwise_conv2d.rst", "array/array_methods/det.rst", "array/array_methods/dev.rst", "array/array_methods/diagonal.rst", "array/array_methods/divide.rst", "array/array_methods/dropout.rst", "array/array_methods/dtype.rst", "array/array_methods/eigh.rst", "array/array_methods/eigvalsh.rst", "array/array_methods/einops_rearrange.rst", "array/array_methods/einops_reduce.rst", "array/array_methods/einops_repeat.rst", "array/array_methods/einsum.rst", "array/array_methods/empty_like.rst", "array/array_methods/equal.rst", "array/array_methods/erf.rst", "array/array_methods/exists.rst", "array/array_methods/exp.rst", "array/array_methods/expand_dims.rst", "array/array_methods/expm1.rst", "array/array_methods/finfo.rst", "array/array_methods/flip.rst", "array/array_methods/floor.rst", "array/array_methods/floor_divide.rst", "array/array_methods/floormod.rst", "array/array_methods/fourier_encode.rst", "array/array_methods/from_dlpack.rst", "array/array_methods/full_like.rst", "array/array_methods/gather.rst", "array/array_methods/gather_nd.rst", "array/array_methods/gelu.rst", "array/array_methods/get_num_dims.rst", "array/array_methods/gradient_descent_update.rst", "array/array_methods/greater.rst", "array/array_methods/greater_equal.rst", "array/array_methods/has_nans.rst", "array/array_methods/iinfo.rst", "array/array_methods/indices_where.rst", "array/array_methods/inplace_decrement.rst", "array/array_methods/inplace_increment.rst", "array/array_methods/inplace_update.rst", "array/array_methods/inv.rst", "array/array_methods/is_array.rst", "array/array_methods/is_bool_dtype.rst", "array/array_methods/is_float_dtype.rst", "array/array_methods/is_int_dtype.rst", "array/array_methods/is_ivy_array.rst", "array/array_methods/is_ivy_container.rst", "array/array_methods/is_native_array.rst", "array/array_methods/is_uint_dtype.rst", "array/array_methods/is_variable.rst", "array/array_methods/isfinite.rst", "array/array_methods/isinf.rst", "array/array_methods/isnan.rst", "array/array_methods/lamb_update.rst", "array/array_methods/lars_update.rst", "array/array_methods/layer_norm.rst", "array/array_methods/leaky_relu.rst", "array/array_methods/less.rst", "array/array_methods/less_equal.rst", "array/array_methods/linear.rst", "array/array_methods/log.rst", "array/array_methods/log10.rst", "array/array_methods/log1p.rst", "array/array_methods/log2.rst", "array/array_methods/logaddexp.rst", "array/array_methods/logical_and.rst", "array/array_methods/logical_not.rst", "array/array_methods/logical_or.rst", "array/array_methods/logical_xor.rst", "array/array_methods/lstm_update.rst", "array/array_methods/matmul.rst", "array/array_methods/matrix_norm.rst", "array/array_methods/matrix_rank.rst", "array/array_methods/matrix_transpose.rst", "array/array_methods/max.rst", "array/array_methods/mean.rst", "array/array_methods/meshgrid.rst", "array/array_methods/min.rst", "array/array_methods/multi_head_attention.rst", "array/array_methods/multinomial.rst", "array/array_methods/multiply.rst", "array/array_methods/native_array.rst", "array/array_methods/negative.rst", "array/array_methods/nonzero.rst", "array/array_methods/not_equal.rst", "array/array_methods/one_hot.rst", "array/array_methods/ones_like.rst", "array/array_methods/optimizer_update.rst", "array/array_methods/outer.rst", "array/array_methods/permute_dims.rst", "array/array_methods/pinv.rst", "array/array_methods/positive.rst", "array/array_methods/pow.rst", "array/array_methods/prod.rst", "array/array_methods/qr.rst", "array/array_methods/randint.rst", "array/array_methods/random_normal.rst", "array/array_methods/random_uniform.rst", "array/array_methods/relu.rst", "array/array_methods/remainder.rst", "array/array_methods/repeat.rst", "array/array_methods/reshape.rst", "array/array_methods/result_type.rst", "array/array_methods/roll.rst", "array/array_methods/round.rst", "array/array_methods/scaled_dot_product_attention.rst", "array/array_methods/scatter_flat.rst", "array/array_methods/scatter_nd.rst", "array/array_methods/searchsorted.rst", "array/array_methods/shuffle.rst", "array/array_methods/sigmoid.rst", "array/array_methods/sign.rst", "array/array_methods/sin.rst", "array/array_methods/sinh.rst", "array/array_methods/softmax.rst", "array/array_methods/softplus.rst", "array/array_methods/solve.rst", "array/array_methods/sort.rst", "array/array_methods/sparse_cross_entropy.rst", "array/array_methods/split.rst", "array/array_methods/sqrt.rst", "array/array_methods/square.rst", "array/array_methods/squeeze.rst", "array/array_methods/stable_divide.rst", "array/array_methods/stable_pow.rst", "array/array_methods/stack.rst", "array/array_methods/std.rst", "array/array_methods/stop_gradient.rst", "array/array_methods/subtract.rst", "array/array_methods/sum.rst", "array/array_methods/supports_inplace.rst", "array/array_methods/svd.rst", "array/array_methods/svdvals.rst", "array/array_methods/swapaxes.rst", "array/array_methods/tan.rst", "array/array_methods/tanh.rst", "array/array_methods/tensordot.rst", "array/array_methods/tile.rst", "array/array_methods/to_device.rst", "array/array_methods/to_list.rst", "array/array_methods/to_numpy.rst", "array/array_methods/to_scalar.rst", "array/array_methods/trace.rst", "array/array_methods/tril.rst", "array/array_methods/triu.rst", "array/array_methods/trunc.rst", "array/array_methods/unique_all.rst", "array/array_methods/unique_counts.rst", "array/array_methods/unique_inverse.rst", "array/array_methods/unique_values.rst", "array/array_methods/unstack.rst", "array/array_methods/value_is_nan.rst", "array/array_methods/var.rst", "array/array_methods/variable.rst", "array/array_methods/variable_data.rst", "array/array_methods/vecdot.rst", "array/array_methods/vector_norm.rst", "array/array_methods/vector_to_skew_symmetric_matrix.rst", "array/array_methods/where.rst", "array/array_methods/zero_pad.rst", "array/array_methods/zeros_like.rst", "array/conversions.rst", "array/conversions/args_to_ivy.rst", "array/conversions/args_to_native.rst", "array/conversions/to_ivy.rst", "array/conversions/to_native.rst", "array/creation.rst", "array/creation/ArrayWithCreation.rst", "array/data_type.rst", "array/data_type/ArrayWithDataTypes.rst", "array/device.rst", "array/device/ArrayWithDevice.rst", "array/elementwise.rst", "array/elementwise/ArrayWithElementwise.rst", "array/general.rst", "array/general/ArrayWithGeneral.rst", "array/gradients.rst", "array/gradients/ArrayWithGradients.rst", "array/image.rst", "array/image/ArrayWithImage.rst", "array/layers.rst", "array/layers/ArrayWithLayers.rst", "array/linear_algebra.rst", "array/linear_algebra/ArrayWithLinearAlgebra.rst", "array/losses.rst", "array/losses/ArrayWithLosses.rst", "array/manipulation.rst", "array/manipulation/ArrayWithManipulation.rst", "array/norms.rst", "array/norms/ArrayWithNorms.rst", "array/random.rst", "array/random/ArrayWithRandom.rst", "array/searching.rst", "array/searching/ArrayWithSearching.rst", "array/set.rst", "array/set/ArrayWithSet.rst", "array/sorting.rst", "array/sorting/ArrayWithSorting.rst", "array/statistical.rst", "array/statistical/ArrayWithStatistical.rst", "array/utility.rst", "array/utility/ArrayWithUtility.rst", "array/wrapping.rst", "array/wrapping/add_ivy_array_instance_methods.rst", "backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/try_import_ivy_jax.rst", "backend_handler/try_import_ivy_mxnet.rst", "backend_handler/try_import_ivy_numpy.rst", "backend_handler/try_import_ivy_tf.rst", "backend_handler/try_import_ivy_torch.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "container/activations.rst", "container/activations/ContainerWithActivations.rst", "container/base.rst", "container/base/ContainerBase.rst", "container/container.rst", "container/container/Container.rst", "container/container_methods.rst", "container/container_methods/abs.rst", "container/container_methods/acos.rst", "container/container_methods/acosh.rst", "container/container_methods/adam_step.rst", "container/container_methods/adam_update.rst", "container/container_methods/add.rst", "container/container_methods/add_ivy_container_instance_methods.rst", "container/container_methods/all.rst", "container/container_methods/all_equal.rst", "container/container_methods/any.rst", "container/container_methods/argmax.rst", "container/container_methods/argmin.rst", "container/container_methods/argsort.rst", "container/container_methods/asin.rst", "container/container_methods/asinh.rst", "container/container_methods/assert_supports_inplace.rst", "container/container_methods/astype.rst", "container/container_methods/atan.rst", "container/container_methods/atan2.rst", "container/container_methods/atanh.rst", "container/container_methods/binary_cross_entropy.rst", "container/container_methods/bitwise_and.rst", "container/container_methods/bitwise_invert.rst", "container/container_methods/bitwise_left_shift.rst", "container/container_methods/bitwise_or.rst", "container/container_methods/bitwise_right_shift.rst", "container/container_methods/bitwise_xor.rst", "container/container_methods/broadcast_arrays.rst", "container/container_methods/broadcast_to.rst", "container/container_methods/can_cast.rst", "container/container_methods/ceil.rst", "container/container_methods/cholesky.rst", "container/container_methods/clip.rst", "container/container_methods/clip_matrix_norm.rst", "container/container_methods/clip_vector_norm.rst", "container/container_methods/concat.rst", "container/container_methods/constant_pad.rst", "container/container_methods/conv1d.rst", "container/container_methods/conv1d_transpose.rst", "container/container_methods/conv2d.rst", "container/container_methods/conv2d_transpose.rst", "container/container_methods/conv3d.rst", "container/container_methods/conv3d_transpose.rst", "container/container_methods/cos.rst", "container/container_methods/cosh.rst", "container/container_methods/cross.rst", "container/container_methods/cross_entropy.rst", "container/container_methods/cumprod.rst", "container/container_methods/cumsum.rst", "container/container_methods/depthwise_conv2d.rst", "container/container_methods/det.rst", "container/container_methods/dev.rst", "container/container_methods/diagonal.rst", "container/container_methods/divide.rst", "container/container_methods/dropout.rst", "container/container_methods/dtype.rst", "container/container_methods/eigh.rst", "container/container_methods/einops_rearrange.rst", "container/container_methods/einops_reduce.rst", "container/container_methods/einops_repeat.rst", "container/container_methods/einsum.rst", "container/container_methods/empty_like.rst", "container/container_methods/equal.rst", "container/container_methods/erf.rst", "container/container_methods/exp.rst", "container/container_methods/expand_dims.rst", "container/container_methods/expm1.rst", "container/container_methods/finfo.rst", "container/container_methods/flip.rst", "container/container_methods/floor.rst", "container/container_methods/floor_divide.rst", "container/container_methods/floormod.rst", "container/container_methods/fourier_encode.rst", "container/container_methods/from_dlpack.rst", "container/container_methods/full_like.rst", "container/container_methods/gather.rst", "container/container_methods/gather_nd.rst", "container/container_methods/gelu.rst", "container/container_methods/gradient_descent_update.rst", "container/container_methods/greater.rst", "container/container_methods/greater_equal.rst", "container/container_methods/has_nans.rst", "container/container_methods/iinfo.rst", "container/container_methods/indices_where.rst", "container/container_methods/inplace_decrement.rst", "container/container_methods/inplace_increment.rst", "container/container_methods/inplace_update.rst", "container/container_methods/inv.rst", "container/container_methods/is_array.rst", "container/container_methods/is_bool_dtype.rst", "container/container_methods/is_float_dtype.rst", "container/container_methods/is_int_dtype.rst", "container/container_methods/is_ivy_array.rst", "container/container_methods/is_ivy_container.rst", "container/container_methods/is_native_array.rst", "container/container_methods/is_uint_dtype.rst", "container/container_methods/is_variable.rst", "container/container_methods/isfinite.rst", "container/container_methods/isinf.rst", "container/container_methods/isnan.rst", "container/container_methods/lamb_update.rst", "container/container_methods/lars_update.rst", "container/container_methods/layer_norm.rst", "container/container_methods/leaky_relu.rst", "container/container_methods/less.rst", "container/container_methods/less_equal.rst", "container/container_methods/linear.rst", "container/container_methods/log.rst", "container/container_methods/log10.rst", "container/container_methods/log1p.rst", "container/container_methods/log2.rst", "container/container_methods/logaddexp.rst", "container/container_methods/logical_and.rst", "container/container_methods/logical_not.rst", "container/container_methods/logical_or.rst", "container/container_methods/logical_xor.rst", "container/container_methods/lstm_update.rst", "container/container_methods/matmul.rst", "container/container_methods/matrix_norm.rst", "container/container_methods/matrix_power.rst", "container/container_methods/matrix_rank.rst", "container/container_methods/matrix_transpose.rst", "container/container_methods/max.rst", "container/container_methods/maximum.rst", "container/container_methods/mean.rst", "container/container_methods/meshgrid.rst", "container/container_methods/min.rst", "container/container_methods/minimum.rst", "container/container_methods/multi_head_attention.rst", "container/container_methods/multinomial.rst", "container/container_methods/multiply.rst", "container/container_methods/native_array.rst", "container/container_methods/negative.rst", "container/container_methods/nonzero.rst", "container/container_methods/not_equal.rst", "container/container_methods/one_hot.rst", "container/container_methods/ones_like.rst", "container/container_methods/optimizer_update.rst", "container/container_methods/outer.rst", "container/container_methods/permute_dims.rst", "container/container_methods/positive.rst", "container/container_methods/pow.rst", "container/container_methods/prod.rst", "container/container_methods/qr.rst", "container/container_methods/randint.rst", "container/container_methods/random_normal.rst", "container/container_methods/random_uniform.rst", "container/container_methods/relu.rst", "container/container_methods/remainder.rst", "container/container_methods/repeat.rst", "container/container_methods/reshape.rst", "container/container_methods/result_type.rst", "container/container_methods/roll.rst", "container/container_methods/round.rst", "container/container_methods/scaled_dot_product_attention.rst", "container/container_methods/scatter_flat.rst", "container/container_methods/scatter_nd.rst", "container/container_methods/searchsorted.rst", "container/container_methods/shuffle.rst", "container/container_methods/sigmoid.rst", "container/container_methods/sign.rst", "container/container_methods/sin.rst", "container/container_methods/sinh.rst", "container/container_methods/slogdet.rst", "container/container_methods/softmax.rst", "container/container_methods/softplus.rst", "container/container_methods/solve.rst", "container/container_methods/sort.rst", "container/container_methods/sparse_cross_entropy.rst", "container/container_methods/split.rst", "container/container_methods/sqrt.rst", "container/container_methods/square.rst", "container/container_methods/squeeze.rst", "container/container_methods/stable_divide.rst", "container/container_methods/stable_pow.rst", "container/container_methods/stack.rst", "container/container_methods/static_abs.rst", "container/container_methods/static_acos.rst", "container/container_methods/static_acosh.rst", "container/container_methods/static_add.rst", "container/container_methods/static_all.rst", "container/container_methods/static_all_equal.rst", "container/container_methods/static_any.rst", "container/container_methods/static_arange.rst", "container/container_methods/static_argmax.rst", "container/container_methods/static_argmin.rst", "container/container_methods/static_argsort.rst", "container/container_methods/static_asarray.rst", "container/container_methods/static_asin.rst", "container/container_methods/static_asinh.rst", "container/container_methods/static_assert_supports_inplace.rst", "container/container_methods/static_astype.rst", "container/container_methods/static_atan.rst", "container/container_methods/static_atan2.rst", "container/container_methods/static_atanh.rst", "container/container_methods/static_binary_cross_entropy.rst", "container/container_methods/static_bitwise_and.rst", "container/container_methods/static_bitwise_invert.rst", "container/container_methods/static_bitwise_left_shift.rst", "container/container_methods/static_bitwise_or.rst", "container/container_methods/static_bitwise_right_shift.rst", "container/container_methods/static_bitwise_xor.rst", "container/container_methods/static_broadcast_arrays.rst", "container/container_methods/static_broadcast_to.rst", "container/container_methods/static_can_cast.rst", "container/container_methods/static_ceil.rst", "container/container_methods/static_cholesky.rst", "container/container_methods/static_clip.rst", "container/container_methods/static_clip_matrix_norm.rst", "container/container_methods/static_clip_vector_norm.rst", "container/container_methods/static_concat.rst", "container/container_methods/static_constant_pad.rst", "container/container_methods/static_conv1d.rst", "container/container_methods/static_conv1d_transpose.rst", "container/container_methods/static_conv2d.rst", "container/container_methods/static_conv2d_transpose.rst", "container/container_methods/static_conv3d.rst", "container/container_methods/static_conv3d_transpose.rst", "container/container_methods/static_cos.rst", "container/container_methods/static_cosh.rst", "container/container_methods/static_cross.rst", "container/container_methods/static_cross_entropy.rst", "container/container_methods/static_cumprod.rst", "container/container_methods/static_cumsum.rst", "container/container_methods/static_default_float_dtype.rst", "container/container_methods/static_depthwise_conv2d.rst", "container/container_methods/static_det.rst", "container/container_methods/static_dev.rst", "container/container_methods/static_diagonal.rst", "container/container_methods/static_divide.rst", "container/container_methods/static_dropout.rst", "container/container_methods/static_dtype.rst", "container/container_methods/static_einops_rearrange.rst", "container/container_methods/static_einops_reduce.rst", "container/container_methods/static_einops_repeat.rst", "container/container_methods/static_empty_like.rst", "container/container_methods/static_equal.rst", "container/container_methods/static_erf.rst", "container/container_methods/static_exp.rst", "container/container_methods/static_expand_dims.rst", "container/container_methods/static_expm1.rst", "container/container_methods/static_eye.rst", "container/container_methods/static_finfo.rst", "container/container_methods/static_flip.rst", "container/container_methods/static_floor.rst", "container/container_methods/static_floor_divide.rst", "container/container_methods/static_floormod.rst", "container/container_methods/static_fourier_encode.rst", "container/container_methods/static_from_dlpack.rst", "container/container_methods/static_full_like.rst", "container/container_methods/static_function_supported_dtypes.rst", "container/container_methods/static_function_unsupported_dtypes.rst", "container/container_methods/static_gather.rst", "container/container_methods/static_gather_nd.rst", "container/container_methods/static_gelu.rst", "container/container_methods/static_greater.rst", "container/container_methods/static_greater_equal.rst", "container/container_methods/static_has_nans.rst", "container/container_methods/static_iinfo.rst", "container/container_methods/static_indices_where.rst", "container/container_methods/static_inplace_decrement.rst", "container/container_methods/static_inplace_increment.rst", "container/container_methods/static_inplace_update.rst", "container/container_methods/static_inv.rst", "container/container_methods/static_is_array.rst", "container/container_methods/static_is_bool_dtype.rst", "container/container_methods/static_is_float_dtype.rst", "container/container_methods/static_is_int_dtype.rst", "container/container_methods/static_is_ivy_array.rst", "container/container_methods/static_is_ivy_container.rst", "container/container_methods/static_is_native_array.rst", "container/container_methods/static_is_uint_dtype.rst", "container/container_methods/static_is_variable.rst", "container/container_methods/static_isfinite.rst", "container/container_methods/static_isinf.rst", "container/container_methods/static_isnan.rst", "container/container_methods/static_leaky_relu.rst", "container/container_methods/static_less.rst", "container/container_methods/static_less_equal.rst", "container/container_methods/static_linear.rst", "container/container_methods/static_linspace.rst", "container/container_methods/static_log.rst", "container/container_methods/static_log10.rst", "container/container_methods/static_log1p.rst", "container/container_methods/static_log2.rst", "container/container_methods/static_logaddexp.rst", "container/container_methods/static_logical_and.rst", "container/container_methods/static_logical_not.rst", "container/container_methods/static_logical_or.rst", "container/container_methods/static_logical_xor.rst", "container/container_methods/static_logspace.rst", "container/container_methods/static_lstm_update.rst", "container/container_methods/static_matrix_norm.rst", "container/container_methods/static_matrix_power.rst", "container/container_methods/static_matrix_rank.rst", "container/container_methods/static_matrix_transpose.rst", "container/container_methods/static_maximum.rst", "container/container_methods/static_meshgrid.rst", "container/container_methods/static_minimum.rst", "container/container_methods/static_multi_head_attention.rst", "container/container_methods/static_multinomial.rst", "container/container_methods/static_multiply.rst", "container/container_methods/static_native_array.rst", "container/container_methods/static_negative.rst", "container/container_methods/static_nonzero.rst", "container/container_methods/static_not_equal.rst", "container/container_methods/static_one_hot.rst", "container/container_methods/static_ones.rst", "container/container_methods/static_ones_like.rst", "container/container_methods/static_outer.rst", "container/container_methods/static_permute_dims.rst", "container/container_methods/static_positive.rst", "container/container_methods/static_pow.rst", "container/container_methods/static_qr.rst", "container/container_methods/static_randint.rst", "container/container_methods/static_random_normal.rst", "container/container_methods/static_random_uniform.rst", "container/container_methods/static_relu.rst", "container/container_methods/static_remainder.rst", "container/container_methods/static_repeat.rst", "container/container_methods/static_reshape.rst", "container/container_methods/static_result_type.rst", "container/container_methods/static_roll.rst", "container/container_methods/static_round.rst", "container/container_methods/static_scaled_dot_product_attention.rst", "container/container_methods/static_scatter_flat.rst", "container/container_methods/static_scatter_nd.rst", "container/container_methods/static_searchsorted.rst", "container/container_methods/static_shuffle.rst", "container/container_methods/static_sigmoid.rst", "container/container_methods/static_sign.rst", "container/container_methods/static_sin.rst", "container/container_methods/static_sinh.rst", "container/container_methods/static_slogdet.rst", "container/container_methods/static_softmax.rst", "container/container_methods/static_softplus.rst", "container/container_methods/static_solve.rst", "container/container_methods/static_sort.rst", "container/container_methods/static_sparse_cross_entropy.rst", "container/container_methods/static_split.rst", "container/container_methods/static_sqrt.rst", "container/container_methods/static_square.rst", "container/container_methods/static_squeeze.rst", "container/container_methods/static_stable_divide.rst", "container/container_methods/static_stable_pow.rst", "container/container_methods/static_stack.rst", "container/container_methods/static_stop_gradient.rst", "container/container_methods/static_subtract.rst", "container/container_methods/static_supports_inplace_update.rst", "container/container_methods/static_svd.rst", "container/container_methods/static_svdvals.rst", "container/container_methods/static_swapaxes.rst", "container/container_methods/static_tan.rst", "container/container_methods/static_tanh.rst", "container/container_methods/static_tensordot.rst", "container/container_methods/static_tile.rst", "container/container_methods/static_to_device.rst", "container/container_methods/static_to_ivy.rst", "container/container_methods/static_to_list.rst", "container/container_methods/static_to_native.rst", "container/container_methods/static_to_numpy.rst", "container/container_methods/static_to_scalar.rst", "container/container_methods/static_trace.rst", "container/container_methods/static_tril.rst", "container/container_methods/static_triu.rst", "container/container_methods/static_trunc.rst", "container/container_methods/static_unique_all.rst", "container/container_methods/static_unique_counts.rst", "container/container_methods/static_unique_inverse.rst", "container/container_methods/static_unique_values.rst", "container/container_methods/static_unstack.rst", "container/container_methods/static_value_is_nan.rst", "container/container_methods/static_var.rst", "container/container_methods/static_variable.rst", "container/container_methods/static_variable_data.rst", "container/container_methods/static_vecdot.rst", "container/container_methods/static_vector_norm.rst", "container/container_methods/static_vector_to_skew_symmetric_matrix.rst", "container/container_methods/static_where.rst", "container/container_methods/static_zero_pad.rst", "container/container_methods/static_zeros.rst", "container/container_methods/static_zeros_like.rst", "container/container_methods/std.rst", "container/container_methods/stop_gradient.rst", "container/container_methods/subtract.rst", "container/container_methods/sum.rst", "container/container_methods/supports_inplace_update.rst", "container/container_methods/svd.rst", "container/container_methods/svdvals.rst", "container/container_methods/swapaxes.rst", "container/container_methods/tan.rst", "container/container_methods/tanh.rst", "container/container_methods/tensordot.rst", "container/container_methods/tile.rst", "container/container_methods/to_device.rst", "container/container_methods/to_ivy.rst", "container/container_methods/to_list.rst", "container/container_methods/to_native.rst", "container/container_methods/to_numpy.rst", "container/container_methods/to_scalar.rst", "container/container_methods/trace.rst", "container/container_methods/tril.rst", "container/container_methods/triu.rst", "container/container_methods/trunc.rst", "container/container_methods/unique_all.rst", "container/container_methods/unique_counts.rst", "container/container_methods/unique_inverse.rst", "container/container_methods/unique_values.rst", "container/container_methods/unstack.rst", "container/container_methods/value_is_nan.rst", "container/container_methods/var.rst", "container/container_methods/variable.rst", "container/container_methods/variable_data.rst", "container/container_methods/vecdot.rst", "container/container_methods/vector_norm.rst", "container/container_methods/vector_to_skew_symmetric_matrix.rst", "container/container_methods/where.rst", "container/container_methods/zero_pad.rst", "container/container_methods/zeros_like.rst", "container/conversions.rst", "container/conversions/ContainerWithConversions.rst", "container/creation.rst", "container/creation/ContainerWithCreation.rst", "container/data_type.rst", "container/data_type/ContainerWithDataTypes.rst", "container/device.rst", "container/device/ContainerWithDevice.rst", "container/elementwise.rst", "container/elementwise/ContainerWithElementwise.rst", "container/general.rst", "container/general/ContainerWithGeneral.rst", "container/gradients.rst", "container/gradients/ContainerWithGradients.rst", "container/image.rst", "container/image/ContainerWithImage.rst", "container/layers.rst", "container/layers/ContainerWithLayers.rst", "container/linear_algebra.rst", "container/linear_algebra/ContainerWithLinearAlgebra.rst", "container/losses.rst", "container/losses/ContainerWithLosses.rst", "container/manipulation.rst", "container/manipulation/ContainerWithManipulation.rst", "container/norms.rst", "container/norms/ContainerWithNorms.rst", "container/random.rst", "container/random/ContainerWithRandom.rst", "container/searching.rst", "container/searching/ContainerWithSearching.rst", "container/set.rst", "container/set/ContainerWithSet.rst", "container/sorting.rst", "container/sorting/ContainerWithSorting.rst", "container/statistical.rst", "container/statistical/ContainerWithStatistical.rst", "container/utility.rst", "container/utility/ContainerWithUtility.rst", "container/wrapping.rst", "container/wrapping/add_ivy_container_instance_methods.rst", "contributing.rst", "contributing/0_setting_up.rst", "contributing/1_the_basics.rst", "contributing/4_open_tasks.rst", "contributing/5_applied_libraries.rst", "contributing/building_the_docs.rst", "deep_dive.rst", "deep_dive/0_navigating_the_code.rst", "deep_dive/10_formatting.rst", "deep_dive/11_function_arguments.rst", "deep_dive/12_docstrings.rst", "deep_dive/13_docstring_examples.rst", "deep_dive/14_array_api_tests.rst", "deep_dive/15_ivy_tests.rst", "deep_dive/16_ivy_frontends.rst", "deep_dive/17_ivy_frontends_tests.rst", "deep_dive/1_function_types.rst", "deep_dive/2_superset_behaviour.rst", "deep_dive/3_backend_setting.rst", "deep_dive/4_function_wrapping.rst", "deep_dive/5_arrays.rst", "deep_dive/6_containers.rst", "deep_dive/7_data_types.rst", "deep_dive/8_devices.rst", "deep_dive/9_inplace_updates.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floormod.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/arrays_equal.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/copy_array.rst", "functional/ivy/general/cumprod.rst", "functional/ivy/general/cumsum.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/indices_where.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/one_hot.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/supports_inplace.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/unstack.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_indices_where.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/where.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/var.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/any.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["Activations", "ArrayWithActivations", "Array", "Array", "Variable", "Array methods", "abs array", "acos array", "acosh array", "adam_step array", "adam_update array", "add array", "add_ivy_array_instance_methods array", "all array", "all_equal array", "any array", "argmax array", "argmin array", "argsort array", "array_equal array", "arrays_equal array", "asarray array", "asin array", "asinh array", "assert_supports_inplace array", "astype array", "atan array", "atan2 array", "atanh array", "binary_cross_entropy array", "bitwise_and array", "bitwise_invert array", "bitwise_left_shift array", "bitwise_or array", "bitwise_right_shift array", "bitwise_xor array", "broadcast_arrays array", "broadcast_to array", "can_cast array", "ceil array", "cholesky array", "clip array", "clip_matrix_norm array", "clip_vector_norm array", "concat array", "constant_pad array", "conv1d array", "conv1d_transpose array", "conv2d array", "conv3d array", "conv3d_transpose array", "copy_array array", "cos array", "cosh array", "cross array", "cross_entropy array", "cumprod array", "cumsum array", "default array", "depthwise_conv2d array", "det array", "dev array", "diagonal array", "divide array", "dropout array", "dtype array", "eigh array", "eigvalsh array", "einops_rearrange array", "einops_reduce array", "einops_repeat array", "einsum array", "empty_like array", "equal array", "erf array", "exists array", "exp array", "expand_dims array", "expm1 array", "finfo array", "flip array", "floor array", "floor_divide array", "floormod array", "fourier_encode array", "from_dlpack array", "full_like array", "gather array", "gather_nd array", "gelu array", "get_num_dims array", "gradient_descent_update array", "greater array", "greater_equal array", "has_nans array", "iinfo array", "indices_where array", "inplace_decrement array", "inplace_increment array", "inplace_update array", "inv array", "is_array array", "is_bool_dtype array", "is_float_dtype array", "is_int_dtype array", "is_ivy_array array", "is_ivy_container array", "is_native_array array", "is_uint_dtype array", "is_variable array", "isfinite array", "isinf array", "isnan array", "lamb_update array", "lars_update array", "layer_norm array", "leaky_relu array", "less array", "less_equal array", "linear array", "log array", "log10 array", "log1p array", "log2 array", "logaddexp array", "logical_and array", "logical_not array", "logical_or array", "logical_xor array", "lstm_update array", "matmul array", "matrix_norm array", "matrix_rank array", "matrix_transpose array", "max array", "mean array", "meshgrid array", "min array", "multi_head_attention array", "multinomial array", "multiply array", "native_array array", "negative array", "nonzero array", "not_equal array", "one_hot array", "ones_like array", "optimizer_update array", "outer array", "permute_dims array", "pinv array", "positive array", "pow array", "prod array", "qr array", "randint array", "random_normal array", "random_uniform array", "relu array", "remainder array", "repeat array", "reshape array", "result_type array", "roll array", "round array", "scaled_dot_product_attention array", "scatter_flat array", "scatter_nd array", "searchsorted array", "shuffle array", "sigmoid array", "sign array", "sin array", "sinh array", "softmax array", "softplus array", "solve array", "sort array", "sparse_cross_entropy array", "split array", "sqrt array", "square array", "squeeze array", "stable_divide array", "stable_pow array", "stack array", "std array", "stop_gradient array", "subtract array", "sum array", "supports_inplace array", "svd array", "svdvals array", "swapaxes array", "tan array", "tanh array", "tensordot array", "tile array", "to_device array", "to_list array", "to_numpy array", "to_scalar array", "trace array", "tril array", "triu array", "trunc array", "unique_all array", "unique_counts array", "unique_inverse array", "unique_values array", "unstack array", "value_is_nan array", "var array", "variable array", "variable_data array", "vecdot array", "vector_norm array", "vector_to_skew_symmetric_matrix array", "where array", "zero_pad array", "zeros_like array", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "try_import_ivy_jax", "try_import_ivy_mxnet", "try_import_ivy_numpy", "try_import_ivy_tf", "try_import_ivy_torch", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "Container", "Container methods", "abs container", "acos container", "acosh container", "adam_step container", "adam_update container", "add container", "add_ivy_container_instance_methods container", "all container", "all_equal container", "any container", "argmax container", "argmin container", "argsort container", "asin container", "asinh container", "assert_supports_inplace container", "astype container", "atan container", "atan2 container", "atanh container", "binary_cross_entropy container", "bitwise_and container", "bitwise_invert container", "bitwise_left_shift container", "bitwise_or container", "bitwise_right_shift container", "bitwise_xor container", "broadcast_arrays container", "broadcast_to container", "can_cast container", "ceil container", "cholesky container", "clip container", "clip_matrix_norm container", "clip_vector_norm container", "concat container", "constant_pad container", "conv1d container", "conv1d_transpose container", "conv2d container", "conv2d_transpose container", "conv3d container", "conv3d_transpose container", "cos container", "cosh container", "cross container", "cross_entropy container", "cumprod container", "cumsum container", "depthwise_conv2d container", "det container", "dev container", "diagonal container", "divide container", "dropout container", "dtype container", "eigh container", "einops_rearrange container", "einops_reduce container", "einops_repeat container", "einsum container", "empty_like container", "equal container", "erf container", "exp container", "expand_dims container", "expm1 container", "finfo container", "flip container", "floor container", "floor_divide container", "floormod container", "fourier_encode container", "from_dlpack container", "full_like container", "gather container", "gather_nd container", "gelu container", "gradient_descent_update container", "greater container", "greater_equal container", "has_nans container", "iinfo container", "indices_where container", "inplace_decrement container", "inplace_increment container", "inplace_update container", "inv container", "is_array container", "is_bool_dtype container", "is_float_dtype container", "is_int_dtype container", "is_ivy_array container", "is_ivy_container container", "is_native_array container", "is_uint_dtype container", "is_variable container", "isfinite container", "isinf container", "isnan container", "lamb_update container", "lars_update container", "layer_norm container", "leaky_relu container", "less container", "less_equal container", "linear container", "log container", "log10 container", "log1p container", "log2 container", "logaddexp container", "logical_and container", "logical_not container", "logical_or container", "logical_xor container", "lstm_update container", "matmul container", "matrix_norm container", "matrix_power container", "matrix_rank container", "matrix_transpose container", "max container", "maximum container", "mean container", "meshgrid container", "min container", "minimum container", "multi_head_attention container", "multinomial container", "multiply container", "native_array container", "negative container", "nonzero container", "not_equal container", "one_hot container", "ones_like container", "optimizer_update container", "outer container", "permute_dims container", "positive container", "pow container", "prod container", "qr container", "randint container", "random_normal container", "random_uniform container", "relu container", "remainder container", "repeat container", "reshape container", "result_type container", "roll container", "round container", "scaled_dot_product_attention container", "scatter_flat container", "scatter_nd container", "searchsorted container", "shuffle container", "sigmoid container", "sign container", "sin container", "sinh container", "slogdet container", "softmax container", "softplus container", "solve container", "sort container", "sparse_cross_entropy container", "split container", "sqrt container", "square container", "squeeze container", "stable_divide container", "stable_pow container", "stack container", "static_abs container", "static_acos container", "static_acosh container", "static_add container", "static_all container", "static_all_equal container", "static_any container", "static_arange container", "static_argmax container", "static_argmin container", "static_argsort container", "static_asarray container", "static_asin container", "static_asinh container", "static_assert_supports_inplace container", "static_astype container", "static_atan container", "static_atan2 container", "static_atanh container", "static_binary_cross_entropy container", "static_bitwise_and container", "static_bitwise_invert container", "static_bitwise_left_shift container", "static_bitwise_or container", "static_bitwise_right_shift container", "static_bitwise_xor container", "static_broadcast_arrays container", "static_broadcast_to container", "static_can_cast container", "static_ceil container", "static_cholesky container", "static_clip container", "static_clip_matrix_norm container", "static_clip_vector_norm container", "static_concat container", "static_constant_pad container", "static_conv1d container", "static_conv1d_transpose container", "static_conv2d container", "static_conv2d_transpose container", "static_conv3d container", "static_conv3d_transpose container", "static_cos container", "static_cosh container", "static_cross container", "static_cross_entropy container", "static_cumprod container", "static_cumsum container", "static_default_float_dtype container", "static_depthwise_conv2d container", "static_det container", "static_dev container", "static_diagonal container", "static_divide container", "static_dropout container", "static_dtype container", "static_einops_rearrange container", "static_einops_reduce container", "static_einops_repeat container", "static_empty_like container", "static_equal container", "static_erf container", "static_exp container", "static_expand_dims container", "static_expm1 container", "static_eye container", "static_finfo container", "static_flip container", "static_floor container", "static_floor_divide container", "static_floormod container", "static_fourier_encode container", "static_from_dlpack container", "static_full_like container", "static_function_supported_dtypes container", "static_function_unsupported_dtypes container", "static_gather container", "static_gather_nd container", "static_gelu container", "static_greater container", "static_greater_equal container", "static_has_nans container", "static_iinfo container", "static_indices_where container", "static_inplace_decrement container", "static_inplace_increment container", "static_inplace_update container", "static_inv container", "static_is_array container", "static_is_bool_dtype container", "static_is_float_dtype container", "static_is_int_dtype container", "static_is_ivy_array container", "static_is_ivy_container container", "static_is_native_array container", "static_is_uint_dtype container", "static_is_variable container", "static_isfinite container", "static_isinf container", "static_isnan container", "static_leaky_relu container", "static_less container", "static_less_equal container", "static_linear container", "static_linspace container", "static_log container", "static_log10 container", "static_log1p container", "static_log2 container", "static_logaddexp container", "static_logical_and container", "static_logical_not container", "static_logical_or container", "static_logical_xor container", "static_logspace container", "static_lstm_update container", "static_matrix_norm container", "static_matrix_power container", "static_matrix_rank container", "static_matrix_transpose container", "static_maximum container", "static_meshgrid container", "static_minimum container", "static_multi_head_attention container", "static_multinomial container", "static_multiply container", "static_native_array container", "static_negative container", "static_nonzero container", "static_not_equal container", "static_one_hot container", "static_ones container", "static_ones_like container", "static_outer container", "static_permute_dims container", "static_positive container", "static_pow container", "static_qr container", "static_randint container", "static_random_normal container", "static_random_uniform container", "static_relu container", "static_remainder container", "static_repeat container", "static_reshape container", "static_result_type container", "static_roll container", "static_round container", "static_scaled_dot_product_attention container", "static_scatter_flat container", "static_scatter_nd container", "static_searchsorted container", "static_shuffle container", "static_sigmoid container", "static_sign container", "static_sin container", "static_sinh container", "static_slogdet container", "static_softmax container", "static_softplus container", "static_solve container", "static_sort container", "static_sparse_cross_entropy container", "static_split container", "static_sqrt container", "static_square container", "static_squeeze container", "static_stable_divide container", "static_stable_pow container", "static_stack container", "static_stop_gradient container", "static_subtract container", "static_supports_inplace_update container", "static_svd container", "static_svdvals container", "static_swapaxes container", "static_tan container", "static_tanh container", "static_tensordot container", "static_tile container", "static_to_device container", "static_to_ivy container", "static_to_list container", "static_to_native container", "static_to_numpy container", "static_to_scalar container", "static_trace container", "static_tril container", "static_triu container", "static_trunc container", "static_unique_all container", "static_unique_counts container", "static_unique_inverse container", "static_unique_values container", "static_unstack container", "static_value_is_nan container", "static_var container", "static_variable container", "static_variable_data container", "static_vecdot container", "static_vector_norm container", "static_vector_to_skew_symmetric_matrix container", "static_where container", "static_zero_pad container", "static_zeros container", "static_zeros_like container", "std container", "stop_gradient container", "subtract container", "sum container", "supports_inplace_update container", "svd container", "svdvals container", "swapaxes container", "tan container", "tanh container", "tensordot container", "tile container", "to_device container", "to_ivy container", "to_list container", "to_native container", "to_numpy container", "to_scalar container", "trace container", "tril container", "triu container", "trunc container", "unique_all container", "unique_counts container", "unique_inverse container", "unique_values container", "unstack container", "value_is_nan container", "var container", "variable container", "variable_data container", "vecdot container", "vector_norm container", "vector_to_skew_symmetric_matrix container", "where container", "zero_pad container", "zeros_like container", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Contributing", "Setting Up", "The Basics", "Open Tasks", "Ivy Applied Libraries Development Guide", "Building the Docs", "Deep Dive", "Navigating the Code", "Formatting", "Function Arguments", "Docstrings", "Docstring Examples", "Array API Tests", "Ivy Tests", "Ivy Frontends", "Ivy Frontend Tests", "Function Types", "Superset Behaviour", "Backend Setting", "Function Wrapping", "Arrays", "Containers", "Data Types", "Devices", "Inplace Updates", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "leaky_relu", "relu", "sigmoid", "softmax", "softplus", "Compilation", "compile", "Constants", "Creation", "arange", "asarray", "empty", "empty_like", "eye", "from_dlpack", "full", "full_like", "linspace", "logspace", "meshgrid", "native_array", "ones", "ones_like", "tril", "triu", "zeros", "zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "broadcast_arrays", "broadcast_to", "can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "dtype_bits", "finfo", "function_supported_dtypes", "function_unsupported_dtypes", "iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "is_float_dtype", "is_int_dtype", "is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atan2", "atanh", "bitwise_and", "bitwise_invert", "bitwise_left_shift", "bitwise_or", "bitwise_right_shift", "bitwise_xor", "ceil", "cos", "cosh", "divide", "equal", "erf", "exp", "expm1", "floor", "floor_divide", "floormod", "greater", "greater_equal", "isfinite", "isinf", "isnan", "less", "less_equal", "log", "log10", "log1p", "log2", "logaddexp", "logical_and", "logical_not", "logical_or", "logical_xor", "maximum", "minimum", "multiply", "negative", "not_equal", "positive", "pow", "reciprocal", "remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "sign", "sin", "sinh", "sqrt", "square", "subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "tanh", "trunc", "Extensions", "General", "all_equal", "arg_info", "arg_names", "array_equal", "arrays_equal", "assert_supports_inplace", "cache_fn", "clip_matrix_norm", "clip_vector_norm", "container_types", "copy_array", "cumprod", "cumsum", "current_backend_str", "default", "einops_rearrange", "einops_reduce", "einops_repeat", "exists", "fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_tmp_dir", "has_nans", "indices_where", "inplace_arrays_supported", "inplace_decrement", "inplace_increment", "inplace_update", "inplace_variables_supported", "is_array", "ivy.Container.is_array", "ivy.is_array", "is_ivy_array", "is_ivy_container", "is_native_array", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "one_hot", "print_all_arrays_in_memory", "scatter_flat", "scatter_nd", "set_array_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "stable_pow", "supports_inplace", "to_ivy_shape", "to_list", "to_native_shape", "to_numpy", "to_scalar", "try_else_none", "unset_array_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "unstack", "value_is_nan", "vmap", "Gradients", "adam_step", "adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "is_variable", "jac", "lamb_update", "lars_update", "optimizer_update", "set_with_grads", "stop_gradient", "unset_with_grads", "value_and_grad", "variable", "variable_data", "with_grads", "Layers", "conv1d", "conv1d_transpose", "conv2d", "conv2d_transpose", "conv3d", "conv3d_transpose", "deconv_length", "depthwise_conv2d", "dropout", "handle_padding", "linear", "lstm_update", "multi_head_attention", "scaled_dot_product_attention", "Linear algebra", "cholesky", "cross", "det", "diagonal", "eigh", "eigvalsh", "inv", "matmul", "matrix_norm", "matrix_power", "matrix_rank", "matrix_transpose", "outer", "pinv", "qr", "slogdet", "solve", "svd", "svdvals", "tensordot", "trace", "vecdot", "vector_norm", "vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "cross_entropy", "sparse_cross_entropy", "Manipulation", "clip", "concat", "constant_pad", "expand_dims", "flip", "permute_dims", "repeat", "reshape", "roll", "split", "squeeze", "stack", "swapaxes", "tile", "zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_indices_where", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "Random", "multinomial", "randint", "random_normal", "random_uniform", "seed", "shuffle", "Searching", "argmax", "argmin", "nonzero", "where", "Set", "unique_all", "unique_counts", "unique_inverse", "unique_values", "Sorting", "argsort", "searchsorted", "sort", "Statistical", "einsum", "max", "mean", "min", "prod", "std", "sum", "var", "Utility", "all", "any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"class": [0, 1, 2, 3, 4, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 751, 753, 757, 758, 759, 761, 768, 769, 770, 771, 774, 775, 777, 778, 779, 789, 790, 791, 1180, 1181], "ivi": [0, 1, 2, 3, 4, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 280, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 753, 754, 756, 757, 758, 760, 764, 766, 767, 769, 770, 771, 772, 773, 789, 791, 1180, 1181, 1187], "arrai": [0, 1, 4, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 750, 751, 754, 755, 756, 758, 759, 761, 762, 763, 764, 766, 767, 769, 771, 772, 773, 774, 775, 777, 778, 779, 791, 1180, 1181], "arraywithactiv": [0, 2, 3, 776], "sourc": [0, 1, 2, 3, 4, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 279, 280, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 748, 749, 750, 752, 753, 768, 769, 1181], "base": [0, 1, 2, 3, 4, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 750, 755, 757, 761, 763, 767, 769, 774, 790], "abc": [0, 1, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 284, 285, 776], "gelu": [0, 1, 282, 283], "approxim": [0, 1, 242, 243, 282, 283, 758], "true": [0, 1, 2, 3, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 756, 759, 761, 762, 763, 764, 769, 770, 772, 774, 777, 778, 779], "out": [0, 1, 2, 3, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 279, 280, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 748, 749, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 773, 774, 776, 777, 778, 779, 790, 1181], "none": [0, 1, 2, 3, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 752, 755, 756, 757, 759, 760, 761, 762, 763, 764, 766, 769, 770, 771, 772, 774, 776, 778, 779], "instanc": [0, 1, 2, 3, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 750, 751, 752, 757, 758, 759, 761, 762, 763, 764, 767, 768, 770, 772, 777, 778, 779, 1180], "method": [0, 1, 2, 3, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 750, 751, 755, 756, 757, 758, 759, 761, 764, 767, 768, 770, 774, 775, 778, 779, 791, 1181], "variant": [0, 1, 2, 3, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 758, 759], "thi": [0, 1, 2, 3, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 279, 280, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 790, 791, 1181, 1187], "simpli": [0, 1, 2, 3, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 750, 751, 757, 758, 759, 761, 762, 764, 766, 768, 769, 770, 771, 772, 774, 778, 779, 791, 1180], "wrap": [0, 1, 2, 3, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 747, 754, 757, 758, 761, 762, 764, 766, 768, 769, 770, 771, 772, 774, 776, 779, 791, 1180], "function": [0, 1, 2, 3, 221, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 279, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 750, 753, 754, 756, 758, 759, 760, 762, 763, 766, 768, 772, 773, 775, 776, 777, 778, 789, 790, 1180, 1181], "so": [0, 1, 2, 3, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 279, 280, 282, 283, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 750, 751, 755, 756, 757, 758, 759, 761, 762, 763, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 791, 1181], "docstr": [0, 1, 2, 3, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 751, 753, 754, 755, 756, 757, 762, 764], "also": [0, 1, 2, 3, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 279, 280, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 748, 749, 750, 751, 752, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 770, 771, 772, 774, 777, 778, 779, 790, 791], "appli": [0, 1, 2, 3, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 748, 749, 750, 751, 755, 757, 758, 759, 761, 762, 764, 767, 769, 770, 771, 772, 776, 777, 778, 779, 789, 791, 1180, 1181], "minim": [0, 1, 2, 3, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 758, 772, 774], "chang": [0, 1, 2, 3, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 281, 282, 283, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 750, 751, 752, 753, 758, 759, 760, 761, 762, 766, 769, 774, 778, 791, 1181, 1187], "exampl": [0, 1, 2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 281, 282, 283, 710, 711, 712, 713, 716, 717, 746, 747, 749, 750, 751, 754, 755, 756, 758, 760, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 791, 1181], "x": [0, 1, 2, 3, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 769, 770, 772, 774, 776, 777, 778, 779, 1181], "0": [0, 1, 2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 750, 755, 758, 759, 761, 762, 763, 766, 770, 774, 776, 777, 778, 779, 791, 1181], "3": [0, 1, 2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 247, 250, 251, 254, 255, 258, 259, 282, 283, 710, 711, 712, 713, 716, 717, 749, 753, 759, 760, 761, 766, 769, 770, 774, 776, 777, 778, 779, 1181], "1": [0, 1, 2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 280, 281, 282, 283, 284, 285, 710, 711, 712, 713, 716, 717, 750, 751, 752, 753, 756, 757, 759, 760, 761, 762, 763, 764, 766, 769, 770, 772, 773, 774, 776, 777, 778, 779, 791, 1181], "y": [0, 1, 2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 710, 711, 712, 713, 716, 717, 755, 759, 762, 766, 769, 774, 776], "print": [0, 1, 2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 282, 283, 284, 285, 710, 711, 712, 713, 716, 717, 746, 747, 749, 750, 759, 760, 761, 769, 774, 776, 777, 778, 1181], "185": [0, 1, 282, 283], "046": [0, 1, 282, 283], "return": [0, 1, 2, 3, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 750, 755, 756, 757, 758, 759, 761, 762, 763, 764, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 791, 1181], "type": [0, 1, 2, 3, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 282, 283, 284, 285, 708, 709, 710, 711, 713, 714, 715, 716, 717, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 761, 763, 767, 768, 769, 771, 772, 774, 776, 777, 1181], "leaky_relu": [0, 1, 282, 283, 761, 1181], "alpha": [0, 1, 282, 283, 761, 762], "2": [0, 1, 2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 710, 711, 712, 713, 716, 717, 749, 750, 751, 753, 757, 759, 761, 766, 769, 770, 772, 773, 774, 776, 777, 778, 779, 791, 1181], "39": [0, 1, 232, 233, 250, 251, 282, 283, 716, 717], "85": [0, 1, 250, 251, 282, 283, 716, 717], "17": [0, 1, 282, 283, 759, 769], "relu": [0, 1, 262, 263, 282, 283, 763, 777, 778, 1181], "sigmoid": [0, 1, 282, 283, 774, 777, 778, 1181], "269": [0, 1, 282, 283], "731": [0, 1, 282, 283], "881": [0, 1, 232, 233, 282, 283, 716, 717], "softmax": [0, 1, 262, 263, 282, 283, 1181], "axi": [0, 1, 234, 235, 242, 243, 244, 245, 246, 247, 252, 253, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 710, 711, 757, 759, 761, 762, 764, 769, 770, 772, 774, 776, 779, 790], "422": [0, 1, 282, 283], "155": [0, 1, 282, 283], "softplu": [0, 1, 282, 283, 1181], "3461": [0, 1, 282, 283], "6491": [0, 1, 282, 283], "535": [0, 1, 282, 283], "42": [0, 1, 250, 251, 282, 283, 774, 779], "activ": [1, 262, 263, 283, 746, 747, 749, 750, 752, 753, 755, 778, 1181], "support": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 231, 233, 234, 235, 236, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 713, 714, 715, 717, 719, 721, 723, 725, 727, 729, 731, 733, 735, 737, 739, 741, 743, 745, 747, 749, 757, 758, 759, 760, 761, 763, 764, 767, 768, 769, 771, 772, 773, 774, 776, 777, 779, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805, 806, 807, 808, 809, 810, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1185, 1186, 1187, 1189, 1190, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1229], "framework": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 233, 235, 236, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 257, 259, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 713, 715, 717, 719, 721, 723, 725, 727, 729, 731, 733, 735, 737, 739, 741, 743, 745, 747, 749, 751, 754, 757, 759, 760, 763, 764, 766, 767, 768, 770, 771, 773, 774, 776, 779, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 805, 806, 807, 808, 809, 810, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1185, 1186, 1187, 1189, 1190, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1218, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1229], "data": [2, 3, 4, 226, 227, 229, 232, 233, 234, 235, 236, 237, 242, 243, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 278, 280, 284, 285, 710, 711, 713, 716, 717, 749, 754, 755, 757, 758, 763, 764, 767, 769, 771, 772, 774, 776, 1180, 1181, 1187], "arraywithcr": [2, 3, 226, 776], "arraywithdatatyp": [2, 3, 228, 776], "arraywithdevic": [2, 3, 230, 776], "arraywithelementwis": [2, 3, 232, 751, 768, 776], "arraywithgener": [2, 3, 234, 776], "arraywithgradi": [2, 3, 236, 776], "arraywithimag": [2, 3, 238, 776], "arraywithlay": [2, 3, 240, 776], "arraywithlinearalgebra": [2, 3, 242, 776], "arraywithloss": [2, 3, 244, 776], "arraywithmanipul": [2, 3, 246, 776], "arraywithnorm": [2, 3, 248, 776], "arraywithrandom": [2, 3, 250, 776], "arraywithsearch": [2, 3, 252, 776], "arraywithset": [2, 3, 254, 776], "arraywithsort": [2, 3, 256, 776], "arraywithstatist": [2, 3, 258, 776], "arraywithutil": [2, 3, 260, 776], "properti": [2, 3, 284, 285, 759, 761, 763, 764, 769, 776, 777, 778], "t": [2, 3, 262, 263, 280, 281, 746, 747, 749, 750, 751, 752, 753, 759, 761, 762, 766, 767, 770, 772, 774, 776, 777, 778, 779, 791], "__add__": [2, 3, 757, 758, 759, 768, 769, 776], "other": [2, 3, 228, 229, 234, 235, 258, 259, 280, 284, 285, 712, 713, 716, 717, 749, 750, 751, 752, 755, 756, 758, 759, 760, 761, 762, 763, 764, 768, 769, 772, 774, 776, 778, 779, 789, 790, 791, 1180, 1181], "special": [2, 3, 258, 259, 751, 755, 757, 758, 759, 762, 768, 772], "add": [2, 3, 232, 233, 248, 249, 262, 263, 284, 285, 716, 717, 746, 747, 749, 750, 751, 754, 755, 757, 758, 760, 761, 762, 764, 766, 768, 769, 770, 772, 774, 776, 791, 1181, 1187], "paramet": [2, 3, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 751, 755, 757, 758, 760, 761, 767, 774, 776, 777, 790], "self": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 716, 717, 750, 768, 769, 774, 776, 777, 778, 779, 1181], "first": [2, 3, 232, 233, 234, 235, 242, 243, 250, 251, 252, 253, 254, 255, 279, 280, 716, 717, 749, 750, 751, 752, 753, 757, 759, 760, 761, 763, 764, 767, 768, 769, 772, 774, 776, 777, 779], "input": [2, 3, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 755, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 791], "should": [2, 3, 226, 227, 232, 233, 234, 235, 236, 237, 242, 243, 246, 247, 250, 251, 252, 253, 258, 259, 278, 280, 282, 283, 284, 285, 716, 717, 746, 747, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 1181], "have": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 278, 279, 280, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 790, 791, 1180, 1181], "numer": [2, 3, 228, 229, 232, 233, 234, 235, 242, 243, 250, 251, 252, 253, 712, 713, 716, 717, 755, 763, 767, 774, 778], "second": [2, 3, 232, 233, 236, 237, 242, 243, 254, 255, 281, 716, 717, 749, 759, 761, 762, 763, 772, 776], "must": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 279, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 750, 751, 752, 755, 757, 758, 759, 764, 768, 770, 771, 774, 778, 779], "compat": [2, 3, 232, 233, 242, 243, 246, 247, 252, 253, 258, 259, 260, 261, 280, 716, 717, 755, 757, 766, 774, 791, 1181], "see": [2, 3, 228, 229, 232, 233, 242, 243, 252, 253, 258, 259, 260, 261, 279, 716, 717, 748, 749, 750, 751, 757, 759, 760, 761, 763, 764, 769, 771, 774, 776, 777, 790, 791, 1181], "broadcast": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 282, 283, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 755, 758, 759, 761, 769, 770, 774], "ret": [2, 3, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 755, 758, 762, 772, 774, 779], "an": [2, 3, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 242, 243, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 280, 281, 284, 285, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 791, 1180, 1181], "contain": [2, 3, 221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 242, 243, 244, 245, 246, 247, 252, 253, 254, 255, 258, 259, 260, 261, 279, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 749, 751, 752, 753, 754, 757, 758, 759, 761, 764, 767, 770, 772, 773, 774, 775, 778, 791, 1180, 1181], "element": [2, 3, 226, 227, 232, 233, 234, 235, 242, 243, 246, 247, 250, 251, 252, 253, 254, 255, 258, 259, 282, 283, 284, 285, 710, 711, 716, 717, 758, 761, 763, 774], "wise": [2, 3, 232, 233, 242, 243, 282, 283, 284, 285, 716, 717], "sum": [2, 3, 232, 233, 234, 235, 258, 259, 284, 285, 716, 717, 764, 769, 770, 772, 774], "The": [2, 3, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 278, 279, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 748, 749, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 778, 779, 790, 1180, 1181], "determin": [2, 3, 232, 233, 242, 243, 246, 247, 260, 261, 279, 284, 285, 716, 717, 758, 763, 764, 769, 770, 771], "promot": [2, 3, 228, 229, 232, 233, 242, 243, 712, 713, 716, 717, 758, 764, 770], "With": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 242, 243, 252, 253, 258, 259, 280, 281, 710, 711, 712, 713, 716, 717, 749, 759, 761, 762, 767, 774], "onli": [2, 3, 250, 251, 279, 284, 285, 748, 749, 750, 751, 755, 757, 759, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 789, 791, 1181], "4": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 247, 250, 251, 254, 255, 258, 259, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 751, 753, 759, 761, 766, 769, 774, 776, 777, 778, 779, 1181], "5": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 242, 243, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 710, 711, 712, 713, 716, 717, 750, 753, 757, 759, 761, 763, 766, 776, 777, 778], "6": [2, 3, 226, 227, 232, 233, 234, 235, 236, 237, 240, 241, 246, 247, 250, 251, 256, 257, 258, 259, 710, 711, 716, 717, 753, 759, 761, 766, 769, 774, 776, 777, 778], "z": [2, 3, 232, 233, 234, 235, 242, 243, 244, 245, 250, 251, 716, 717, 759, 766, 769, 774, 776], "7": [2, 3, 232, 233, 234, 235, 236, 237, 240, 241, 244, 245, 246, 247, 250, 251, 254, 255, 256, 257, 258, 259, 716, 717, 750, 753, 759, 761, 764, 769, 772], "9": [2, 3, 232, 233, 234, 235, 236, 237, 240, 241, 246, 247, 250, 251, 256, 257, 258, 259, 716, 717, 753, 759, 761, 777, 778], "mix": [2, 3, 228, 229, 232, 233, 712, 713, 716, 717, 754, 759, 761, 772, 774, 1180], "b": [2, 3, 228, 229, 232, 233, 234, 235, 278, 281, 710, 711, 712, 713, 716, 717, 748, 754, 759, 764, 766, 769, 773, 774, 775, 777, 778, 779, 789, 1181, 1187], "8": [2, 3, 232, 233, 234, 235, 244, 245, 246, 247, 250, 251, 254, 255, 256, 257, 258, 259, 716, 717, 749, 753, 759, 761, 769, 773, 777, 1181], "__init__": [2, 3, 4, 284, 285, 755, 762, 766, 770, 774, 776, 777, 778, 779, 1181], "__le__": [2, 3], "less": [2, 3, 232, 233, 242, 243, 250, 251, 258, 259, 280, 716, 717, 750, 757, 759, 769, 770, 772, 773, 774], "than": [2, 3, 234, 235, 236, 237, 242, 243, 250, 251, 254, 255, 258, 259, 280, 284, 285, 716, 717, 750, 752, 755, 759, 761, 763, 769, 770, 772, 774, 777, 778, 779, 791], "equal": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 242, 243, 246, 247, 250, 251, 256, 257, 258, 259, 284, 285, 712, 713, 716, 717, 759, 769, 770], "result": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 750, 755, 757, 758, 759, 761, 762, 763, 767, 768, 769, 770, 772, 774, 777, 791, 1181], "bool": [2, 3, 221, 222, 223, 224, 225, 228, 229, 232, 233, 234, 235, 236, 237, 242, 243, 246, 247, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 755, 759, 762, 770, 772, 774, 779], "oper": [2, 3, 228, 229, 234, 235, 236, 237, 240, 241, 279, 284, 285, 712, 713, 749, 751, 758, 759, 761, 762, 764, 768, 769, 771, 772, 774, 777, 778, 1180], "fals": [2, 3, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 242, 243, 246, 247, 252, 253, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 759, 761, 762, 763, 766, 772, 774, 777, 778, 779], "__radd__": [2, 3, 758, 759], "revers": [2, 3, 234, 235, 751, 758, 759, 762, 769, 779, 791], "__rrshift__": [2, 3], "bitwise_right_shift": [2, 3, 232, 233, 716, 717], "integ": [2, 3, 232, 233, 246, 247, 250, 251, 258, 259, 260, 261, 284, 285, 716, 717, 750, 761, 763, 767, 769, 774, 776], "x1": [2, 3, 228, 229, 232, 233, 242, 243, 252, 253, 712, 713, 716, 717, 757, 759, 762], "each": [2, 3, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 247, 254, 255, 279, 280, 281, 284, 285, 712, 713, 716, 717, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 772, 774, 776, 777, 779, 790, 791, 1181, 1187], "greater": [2, 3, 232, 233, 250, 251, 716, 717, 750], "32": [2, 3, 232, 233, 250, 251, 716, 717, 761, 777], "16": [2, 3, 232, 233, 234, 235, 242, 243, 250, 251, 716, 717, 750, 759, 761, 777], "__rshift__": [2, 3], "10": [2, 3, 232, 233, 234, 235, 236, 237, 250, 251, 280, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 753, 759, 761, 763, 769, 770, 774, 776, 777], "64": [2, 3, 232, 233, 240, 241, 716, 717, 749, 761, 777, 778, 1181], "devic": [2, 3, 226, 227, 231, 234, 235, 250, 251, 280, 284, 285, 710, 711, 715, 750, 754, 755, 763, 764, 766, 767, 770, 774, 779, 791, 1180], "dtype": [2, 3, 226, 227, 228, 229, 234, 235, 240, 241, 250, 251, 252, 253, 258, 259, 710, 711, 712, 713, 755, 756, 759, 761, 762, 763, 764, 766, 767, 770, 771, 774, 776, 1181], "is_vari": [2, 3, 236, 237, 772, 776], "whether": [2, 3, 221, 222, 223, 224, 225, 228, 229, 232, 233, 234, 235, 236, 237, 246, 247, 250, 251, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 748, 749, 751, 757, 759, 769, 770, 772], "i": [2, 3, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 279, 280, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 790, 791, 1180, 1181], "variabl": [2, 3, 221, 222, 223, 224, 225, 234, 235, 236, 237, 248, 249, 284, 285, 708, 709, 750, 755, 756, 757, 758, 761, 766, 770, 772, 774, 777, 778, 779, 791, 1181], "boolean": [2, 3, 228, 229, 232, 233, 234, 235, 236, 237, 246, 247, 284, 285, 712, 713, 716, 717, 761, 762, 763, 769], "trainabl": [2, 3, 236, 237, 758, 775, 777, 778], "otherwis": [2, 3, 221, 222, 223, 224, 225, 228, 229, 232, 233, 234, 235, 236, 237, 242, 243, 246, 247, 252, 253, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 759, 761, 768, 769, 770, 771, 774], "mt": [2, 3, 776], "ndim": [2, 3, 761], "number": [2, 3, 228, 229, 234, 235, 242, 243, 246, 247, 250, 251, 254, 255, 258, 259, 260, 261, 278, 279, 284, 285, 712, 713, 716, 717, 749, 750, 759, 761, 763, 769, 771, 772, 774, 777, 1181], "dimens": [2, 3, 226, 227, 234, 235, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 284, 285, 759, 761, 763, 774, 777], "ax": [2, 3, 242, 243, 246, 247, 252, 253, 258, 259, 260, 261, 282, 283, 755, 759, 761, 770, 774, 776], "shape": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 750, 755, 757, 758, 759, 761, 763, 770, 771, 772, 774, 776, 777, 778, 779, 1181], "size": [2, 3, 234, 235, 246, 247, 250, 251, 252, 253, 284, 285, 761, 763, 777], "product": [2, 3, 232, 233, 234, 235, 242, 243, 774], "": [2, 3, 221, 224, 225, 226, 227, 236, 237, 258, 259, 280, 281, 284, 285, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 791, 1180, 1181], "valu": [2, 3, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 284, 285, 710, 711, 712, 713, 716, 717, 749, 750, 756, 757, 758, 759, 761, 762, 763, 764, 767, 769, 770, 771, 772, 774, 776, 791], "one": [2, 3, 234, 235, 246, 247, 252, 253, 254, 255, 280, 281, 284, 285, 716, 717, 749, 750, 751, 756, 757, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 772, 773, 776, 777, 779, 791, 1181], "more": [2, 3, 254, 255, 750, 751, 752, 754, 755, 756, 757, 759, 761, 762, 763, 764, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 790, 791, 1181], "ar": [2, 3, 221, 222, 223, 232, 233, 234, 235, 242, 243, 246, 247, 250, 251, 252, 253, 279, 280, 281, 284, 285, 710, 711, 716, 717, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 790, 791, 1180, 1181], "unknown": [2, 3], "For": [2, 3, 236, 237, 279, 280, 281, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 791], "librari": [2, 3, 279, 280, 281, 714, 715, 748, 751, 762, 779, 789, 791, 1180, 1181], "graph": [2, 3, 236, 237, 281, 764, 769, 775, 791, 1180], "comput": [2, 3, 232, 233, 234, 235, 236, 237, 242, 243, 244, 245, 258, 259, 280, 281, 282, 283, 284, 285, 716, 717, 749, 761, 762, 764, 769, 774, 777, 791, 1180], "model": [2, 3, 777, 778, 1180, 1181], "mai": [2, 3, 232, 233, 256, 257, 281, 714, 715, 716, 717, 749, 750, 751, 761, 762, 769, 772, 775, 776, 778], "due": [2, 3, 280, 749, 752, 762, 772], "depend": [2, 3, 228, 229, 256, 257, 280, 712, 713, 749, 750, 751, 752, 758, 761, 762, 767, 770, 772, 774, 791], "collect": [221, 284, 285, 708, 761, 763, 790], "accept": [221, 232, 233, 708, 716, 717, 749, 750, 755, 757, 758, 759, 761, 762, 763, 764, 767, 768, 769, 771, 772, 776, 1180, 1181], "args_to_ivi": 221, "arg": [221, 222, 223, 284, 285, 753, 774, 778], "include_deriv": [221, 222, 223, 224, 225, 708, 709], "kwarg": [221, 222, 223, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 774, 778], "keyword": [221, 222, 223, 284, 285, 755, 761, 762, 763, 767, 770, 771, 772, 777], "form": [221, 222, 223, 224, 225, 226, 227, 236, 237, 242, 243, 280, 284, 285, 748, 761, 764, 770, 778, 779], "all": [221, 222, 223, 224, 225, 226, 227, 234, 235, 242, 243, 246, 247, 250, 251, 260, 261, 262, 263, 279, 280, 281, 284, 285, 708, 709, 716, 717, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 790, 791, 1180, 1181], "nest": [221, 222, 223, 224, 225, 284, 285, 708, 709, 755, 761, 764, 768, 769, 777, 778, 791, 1180], "argument": [221, 222, 223, 224, 225, 232, 233, 234, 235, 279, 284, 285, 708, 709, 716, 717, 751, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 774, 776, 777, 1180], "unchang": [221, 222, 223, 224, 225], "iter": [221, 222, 223, 224, 225, 234, 235, 246, 247, 262, 263, 281, 284, 285, 746, 747, 762, 769, 774, 777], "ani": [221, 222, 223, 226, 227, 232, 233, 234, 235, 260, 261, 262, 263, 279, 280, 281, 284, 285, 714, 715, 716, 717, 746, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 791, 1180, 1181], "posit": [221, 222, 223, 232, 233, 234, 235, 242, 243, 246, 247, 716, 717, 750, 751, 755, 761, 762, 763, 767, 777, 790], "check": [221, 222, 223, 224, 225, 228, 229, 234, 235, 236, 237, 279, 280, 281, 284, 285, 712, 713, 749, 750, 751, 755, 759, 761, 767, 769, 773, 774, 776, 777, 778, 779, 790, 1181], "option": [221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 749, 750, 751, 755, 756, 757, 758, 759, 761, 762, 763, 764, 769, 770, 771, 772, 774, 779, 791], "dict": [221, 222, 223, 224, 225, 234, 235, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 756, 762, 769, 777, 778, 1180], "recurs": [221, 222, 223, 224, 225, 284, 285, 708, 709, 749, 753, 764, 769, 778, 791], "deriv": [221, 222, 223, 224, 225, 226, 227, 236, 237, 708, 709, 710, 711, 770, 771, 776, 778], "from": [221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 240, 241, 246, 247, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 279, 280, 281, 284, 285, 708, 709, 710, 711, 712, 713, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 790, 791, 1180, 1181, 1187], "tupl": [221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 240, 241, 242, 243, 246, 247, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 755, 756, 757, 761, 762, 763, 770, 771, 774, 777, 778, 779, 791], "list": [221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 240, 241, 246, 247, 248, 249, 262, 263, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 749, 751, 753, 755, 756, 757, 759, 761, 762, 763, 769, 770, 771, 774, 777, 778, 779, 791, 1181], "default": [221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 749, 750, 751, 757, 758, 759, 761, 762, 764, 766, 767, 770, 771, 774, 778, 1180], "str": [221, 222, 223, 234, 235, 240, 241, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 755, 756, 770, 771, 774, 779], "kei": [221, 222, 223, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 756, 761, 763, 769, 777], "word": [221, 222, 223, 769, 1180], "same": [221, 222, 223, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 246, 247, 250, 251, 254, 255, 256, 257, 258, 259, 279, 281, 284, 285, 710, 711, 712, 713, 716, 717, 749, 750, 752, 753, 755, 756, 757, 759, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 778, 779, 791, 1181], "convert": [221, 222, 223, 224, 225, 226, 227, 281, 708, 709, 751, 761, 767, 768, 774, 791, 1180], "args_to_n": [221, 772], "nativ": [221, 223, 224, 225, 226, 227, 234, 235, 708, 709, 761, 762, 763, 767, 770, 772, 776, 777, 1180], "backend": [221, 223, 225, 234, 235, 236, 237, 279, 750, 751, 754, 757, 758, 759, 760, 761, 762, 763, 764, 767, 768, 770, 771, 772, 773, 775, 776, 779, 1180, 1181, 1187], "to_ivi": [221, 708, 709], "If": [221, 224, 225, 226, 227, 228, 229, 236, 237, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 279, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 779, 791, 1181], "set": [221, 224, 225, 234, 235, 236, 237, 242, 243, 252, 253, 255, 256, 257, 258, 259, 279, 284, 285, 748, 750, 752, 754, 755, 759, 760, 761, 762, 763, 764, 767, 768, 769, 770, 771, 772, 774, 776, 777], "leaf": [221, 224, 225, 284, 285, 764, 769, 777], "within": [221, 224, 225, 750, 751, 761, 763, 778, 791], "union": [221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 755, 756, 757, 759, 762, 764, 768, 769, 770, 771, 772, 774, 779], "nativearrai": [221, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 282, 283, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 755, 756, 757, 759, 762, 764, 767, 768, 769, 772, 774, 776, 1180], "mayb": [221, 224, 225, 749, 774, 776], "manner": [221, 224, 225, 279, 708, 709, 755, 758, 761, 762, 771, 777, 790, 791], "travers": [221, 224, 225, 708, 709, 769, 770, 774], "lowest": [221, 224, 225, 250, 251, 708, 709, 764, 770, 791, 1180], "leav": [221, 224, 225, 708, 709, 716, 717, 751, 757, 758, 759, 761, 764, 769, 770, 772, 777, 778], "search": [221, 224, 225, 253, 279, 708, 709, 749, 755, 759, 761], "case": [221, 224, 225, 234, 235, 246, 247, 258, 259, 280, 284, 285, 749, 750, 751, 755, 756, 757, 758, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 778, 779, 791], "to_n": [221, 708, 709, 774], "item": [221, 225, 234, 235, 262, 263, 284, 285, 751, 770, 774, 776, 777, 779, 1181], "convers": [222, 223, 224, 225, 281, 709, 751, 767, 773, 775, 779, 790, 791, 1180, 1181, 1187], "asarrai": [226, 227, 234, 235, 761, 763, 767, 772], "copi": [226, 227, 228, 229, 234, 235, 246, 247, 284, 285, 710, 711, 712, 713, 714, 715, 750, 753, 758, 766, 770, 774, 777, 790, 791], "can": [226, 227, 228, 229, 246, 247, 250, 251, 279, 280, 281, 712, 713, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 790, 791, 1180, 1181, 1187], "includ": [226, 227, 234, 235, 252, 253, 258, 259, 260, 261, 280, 284, 285, 750, 751, 755, 756, 757, 758, 759, 760, 761, 762, 764, 766, 768, 769, 770, 771, 772, 774, 790, 791], "ndarrai": [226, 227, 234, 235, 755, 757, 768, 770, 771, 772, 774, 776, 779, 1180], "nativedtyp": [226, 227, 234, 235, 250, 251, 710, 711, 755, 757, 770, 771, 774], "datatyp": [226, 227, 284, 285, 762], "infer": [226, 227, 234, 235, 246, 247, 710, 711, 754, 766, 767, 770, 771, 774, 779], "nativedevic": [226, 227, 230, 231, 234, 235, 250, 251, 710, 711, 714, 715, 755, 757, 770, 771], "which": [226, 227, 228, 229, 234, 235, 236, 237, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 279, 280, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 750, 751, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 778, 779, 790, 791, 1180, 1181], "place": [226, 227, 232, 233, 234, 235, 246, 247, 284, 285, 710, 711, 714, 715, 716, 717, 750, 752, 754, 755, 756, 757, 758, 759, 761, 762, 764, 767, 769, 771, 772, 779, 1180], "creat": [226, 227, 234, 235, 250, 251, 280, 284, 285, 710, 711, 748, 749, 750, 751, 752, 753, 761, 762, 763, 767, 770, 771, 772, 774, 775, 778, 789, 790, 1180, 1181, 1187], "output": [226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 282, 283, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 750, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 771, 772, 774, 776, 778, 779, 791, 1180, 1181], "write": [226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 281, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 750, 751, 753, 754, 755, 758, 759, 762, 763, 764, 766, 770, 772, 774, 776, 779], "It": [226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 282, 283, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 750, 751, 753, 754, 755, 758, 759, 760, 761, 762, 763, 766, 767, 768, 769, 770, 772, 774, 776, 777, 778], "interpret": [226, 227], "empty_lik": [226, 227, 710, 711], "uniniti": [226, 227], "from_dlpack": [226, 227, 710, 711], "full_lik": [226, 227, 710, 711, 755], "fill_valu": [226, 227, 710, 711, 755, 763, 770], "float": [226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 242, 243, 244, 245, 248, 249, 250, 251, 258, 259, 710, 711, 712, 713, 716, 717, 755, 757, 758, 761, 763, 764, 767, 769, 770, 772, 774, 776, 778], "scalar": [226, 227, 234, 235, 282, 283, 710, 711, 770, 791], "fill": [226, 227, 250, 251, 284, 285, 710, 711, 763], "where": [226, 227, 234, 235, 242, 243, 246, 247, 250, 251, 252, 253, 258, 259, 260, 261, 279, 280, 281, 284, 285, 748, 749, 750, 751, 753, 755, 756, 758, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 777, 778, 779, 791, 1181], "everi": [226, 227, 234, 235, 750, 751, 752, 753, 757, 759, 760, 761, 763, 764, 766, 767, 769, 770, 772, 774, 776, 778], "int": [226, 227, 228, 229, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 710, 711, 712, 713, 714, 715, 755, 756, 757, 759, 761, 762, 763, 764, 769, 770, 771, 772, 774, 779], "000123": [226, 227], "ones": [226, 227, 234, 235, 236, 237, 250, 251, 284, 285, 710, 711, 759, 761, 776, 777, 1181], "meshgrid": [226, 227, 710, 711], "index": [226, 227, 234, 235, 252, 253, 254, 255, 256, 257, 284, 285, 710, 711, 753, 764, 769, 776], "xy": [226, 227, 710, 711], "native_arrai": [226, 227, 228, 229, 232, 233, 710, 711, 716, 717, 761, 763, 767], "A": [226, 227, 228, 229, 234, 235, 246, 247, 260, 261, 278, 279, 280, 281, 284, 285, 712, 713, 716, 717, 751, 753, 754, 757, 761, 764, 769, 770, 771, 774, 777, 791, 1180, 1181], "ones_lik": [226, 227, 710, 711, 766, 779, 1181], "tril": [226, 227, 710, 711], "k": [226, 227, 240, 241, 250, 251, 710, 711, 716, 717, 754, 762, 763, 774], "m": [226, 227, 242, 243, 250, 251, 716, 717, 749, 750, 752, 753, 754, 774], "n": [226, 227, 242, 243, 246, 247, 250, 251, 258, 259, 260, 261, 716, 717, 754, 761], "whose": [226, 227, 232, 233, 242, 243, 246, 247, 254, 255, 710, 711, 716, 717, 758, 761], "innermost": [226, 227, 242, 243], "two": [226, 227, 242, 243, 281, 749, 751, 758, 759, 760, 761, 762, 763, 768, 773, 777, 779, 1181], "mxn": [226, 227, 242, 243], "matric": [226, 227, 242, 243, 790], "diagon": [226, 227, 242, 243], "abov": [226, 227, 232, 233, 250, 251, 716, 717, 749, 750, 753, 756, 757, 758, 759, 761, 762, 764, 766, 768, 769, 770, 772, 774, 776, 777, 778, 779], "zero": [226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 242, 243, 252, 253, 258, 259, 260, 261, 281, 710, 711, 712, 713, 716, 717, 757, 759, 761, 767, 768, 769, 770, 771, 774, 777, 778, 1181], "main": [226, 227, 749, 753, 756, 767, 769], "below": [226, 227, 748, 749, 751, 753, 754, 755, 756, 759, 761, 764, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 790, 1181], "lower": [226, 227, 242, 243, 250, 251, 716, 717, 750, 759, 761, 774, 791, 1180], "triangular": [226, 227, 242, 243], "part": [226, 227, 236, 237, 750, 752, 755, 760, 761, 764, 774, 775, 779, 790, 791], "specifi": [226, 227, 228, 229, 234, 235, 244, 245, 246, 247, 250, 251, 252, 253, 260, 261, 282, 283, 284, 285, 712, 713, 750, 754, 757, 760, 761, 762, 763, 764, 770, 771, 772, 774, 777, 778], "alloc": [226, 227, 228, 229, 712, 713, 750, 791], "triu": [226, 227, 710, 711], "upper": [226, 227, 242, 243, 250, 251, 761, 772], "zeros_lik": [226, 227, 710, 711, 762, 1181], "creation": [227, 284, 285, 711, 755, 761, 763, 767, 770, 771, 774], "data_typ": [228, 229, 712, 713, 755, 761, 770], "astyp": [228, 229, 240, 241, 712, 713, 762, 770, 772], "irrespect": [228, 229, 712, 713, 769, 772, 776], "rule": [228, 229, 242, 243, 712, 713, 756, 759, 761, 764, 768, 769, 770], "cast": [228, 229, 712, 713, 762, 763, 764, 770, 774, 1181], "point": [228, 229, 232, 233, 242, 243, 250, 251, 258, 259, 281, 712, 713, 716, 717, 750, 751, 757, 758, 759, 761, 768, 772, 774, 776, 777, 790], "nan": [228, 229, 232, 233, 234, 235, 258, 259, 284, 285, 712, 713, 716, 717, 755, 758, 761], "infin": [228, 229, 232, 233, 234, 235, 712, 713, 716, 717, 758], "integr": [228, 229, 712, 713, 749], "implement": [228, 229, 256, 257, 712, 713, 714, 715, 751, 754, 755, 757, 758, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 791, 1180, 1181], "when": [228, 229, 244, 245, 250, 251, 252, 253, 258, 259, 279, 280, 284, 285, 712, 713, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 779, 791, 1181], "non": [228, 229, 242, 243, 250, 251, 252, 253, 258, 259, 260, 261, 712, 713, 759, 767, 769, 770, 774], "desir": [228, 229, 234, 235, 279, 284, 285, 712, 713, 714, 715, 750, 762, 766, 770], "match": [228, 229, 284, 285, 712, 713, 759, 769], "newli": [228, 229, 712, 713, 750, 761, 772], "alwai": [228, 229, 236, 237, 246, 247, 712, 713, 750, 751, 755, 756, 757, 758, 760, 761, 762, 764, 766, 768, 769, 770, 772, 774, 791], "us": [228, 229, 232, 233, 234, 235, 236, 237, 246, 247, 248, 249, 262, 263, 281, 282, 283, 284, 285, 712, 713, 714, 715, 716, 717, 746, 747, 750, 751, 752, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 778, 779, 790, 791, 1180, 1181], "float64": [228, 229, 234, 235, 250, 251, 712, 713, 761, 770], "broadcast_arrai": [228, 229, 712, 713], "against": [228, 229, 242, 243, 252, 253, 279, 712, 713, 716, 717, 761, 791], "arbitrari": [228, 229, 284, 285, 712, 713, 757, 761, 764, 769, 772, 778, 791], "its": [228, 229, 246, 247, 712, 713, 716, 717, 749, 750, 751, 753, 755, 758, 761, 762, 763, 767, 779, 791, 1180], "correspond": [228, 229, 232, 233, 234, 235, 246, 247, 258, 259, 284, 285, 712, 713, 716, 717, 750, 757, 758, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 774], "x2": [228, 229, 232, 233, 234, 235, 242, 243, 252, 253, 712, 713, 716, 717, 757, 759, 762], "x3": [228, 229], "broadcast_to": [228, 229, 712, 713, 770], "store": [228, 229, 234, 235, 236, 237, 246, 247, 284, 285, 712, 713, 750, 758, 766, 768, 769, 774, 776, 777, 778, 1180], "code": [228, 229, 232, 233, 236, 237, 279, 280, 281, 284, 285, 712, 713, 714, 715, 716, 717, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 789, 791, 1180, 1181, 1187], "can_cast": [228, 229, 712, 713, 764, 770], "occur": [228, 229, 254, 255, 712, 713], "accord": [228, 229, 234, 235, 258, 259, 712, 713, 749, 751, 753, 762, 764, 770], "float32": [228, 229, 240, 241, 712, 713, 759, 761, 770], "as_n": [228, 229, 230, 231, 712, 713, 714, 715, 770], "finfo": [228, 229, 712, 713, 761], "iinfo": [228, 229, 712, 713, 756], "is_bool_dtyp": [228, 229, 712, 713], "is_float_dtyp": [228, 229, 712, 713, 755], "int64": [228, 229, 250, 251, 712, 713, 761, 770, 774], "int32": [228, 229, 234, 235, 250, 251, 712, 713, 761, 770, 774], "arr": [228, 229, 234, 235, 712, 713, 770, 771], "is_int_dtyp": [228, 229, 712, 713, 755, 763], "is_uint_dtyp": [228, 229, 712, 713, 755, 763], "result_typ": [228, 229, 712, 713, 770], "arrays_and_dtyp": [228, 229, 712, 713], "involv": [228, 229, 280, 712, 713, 748, 753, 754, 759, 770, 779, 1181, 1187], "dev": [230, 231, 284, 285, 714, 715, 749, 764, 771, 776, 778], "to_devic": [230, 231, 714, 715], "stream": [230, 231, 714, 715], "ab": [232, 233, 716, 717, 761, 767, 770, 1181], "absolut": [232, 233, 284, 285, 716, 717, 748], "aco": [232, 233, 716, 717, 1181], "real": [232, 233, 716, 717], "invers": [232, 233, 716, 717, 790], "cosin": [232, 233, 716, 717], "57": [232, 233, 716, 717], "69": [232, 233, 777], "acosh": [232, 233, 716, 717, 1181], "repres": [232, 233, 716, 717, 753, 761, 762, 776], "area": [232, 233, 280, 716, 717, 772, 789, 1181], "hyperbol": [232, 233, 716, 717], "sector": [232, 233, 280, 716, 717], "99": [232, 233, 236, 237, 716, 717], "asin": [232, 233, 716, 717, 1181], "sine": [232, 233, 716, 717], "927": [232, 233, 716, 717], "12": [232, 233, 234, 235, 250, 251, 716, 717, 749, 759, 761, 766, 769, 770], "asinh": [232, 233, 716, 717, 1181], "82": [232, 233], "atan": [232, 233, 716, 717, 1181], "tangent": [232, 233, 716, 717, 758], "785": [232, 233, 716, 717], "464": [232, 233], "atan2": [232, 233, 716, 717, 1181], "coordin": [232, 233, 716, 717], "quotient": [232, 233, 716, 717], "245": [232, 233], "14": [232, 233, 234, 235, 250, 251, 712, 713, 716, 717, 753, 759, 761, 769], "atanh": [232, 233, 716, 717, 1181], "549": [232, 233, 716, 717], "47": [232, 233, 250, 251, 716, 717], "bitwise_and": [232, 233, 716, 717], "bitwise_invert": [232, 233, 716, 717], "bitiwse_invert": [232, 233], "bitwise_left_shift": [232, 233, 716, 717], "bitwise_or": [232, 233, 716, 717], "bitwise_xor": [232, 233, 716, 717], "ceil": [232, 233, 716, 717, 1181], "round": [232, 233, 279, 280, 281, 716, 717, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 1181], "co": [232, 233, 234, 235, 280, 716, 717, 770, 774, 790, 1181], "express": [232, 233, 716, 717, 756, 758, 774, 779], "radian": [232, 233, 716, 717, 758], "54": [232, 233, 716, 717, 759], "416": [232, 233], "cosh": [232, 233, 716, 717, 1181], "angl": [232, 233, 716, 717, 790], "76": [232, 233, 716, 717], "23": [232, 233, 250, 251, 710, 711, 716, 717, 774], "03": [232, 233, 716, 717], "81": [232, 233, 716, 717], "divid": [232, 233, 234, 235, 246, 247, 284, 285, 716, 717, 759, 768, 769], "dividend": [232, 233, 716, 717], "divisor": [232, 233, 236, 237, 258, 259, 716, 717], "375": [232, 233], "erf": [232, 233, 716, 717], "exponenti": [232, 233, 716, 717], "gauss": [232, 233, 716, 717], "error": [232, 233, 281, 284, 285, 716, 717, 749, 750, 755, 756, 757, 759, 761, 766, 768, 770, 771, 776, 791], "exp": [232, 233, 716, 717, 1181], "evalu": [232, 233, 284, 285, 716, 717, 750, 769, 770], "expm1": [232, 233, 716, 717, 770], "244": [232, 233], "918": [232, 233], "48": [232, 233, 716, 717], "_": [232, 233, 716, 717, 753, 758, 761, 769, 772, 777], "147": [232, 233], "floor": [232, 233, 716, 717, 1181], "floor_divid": [232, 233, 716, 717], "13": [232, 233, 234, 235, 240, 241, 250, 251, 759, 761, 769], "floormod": [232, 233, 716, 717, 1181], "denomin": [232, 233, 234, 235, 248, 249, 716, 717, 764, 770, 791], "mod": [232, 233, 716, 717], "15": [232, 233, 234, 235, 250, 251, 710, 711, 749, 759, 761], "greater_equ": [232, 233, 716, 717], "isfinit": [232, 233, 716, 717, 761], "test": [232, 233, 260, 261, 281, 716, 717, 749, 751, 754, 756, 759, 762, 767, 770, 791], "out_i": [232, 233, 716, 717], "self_i": [232, 233, 716, 717], "finit": [232, 233, 716, 717], "inf": [232, 233, 234, 235, 284, 285, 716, 717, 761], "isinf": [232, 233, 716, 717], "either": [232, 233, 234, 235, 284, 285, 716, 717, 749, 750, 751, 753, 758, 759, 761, 762, 764, 766, 769, 770, 771, 772, 774, 777, 791], "neg": [232, 233, 246, 247, 250, 251, 260, 261, 282, 283, 716, 717, 764, 769, 772], "isnan": [232, 233, 716, 717], "less_equ": [232, 233, 716, 717], "24": [232, 233, 234, 235, 777], "log": [232, 233, 716, 717, 750, 759, 764, 769, 772, 774, 777, 1181], "log10": [232, 233, 716, 717], "logarithm": [232, 233, 716, 717], "602": [232, 233], "699": [232, 233], "log1p": [232, 233, 716, 717], "693": [232, 233, 716, 717], "001": [232, 233, 248, 249, 777, 778], "0953": [232, 233], "log2": [232, 233, 716, 717], "logaddexp": [232, 233, 716, 717], "31": [232, 233, 777], "05": [232, 233, 236, 237, 248, 249, 258, 259, 716, 717, 760, 761, 763], "logical_and": [232, 233, 716, 717, 762, 1181], "logical_not": [232, 233, 716, 717, 770, 1181], "logical_or": [232, 233, 716, 717, 1181], "conform": [232, 233, 716, 717, 758], "api": [232, 233, 278, 279, 716, 717, 749, 750, 754, 757, 758, 759, 761, 762, 763, 764, 767, 768, 770, 771, 772, 773, 775, 777, 791, 1180, 1181, 1187], "standard": [232, 233, 248, 249, 250, 251, 258, 259, 278, 716, 717, 754, 755, 757, 758, 760, 761, 768, 769, 772, 791, 1181, 1187], "http": [232, 233, 716, 717, 749, 752, 758, 770], "org": [232, 233, 716, 717, 758], "latest": [232, 233, 716, 717, 749, 750, 751, 753, 758, 766, 770, 791], "extens": [232, 233, 716, 717, 749, 758, 761], "api_specif": [232, 233, 716, 717, 758], "gener": [232, 233, 235, 236, 237, 250, 251, 262, 263, 716, 717, 746, 747, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 762, 763, 764, 767, 768, 769, 770, 771, 772, 773, 774, 776, 778, 779, 790, 791, 1180, 1181], "signatur": [232, 233, 280, 716, 717, 755, 757, 758, 759, 761, 770, 771, 772], "elementwise_funct": [232, 233, 716, 717, 758], "html": [232, 233, 280, 716, 717, 753, 758], "noqa": [232, 233, 716, 717], "both": [232, 233, 716, 717, 750, 757, 758, 759, 761, 762, 763, 764, 766, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 791], "descript": [232, 233, 716, 717, 758, 761], "hint": [232, 233, 716, 717, 751, 755, 757, 758, 762, 764, 768, 772], "assum": [232, 233, 716, 717, 758, 761, 763, 766, 770, 776, 777, 791], "simplic": [232, 233, 716, 717, 758, 778, 790], "nestabl": [232, 233, 716, 717, 754, 758, 759, 761, 772, 1180], "therefor": [232, 233, 279, 716, 717, 749, 750, 752, 755, 757, 758, 759, 760, 761, 762, 763, 764, 768, 769, 770, 771, 772, 774, 776, 778, 791], "logical_xor": [232, 233, 716, 717], "multipli": [232, 233, 234, 235, 716, 717, 750, 759, 766, 768, 769], "not_equ": [232, 233, 716, 717], "pow": [232, 233, 716, 717], "expon": [232, 233, 234, 235], "remaind": [232, 233, 246, 247, 284, 285, 716, 717], "modulu": [232, 233, 716, 717], "instead": [232, 233, 716, 717, 749, 750, 751, 757, 758, 759, 761, 762, 763, 764, 767, 769, 772, 774, 776, 777, 791], "sign": [232, 233, 280, 716, 717, 749, 774, 779], "respect": [232, 233, 236, 237, 716, 717, 750, 751, 755, 757, 759, 761, 768, 769, 770], "x2_i": [232, 233, 716, 717], "11": [232, 233, 234, 235, 240, 241, 242, 243, 250, 251, 716, 717, 759, 761, 769, 770], "18": [232, 233, 250, 251, 716, 717, 759, 769], "94": [232, 233, 236, 237, 250, 251, 716, 717], "256": [232, 233], "0001": [232, 233], "36": [232, 233], "37": [232, 233, 716, 717], "67": [232, 233, 716, 717, 769], "45": [232, 233, 716, 717, 761], "678": [232, 233], "25": [232, 233, 234, 235, 242, 243, 244, 245, 250, 251, 258, 259, 716, 717, 769], "33": [232, 233, 248, 249, 250, 251, 258, 259, 716, 717], "sin": [232, 233, 234, 235, 716, 717, 768, 774, 1181], "841": [232, 233, 716, 717], "909": [232, 233, 716, 717], "141": [232, 233, 716, 717], "sinh": [232, 233, 716, 717, 1181], "63": [232, 233, 716, 717], "232": [232, 233, 716, 717], "51": [232, 233], "sqrt": [232, 233, 716, 717], "squar": [232, 233, 242, 243, 716, 717, 761], "root": [232, 233, 716, 717, 749, 750, 753, 777], "subtract": [232, 233, 716, 717, 759, 768, 769], "differ": [232, 233, 279, 280, 281, 284, 285, 749, 750, 754, 755, 756, 757, 758, 759, 761, 762, 764, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 791, 1181], "tan": [232, 233, 716, 717, 757, 758, 762, 764, 769, 772, 774, 1181], "56": [232, 233, 250, 251, 716, 717, 759], "19": [232, 233, 250, 251, 716, 717, 759], "tanh": [232, 233, 716, 717, 774, 1181], "762": [232, 233, 716, 717], "964": [232, 233, 716, 717], "trunc": [232, 233, 716, 717], "elementwis": [233, 717, 755, 764, 774], "all_equ": [234, 235], "equality_matrix": [234, 235], "compar": [234, 235, 256, 257, 284, 285, 756, 759, 761, 763, 766, 777], "matrix": [234, 235, 242, 243], "array_equ": [234, 235], "arrays_equ": [234, 235, 284, 285], "assert_supports_inplac": [234, 235], "rais": [234, 235, 246, 247, 250, 251, 260, 261, 280, 284, 285, 750, 756, 766, 772, 774, 776], "except": [234, 235, 246, 247, 250, 251, 260, 261, 284, 285, 750, 756, 758, 768, 772, 774, 776, 791], "clip_matrix_norm": [234, 235], "max_norm": [234, 235], "p": [234, 235, 749, 750, 754], "maximum": [234, 235, 236, 237, 246, 247, 252, 253, 284, 285, 716, 717, 750, 759, 777, 1181], "norm": [234, 235, 249, 755, 1181], "downscal": [234, 235], "max": [234, 235, 242, 243, 258, 259], "need": [234, 235, 246, 247, 281, 749, 750, 751, 752, 753, 755, 758, 759, 760, 762, 763, 764, 768, 769, 770, 772, 774, 776, 777, 790, 791], "894": [234, 235], "79": [234, 235], "clip_vector_norm": [234, 235], "vector": [234, 235, 242, 243, 790], "copy_arrai": [234, 235], "cumprod": [234, 235, 762, 779], "exclus": [234, 235, 236, 237, 284, 285, 761, 762, 764, 769, 779], "along": [234, 235, 244, 245, 246, 247, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 282, 283, 284, 285, 751, 755, 759, 772, 774], "take": [234, 235, 281, 748, 749, 750, 751, 758, 759, 761, 763, 769, 770, 771, 772, 774, 776, 778, 779, 791, 1181, 1187], "cumul": [234, 235, 790], "exclud": [234, 235, 759, 774], "120": [234, 235], "cumsum": [234, 235, 770, 1181], "perform": [234, 235, 236, 237, 260, 261, 281, 755, 756, 757, 759, 761, 763, 764, 766, 767, 768, 769, 771, 772, 774, 777, 791], "last": [234, 235, 242, 243, 244, 245, 246, 247, 256, 257, 260, 261, 281, 284, 285, 750, 756, 759, 761, 763, 766, 772, 774, 791], "select": [234, 235, 749, 750, 751, 761, 772, 774, 776, 779, 791], "hold": [234, 235, 762, 777], "origin": [234, 235, 246, 247, 281, 284, 285, 750, 751, 762, 766, 767, 770, 772, 774], "22": [234, 235, 250, 251, 769], "20": [234, 235, 240, 241, 250, 251, 716, 717, 776], "default_v": [234, 235], "catch_except": [234, 235], "rev": [234, 235], "with_cal": [234, 235], "catch": [234, 235, 761], "callabl": [234, 235, 761, 774], "might": [234, 235, 749, 750, 751, 755, 756, 759, 761, 762, 767, 770, 772, 774, 776, 777, 1180], "exist": [234, 235, 246, 247, 279, 280, 284, 285, 749, 751, 753, 758, 759, 760, 761, 762, 764, 766, 767, 772, 774, 791, 1180], "els": [234, 235, 250, 251, 750, 751, 755, 763, 764, 766, 770, 772, 774, 776, 778, 779, 791], "einops_rearrang": [234, 235], "pattern": [234, 235, 281, 758, 770], "axes_length": [234, 235], "re": [234, 235, 278, 279, 280, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 776, 779, 791, 1181], "arrang": [234, 235], "rearrang": [234, 235], "addit": [234, 235, 248, 249, 714, 715, 749, 750, 751, 755, 758, 759, 761, 762, 769, 770, 776, 777, 779], "specif": [234, 235, 279, 714, 715, 750, 751, 755, 757, 760, 761, 763, 764, 766, 768, 769, 770, 771, 772, 774, 775, 776, 778, 779, 790, 791, 1180, 1181, 1187], "new": [234, 235, 236, 237, 246, 247, 248, 249, 279, 280, 281, 284, 285, 748, 749, 750, 751, 753, 754, 755, 756, 758, 759, 761, 762, 766, 767, 769, 770, 772, 773, 776, 779, 790, 1180, 1181], "einop": [234, 235, 280], "been": [234, 235, 250, 251, 750, 751, 756, 757, 758, 761, 764, 766, 769, 770, 771, 774, 776, 790, 791, 1180], "einops_reduc": [234, 235], "reduct": [234, 235, 260, 261, 284, 285, 761, 770, 776, 1181], "reduc": [234, 235, 242, 243, 252, 253, 258, 259, 260, 261, 284, 285, 774, 776], "One": [234, 235, 246, 247, 250, 251, 759, 761, 763, 770, 774, 776, 777], "avail": [234, 235, 279, 749, 750, 758, 762, 769, 771, 791], "min": [234, 235, 258, 259], "mean": [234, 235, 240, 241, 250, 251, 258, 259, 284, 285, 746, 747, 749, 750, 754, 755, 759, 761, 764, 766, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 791, 1180, 1181], "prod": [234, 235, 258, 259, 759, 770, 774], "c": [234, 235, 236, 237, 240, 241, 258, 259, 278, 280, 281, 712, 713, 716, 717, 748, 749, 754, 759, 764, 769, 773, 774, 775, 777, 791, 1180, 1181, 1187], "einops_repeat": [234, 235], "repeat": [234, 235, 246, 247, 750, 752, 756, 758, 759, 761, 766, 768], "fourier_encod": [234, 235], "max_freq": [234, 235], "num_band": [234, 235], "linear": [234, 235, 240, 241, 282, 283, 758, 774, 777, 778, 779, 1181], "concat": [234, 235, 246, 247, 284, 285, 774, 1181], "flatten": [234, 235, 246, 247, 252, 253, 254, 255], "encod": [234, 235, 280, 777], "frequenc": [234, 235, 750], "band": [234, 235], "space": [234, 235, 280], "linearli": [234, 235], "oppos": [234, 235], "geometr": [234, 235], "concaten": [234, 235, 246, 247, 774, 777, 1181], "seper": [234, 235, 759], "batch": [234, 235, 284, 285, 764, 769, 777], "final": [234, 235, 750, 751, 756, 758, 759, 764, 768, 770, 772, 773, 777], "expand": [234, 235, 246, 247, 769], "channel": [234, 235, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772], "gather": [234, 235], "indic": [234, 235, 240, 241, 246, 247, 248, 249, 252, 253, 254, 255, 256, 257, 284, 285, 712, 713, 753, 756, 757, 762, 779, 1181], "gather_nd": [234, 235, 1181], "cuda": [234, 235, 250, 251, 774, 791, 1180], "cpu": [234, 235, 250, 251, 750, 771, 791], "etc": [234, 235, 250, 251, 262, 263, 281, 746, 747, 749, 750, 751, 755, 757, 759, 761, 763, 768, 769, 770, 774, 776, 777, 791, 1180], "given": [234, 235, 244, 245, 246, 247, 250, 251, 280, 281, 284, 285, 749, 750, 751, 753, 755, 758, 759, 760, 761, 763, 764, 766, 767, 768, 769, 770, 771, 772, 776, 778, 790], "get_num_dim": [234, 235, 1181], "as_arrai": [234, 235], "has_nan": [234, 235, 284, 285], "include_inf": [234, 235, 284, 285], "indices_wher": [234, 235, 756, 1181], "inplace_decr": [234, 235], "val": [234, 235, 284, 285, 772, 776], "decrement": [234, 235], "defin": [234, 235, 242, 243, 749, 751, 755, 757, 758, 761, 762, 770, 776, 778, 791, 1180], "follow": [234, 235, 236, 237, 279, 280, 284, 285, 749, 750, 751, 753, 755, 757, 758, 759, 760, 761, 762, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 791, 1181], "inplace_incr": [234, 235], "increment": [234, 235, 750], "inplace_upd": [234, 235, 772], "ensure_in_backend": [234, 235, 772], "updat": [234, 235, 236, 237, 284, 285, 749, 750, 751, 753, 754, 757, 759, 760, 762, 767, 768, 769, 770, 774, 776, 777, 779, 791], "ensur": [234, 235, 749, 750, 751, 755, 756, 757, 759, 760, 761, 762, 763, 767, 768, 770, 772], "inplac": [234, 235, 236, 237, 284, 285, 754, 757, 759, 767, 768, 776, 778], "In": [234, 235, 246, 247, 279, 281, 714, 715, 749, 750, 751, 752, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 769, 770, 771, 772, 776, 777, 778, 779, 790, 791, 1181], "do": [234, 235, 236, 237, 281, 284, 285, 749, 750, 751, 755, 757, 758, 759, 760, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 791, 1180], "is_arrai": [234, 235, 762], "rather": [234, 235, 236, 237, 280, 284, 285, 750, 755, 758, 761, 769, 770, 772, 779, 791], "trace": [234, 235, 242, 243, 284, 285, 774, 791, 1180], "is_ivy_arrai": [234, 235, 772, 776], "is_ivy_contain": [234, 235], "is_native_arrai": [234, 235, 776], "one_hot": [234, 235, 779, 1181], "depth": [234, 235, 750, 777, 778, 779, 790], "scatter": [234, 235], "hot": [234, 235], "tensor": [234, 235, 246, 247, 250, 251, 279, 284, 285, 716, 717, 755, 757, 764, 766, 768, 770, 771, 772, 774, 776, 777, 779, 791, 1180, 1181], "unless": [234, 235, 242, 243, 766, 771, 772, 791], "provid": [234, 235, 236, 237, 252, 253, 258, 259, 260, 261, 279, 284, 285, 749, 750, 757, 758, 759, 761, 764, 766, 768, 769, 770, 771, 772, 776, 778, 790, 791], "overrid": [234, 235], "scatter_flat": [234, 235], "occupi": [234, 235], "replac": [234, 235, 246, 247, 250, 251, 280, 284, 285, 750, 753, 759, 761, 762, 767, 769, 770, 771, 776, 779, 791], "scatter_nd": [234, 235, 776, 1181], "empti": [234, 235, 284, 285, 768, 770, 771], "40": [234, 235], "21": [234, 235, 250, 251, 716, 717], "stable_divid": [234, 235, 764], "min_denomin": [234, 235, 716, 717], "divis": [234, 235, 236, 237, 764], "minimum": [234, 235, 246, 247, 252, 253, 716, 717, 1181], "global": [234, 235, 248, 249, 284, 285, 716, 717, 764, 766, 770, 771, 774], "_min_denomin": [234, 235, 716, 717], "numpi": [234, 235, 279, 280, 750, 751, 755, 757, 760, 761, 762, 763, 766, 770, 771, 772, 774, 776, 779, 1180, 1181], "stable_pow": [234, 235], "min_bas": [234, 235], "_min_bas": [234, 235, 248, 249], "stabl": [234, 235, 256, 257, 749, 766, 770, 774, 791], "power": [234, 235, 761, 776, 777, 778], "supports_inplac": [234, 235], "to_list": [234, 235, 1181], "represent": [234, 235, 284, 285, 790], "to_numpi": [234, 235, 777, 1181], "to_scalar": [234, 235], "unstack": [234, 235, 284, 285, 769, 774, 777, 1181], "keepdim": [234, 235, 242, 243, 252, 253, 258, 259, 260, 261, 284, 285, 774], "unpack": [234, 235, 756, 761], "keep": [234, 235, 284, 285, 749, 750, 751, 755, 760, 761, 769, 770, 777, 779], "value_is_nan": [234, 235], "adam_step": [236, 237], "mw": [236, 237, 778], "vw": [236, 237, 778], "step": [236, 237, 281, 710, 711, 749, 750, 752, 753, 759, 766, 768, 769, 770, 771, 774, 777, 778, 779, 790, 1181], "beta1": [236, 237, 778], "beta2": [236, 237, 778], "999": [236, 237, 716, 717, 778], "epsilon": [236, 237, 242, 243, 244, 245, 248, 249, 764, 769, 772, 778], "1e": [236, 237, 244, 245, 248, 249, 763, 764, 769, 772, 778, 779, 1181], "07": [236, 237, 244, 245, 716, 717, 778], "cost": [236, 237], "weight": [236, 237, 240, 241, 764, 769, 774, 778, 779], "w": [236, 237, 240, 241, 284, 285, 716, 717, 774, 777, 778], "dc": [236, 237], "dw": [236, 237], "run": [236, 237, 749, 751, 752, 753, 756, 757, 759, 762, 763, 766, 774, 775, 776, 777, 778, 779, 790, 791], "averag": [236, 237], "moment": [236, 237, 751, 766, 791], "train": [236, 237, 281, 764, 769, 771, 777, 778, 779, 789, 790, 791, 1180, 1181], "forget": [236, 237, 770], "factor": [236, 237, 240, 241, 242, 243, 280], "dure": [236, 237, 258, 259, 284, 285, 714, 715, 749, 764, 767, 769, 770, 771, 772, 791], "adam": [236, 237, 777, 778, 779, 1181], "prevent": [236, 237, 750, 751, 756, 770, 772], "delta": [236, 237], "dcdw": [236, 237], "adam_step_delta": [236, 237], "182": [236, 237], "adam_upd": [236, 237, 778], "lr": [236, 237, 777, 778], "mw_tm1": [236, 237], "vw_tm1": [236, 237], "stop_gradi": [236, 237, 778, 1181], "learn": [236, 237, 279, 280, 749, 751, 754, 764, 773, 790, 1180, 1181], "rate": [236, 237], "rel": [236, 237, 242, 243, 246, 247, 256, 257, 710, 711, 750, 753, 763, 1181], "previou": [236, 237, 750, 757, 761, 762, 779, 791], "time": [236, 237, 254, 255, 279, 280, 281, 749, 750, 751, 755, 757, 759, 761, 764, 766, 767, 769, 770, 772, 774, 777, 779, 791], "stop": [236, 237, 710, 711, 774, 791], "after": [236, 237, 248, 249, 284, 285, 750, 751, 752, 757, 759, 760, 761, 762, 770, 773], "ws_new": [236, 237], "gradient_descent_upd": [236, 237, 1181], "handl": [236, 237, 284, 285, 754, 757, 761, 762, 763, 764, 767, 769, 770, 771, 772, 778], "behind": [236, 237, 750, 754, 761, 773, 775], "scene": [236, 237, 278, 279, 754, 773, 775, 1181], "pytorch": [236, 237, 280, 281, 751, 757, 762, 763, 764, 770, 771, 772, 774, 779, 791, 1180, 1181], "e": [236, 237, 242, 243, 250, 251, 256, 257, 258, 259, 280, 281, 748, 750, 752, 753, 754, 760, 761, 762, 769, 774, 777, 791, 1180], "higher": [236, 237, 773, 774, 779, 791], "order": [236, 237, 256, 257, 279, 284, 285, 749, 750, 751, 753, 755, 757, 758, 759, 760, 761, 762, 763, 766, 768, 769, 770, 771, 772, 777, 779, 791], "optim": [236, 237, 281, 772, 775, 777, 779, 790, 1181], "descent": [236, 237, 778], "new_weight": [236, 237, 777], "95": [236, 237, 250, 251], "98": [236, 237, 250, 251, 716, 717], "97": [236, 237, 716, 717], "96": [236, 237, 716, 717], "like": [236, 237, 280, 749, 750, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 767, 770, 771, 772, 773, 774, 776, 777, 778, 779, 790, 791, 1181], "jax": [236, 237, 280, 281, 750, 751, 755, 757, 761, 762, 763, 766, 770, 771, 772, 774, 776, 779, 791, 1181], "flag": [236, 237, 284, 285, 750, 762, 767, 770, 772], "is_var": [236, 237], "lamb_upd": [236, 237], "max_trust_ratio": [236, 237], "decay_lambda": [236, 237], "trust": [236, 237], "ratio": [236, 237], "decai": [236, 237], "lamb": [236, 237, 778], "784": [236, 237], "78": [236, 237], "02": [236, 237, 250, 251, 716, 717], "01": [236, 237, 248, 249, 749, 766, 779], "5e": [236, 237, 760], "04": [236, 237], "0e": [236, 237], "lars_upd": [236, 237], "lar": [236, 237, 778], "optimizer_upd": [236, 237], "effective_grad": [236, 237], "effect": [236, 237, 258, 259, 280, 751, 757, 758, 762, 768, 769, 772, 791], "3e": [236, 237], "preserve_typ": [236, 237], "preserv": [236, 237, 284, 285, 761, 779, 791], "inform": [236, 237, 749, 750, 751, 761, 763, 769], "variable_data": [236, 237], "intern": [236, 237, 284, 285, 758, 761, 768, 769, 771, 772], "gradient": [237, 755, 777, 778, 790, 791, 1181], "imag": [239, 240, 241, 749, 752, 753, 755, 774, 775, 777, 779, 790, 1181], "conv1d": [240, 241], "filter": [240, 241, 753, 761], "stride": [240, 241], "pad": [240, 241], "data_format": [240, 241], "nwc": [240, 241], "dilat": [240, 241], "batch_siz": [240, 241, 250, 251, 777], "d_in": [240, 241], "convolut": [240, 241], "fw": [240, 241, 761, 763], "d_out": [240, 241], "slide": [240, 241], "window": [240, 241, 750, 752, 753], "valid": [240, 241, 260, 261, 759, 761, 762, 763, 766, 770], "algorithm": [240, 241, 282, 283, 791], "per": [240, 241, 750, 761, 777], "ncw": [240, 241], "wio": [240, 241], "conv1d_transpos": [240, 241], "output_shap": [240, 241], "conv2d": [240, 241, 1181], "nhwc": [240, 241], "h": [240, 241, 754, 769], "fh": [240, 241], "nchw": [240, 241], "hwio": [240, 241], "conv3d": [240, 241], "ndhwc": [240, 241], "conv3d_transpos": [240, 241], "depthwise_conv2d": [240, 241, 1181], "d": [240, 241, 280, 281, 748, 749, 754, 769, 777, 1181, 1187], "randint": [240, 241, 250, 251, 770, 1181], "255": [240, 241], "128": [240, 241], "random_norm": [240, 241, 250, 251, 761], "std": [240, 241, 250, 251, 258, 259, 759], "dropout": [240, 241, 777], "prob": [240, 241], "scale": [240, 241, 248, 249, 762], "bia": [240, 241, 774, 778], "lstm_updat": [240, 241, 774], "init_h": [240, 241, 774], "init_c": [240, 241, 774], "kernel": [240, 241, 774, 791], "recurrent_kernel": [240, 241, 774], "recurrent_bia": [240, 241, 774], "multi_head_attent": [240, 241, 772], "num_head": [240, 241], "context": [240, 241, 750, 759, 761, 770, 771], "mask": [240, 241], "to_q_fn": [240, 241], "to_kv_fn": [240, 241], "to_out_fn": [240, 241, 772], "to_q_v": [240, 241], "to_kv_v": [240, 241], "to_out_v": [240, 241], "scaled_dot_product_attent": [240, 241], "v": [240, 241, 256, 257, 749, 750, 752, 761, 774, 777, 778, 779, 1181], "layer": [241, 248, 249, 279, 755, 758, 774, 775, 778, 1181], "linear_algebra": [242, 243, 755], "choleski": [242, 243, 772], "symmetr": [242, 243, 769], "definit": [242, 243, 750, 764, 770, 776], "u": [242, 243, 280, 748, 749, 750, 755, 761, 763, 767, 769, 772, 778, 791, 1181], "l": [242, 243, 716, 717, 750, 754], "625": [242, 243], "cross": [242, 243, 244, 245, 1181], "vif": [242, 243], "det": [242, 243], "offset": [242, 243, 248, 249], "axis1": [242, 243, 246, 247], "axis2": [242, 243], "eigh": [242, 243], "namedtupl": [242, 243, 254, 255], "eigvalsh": [242, 243], "inv": [242, 243, 1181], "matmul": [242, 243, 755, 761, 766, 774, 1181], "matrix_norm": [242, 243], "ord": [242, 243], "fro": [242, 243], "matrix_rank": [242, 243], "rtol": [242, 243, 763], "rank": [242, 243, 246, 247, 260, 261], "singular": [242, 243], "stack": [242, 243, 246, 247, 284, 285, 774, 1181], "toler": [242, 243, 763], "small": [242, 243, 248, 249, 759, 763, 764, 774, 778, 791], "largest_singular_valu": [242, 243], "equival": [242, 243, 772, 777, 779], "dimension": [242, 243, 246, 247, 252, 253, 258, 259, 260, 261, 284, 285, 774], "ep": [242, 243], "machin": [242, 243, 280, 749, 764, 790, 1180], "associ": [242, 243, 750, 761, 763, 764, 767, 770, 791], "full": [242, 243, 280, 281, 750, 757, 758, 761, 770, 774, 791], "defici": [242, 243], "matrix_transpos": [242, 243, 776], "outer": [242, 243], "pinv": [242, 243, 1181], "qr": [242, 243], "mode": [242, 243, 284, 285, 749, 750, 752, 759, 769, 791], "solv": [242, 243, 775, 790], "svd": [242, 243, 1181], "full_matric": [242, 243], "svdval": [242, 243], "tensordot": [242, 243, 770], "vecdot": [242, 243], "vector_norm": [242, 243], "vector_to_skew_symmetric_matrix": [242, 243, 1181], "binary_cross_entropi": [244, 245], "pred": [244, 245, 764, 769, 772], "label": [244, 245, 750, 751, 773, 774, 775, 779], "predict": [244, 245], "amount": [244, 245, 771], "smooth": [244, 245], "calcul": [244, 245, 258, 259, 280, 284, 285, 758, 774], "binari": [244, 245], "entropi": [244, 245], "between": [244, 245, 246, 247, 279, 284, 285, 757, 759, 761, 763, 764, 766, 768, 769, 773, 775, 776, 777, 779, 790, 1181], "distribut": [244, 245, 250, 251, 751, 761, 771, 791], "357": [244, 245], "223": [244, 245], "cross_entropi": [244, 245, 764, 769, 772], "3862944": [244, 245], "sparse_cross_entropi": [244, 245], "logit": [244, 245], "spars": [244, 245], "loss": [245, 755, 764, 770, 777, 778, 779, 1181], "clip": [246, 247, 716, 717, 764, 769, 772, 777, 779, 1181], "x_min": [246, 247, 779], "x_max": [246, 247, 779], "those": [246, 247, 279, 284, 285, 749, 750, 751, 761, 762, 767, 769], "join": [246, 247, 284, 285, 1181], "befor": [246, 247, 284, 285, 749, 750, 751, 756, 757, 758, 760, 761, 762, 767, 768, 770, 771, 772, 774, 777, 791], "count": [246, 247, 254, 255, 260, 261, 759, 777], "top": [246, 247, 749, 750, 761, 762, 777, 778, 1181], "constant_pad": [246, 247], "pad_width": [246, 247], "split": [246, 247, 284, 285, 748, 750, 773, 774, 791, 1181], "expand_dim": [246, 247, 774, 777, 1181], "ad": [246, 247, 280, 746, 747, 749, 750, 751, 755, 756, 757, 758, 759, 761, 762, 763, 764, 767, 768, 769, 770, 772, 774, 778, 791], "ha": [246, 247, 254, 255, 258, 259, 279, 280, 281, 284, 285, 712, 713, 750, 751, 755, 756, 758, 759, 761, 762, 763, 764, 766, 767, 770, 771, 772, 774, 776, 778, 779, 790, 791], "flip": [246, 247, 762, 776, 777, 779, 1181], "permute_dim": [246, 247], "reshap": [246, 247, 284, 285, 761, 772, 774, 776, 779, 1181], "nativeshap": [246, 247, 250, 251], "sequenc": [246, 247, 258, 259, 260, 261, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 750, 759, 761, 770, 790], "length": [246, 247, 284, 285, 756, 761, 763, 777], "remain": [246, 247, 750, 755, 759, 791], "never": [246, 247, 750, 761, 762], "valueerror": [246, 247], "would": [246, 247, 280, 714, 715, 749, 750, 751, 753, 754, 756, 757, 758, 759, 760, 761, 762, 766, 767, 768, 769, 770, 772, 773, 774, 776, 778, 779, 791, 1181], "necessari": [246, 247, 749, 750, 759, 761, 766, 767, 769, 772], "reus": [246, 247, 761], "memori": [246, 247, 771, 772, 774, 789, 791, 1181], "buffer": [246, 247, 791], "possibl": [246, 247, 280, 748, 749, 750, 751, 758, 759, 761, 769, 770, 772, 774, 777, 790, 791], "roll": [246, 247, 757, 769], "shift": [246, 247, 710, 711, 750, 757, 759], "toward": [246, 247, 749, 752, 774, 1181, 1187], "larger": [246, 247, 258, 259, 761], "smaller": [246, 247, 750, 774], "restor": [246, 247], "num_or_size_split": [246, 247, 284, 285, 774], "with_remaind": [246, 247, 284, 285], "sub": [246, 247, 284, 285, 708, 709, 716, 717, 750, 751, 754, 761, 762, 769, 776, 777, 778, 1181], "mani": [246, 247, 279, 280, 281, 284, 285, 749, 750, 751, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 791], "doe": [246, 247, 280, 284, 285, 750, 751, 753, 754, 755, 757, 758, 759, 761, 762, 763, 764, 766, 770, 772, 774, 776, 777, 791, 1180], "evenli": [246, 247, 284, 285], "entri": [246, 247, 284, 285, 770], "squeez": [246, 247, 1181], "swapax": [246, 247], "axis0": [246, 247], "swap_ax": [246, 247], "tile": [246, 247, 1181], "rep": [246, 247], "zero_pad": [246, 247, 1181], "manipul": [247, 279, 755, 774, 779, 790], "layer_norm": [248, 249], "normalized_idx": [248, 249], "new_std": [248, 249], "normal": [248, 249, 250, 251, 751, 777], "constant": [248, 249, 755, 764, 778, 779, 791], "learnabl": [248, 249, 779], "gamma": [248, 249], "post": [248, 249, 749, 779, 1181, 1187], "multipl": [248, 249, 258, 259, 260, 261, 281, 284, 285, 716, 717, 750, 759, 764, 766, 769, 772, 774, 791], "beta": [248, 249], "deviat": [248, 249, 250, 251, 281, 761], "0976": [248, 249], "3452": [248, 249], "2740": [248, 249], "1047": [248, 249], "5886": [248, 249], "2732": [248, 249], "7696": [248, 249], "7024": [248, 249], "2518": [248, 249], "576": [248, 249], "292": [248, 249], "581": [248, 249], "891": [248, 249], "579": [248, 249], "931": [248, 249], "multinomi": [250, 251], "population_s": [250, 251], "num_sampl": [250, 251], "unnorm": [250, 251, 761], "probabl": [250, 251, 281, 761], "popul": [250, 251, 258, 259, 284, 285, 761, 770, 771, 774], "uniform": [250, 251, 778], "batch_shap": [250, 251, 774, 776], "draw": [250, 251, 751, 761, 763], "sampl": [250, 251, 258, 259, 761, 767], "independ": [250, 251, 759, 760, 767, 774, 779], "onc": [250, 251, 281, 749, 750, 751, 759, 761, 769, 770, 771, 774, 777, 791], "thei": [250, 251, 284, 285, 749, 750, 751, 754, 755, 759, 761, 762, 764, 766, 767, 769, 770, 771, 772, 776, 777, 778, 779, 791, 1181], "ve": [250, 251, 750, 773, 776, 1180, 1181], "drawn": [250, 251, 761], "parameter": [250, 251], "high": [250, 251, 281, 751, 777, 1180], "highest": [250, 251], "g": [250, 251, 281, 754, 761, 762, 769, 774, 791, 1180], "low": [250, 251, 774], "singl": [250, 251, 281, 284, 285, 750, 751, 755, 756, 757, 759, 761, 764, 767, 769, 772, 774, 777, 778, 779, 791], "half": [250, 251], "open": [250, 251, 279, 280, 281, 748, 749, 750, 753, 758, 770, 790, 1181], "interv": [250, 251, 260, 261, 750], "int8": [250, 251, 761, 770], "int16": [250, 251, 761, 770, 774], "46": [250, 251, 760], "44": [250, 251], "72": [250, 251], "235": [250, 251], "27": [250, 251], "float16": [250, 251, 761, 762, 770], "26": [250, 251], "49": [250, 251], "807": [250, 251], "random_uniform": [250, 251, 761, 771, 778, 1181], "boundari": [250, 251], "86": [250, 251], "89": [250, 251, 761], "06": [250, 251, 716, 717, 761, 777], "53": [250, 251, 716, 717], "shuffl": [250, 251, 284, 285, 1181], "object": [250, 251, 284, 285, 708, 709, 714, 715, 716, 717, 761, 762, 767, 769, 776, 779], "random": [251, 284, 285, 755, 771, 779, 790, 1181], "argmax": [252, 253, 1181], "left": [252, 253, 256, 257, 749, 750, 759, 770, 1181], "correctli": [252, 253, 749, 750, 751, 756, 757, 759, 761, 763, 769, 770, 772, 778, 791], "insert": [252, 253], "appropri": [252, 253, 262, 263, 746, 747, 750, 751, 761, 763, 767], "occurr": [252, 253], "argmin": [252, 253, 1181], "singleton": [252, 253, 258, 259, 260, 261, 774], "accordingli": [252, 253, 258, 259, 260, 261, 756, 762, 774], "across": [252, 253, 284, 285, 751, 757, 759, 761, 764, 769, 770], "nonzero": [252, 253], "yield": [252, 253, 756], "choos": [252, 253, 714, 715, 749, 750, 751, 775, 779], "condit": [252, 253, 759, 772, 790], "unique_al": [254, 255], "unique_count": [254, 255], "uniqu": [254, 255, 279, 761, 762, 763, 764, 769, 791], "field": [254, 255, 790], "name": [254, 255, 749, 750, 751, 753, 755, 756, 757, 758, 759, 761, 762, 763, 766, 770, 774, 777, 779], "uc": [254, 255], "unique_invers": [254, 255], "inverse_indic": [254, 255], "reconstruct": [254, 255], "unique_valu": [254, 255], "argsort": [256, 257], "descend": [256, 257], "ascend": [256, 257], "stabil": [256, 257], "maintain": [256, 257, 279, 750], "searchsort": [256, 257], "side": [256, 257, 749, 750], "sorter": [256, 257], "sort": [257, 284, 285, 755], "einsum": [258, 259], "equat": [258, 259], "let": [258, 259, 281, 752, 755, 758, 759, 761, 762, 763, 769, 770, 771, 774, 776, 777, 778, 779, 1181], "over": [258, 259, 260, 261, 262, 263, 279, 281, 712, 713, 746, 747, 749, 750, 758, 759, 761, 766, 772, 774, 776, 791], "arithmet": [258, 259], "x_i": [258, 259, 716, 717, 758], "propag": [258, 259], "By": [258, 259, 260, 261, 759, 762, 764, 772, 774, 778, 779], "entir": [258, 259, 260, 261, 280, 281, 284, 285, 750, 751, 759, 760, 761, 768, 769, 772, 774, 777, 778, 779, 791], "wa": [258, 259, 260, 261, 280, 282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 750, 759, 762, 774, 776], "correct": [258, 259, 750, 751, 754, 756, 757, 764, 769, 770, 771, 1181], "var": [258, 259, 746, 747, 759, 774], "varianc": [258, 259], "degre": [258, 259], "freedom": [258, 259, 766], "adjust": [258, 259], "total": [258, 259, 281, 284, 285, 748, 750, 759, 761, 771, 777, 778, 791], "choic": [258, 259, 281, 749, 772, 777], "constitut": [258, 259, 764, 774], "unbias": [258, 259], "commonli": [258, 259, 764], "refer": [258, 259, 260, 261, 749, 750, 751, 757, 761, 762, 763, 764, 770, 791, 1180], "bessel": [258, 259], "6666665": [258, 259, 777], "08": [258, 259, 749, 761], "667": [258, 259], "statist": [259, 746, 747, 755, 761, 770], "logic": [260, 261, 761, 762, 767, 768, 770, 771, 776, 1181], "AND": [260, 261], "backward": [260, 261, 791], "invalid": [260, 261, 756, 762, 770], "OR": [260, 261, 749, 750, 753], "util": [261, 752, 755, 771], "add_ivy_array_instance_method": 262, "cl": [262, 263, 746, 747], "modul": [262, 263, 281, 284, 285, 746, 747, 749, 753, 756, 761, 762, 764, 766, 768, 772, 774, 775, 777, 779, 790, 791, 1181], "to_ignor": [262, 263, 746, 747], "loop": [262, 263, 746, 747, 756, 766, 791], "_wrap_funct": [262, 263, 746, 747, 764, 767], "we": [262, 263, 278, 279, 280, 281, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 766, 767, 768, 769, 770, 772, 774, 775, 776, 777, 778, 779, 790, 791, 1180, 1181, 1187], "want": [262, 263, 280, 746, 747, 748, 749, 750, 751, 760, 761, 767, 772, 777, 778, 779, 791], "don": [262, 263, 281, 746, 747, 749, 750, 751, 761, 770, 778, 791], "As": [262, 263, 279, 746, 747, 749, 750, 757, 761, 762, 763, 764, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 791], "shown": [262, 263, 284, 285, 746, 747, 750, 751, 755, 756, 757, 759, 761, 762, 774, 776, 791], "our": [262, 263, 279, 280, 746, 747, 748, 749, 750, 751, 755, 756, 759, 760, 761, 762, 763, 769, 770, 773, 776, 777, 778, 779, 791, 1181], "toi": [262, 263, 746, 747], "arrayexampl": [262, 263], "import": [262, 263, 280, 746, 747, 750, 751, 752, 755, 756, 758, 759, 760, 762, 763, 766, 768, 769, 770, 771, 772, 774, 776, 777, 779, 791, 1181, 1187], "pass": [262, 263, 284, 285, 746, 747, 750, 751, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 772, 791], "hasattr": [262, 263, 746, 747], "ml": [278, 280, 281, 748, 773, 774, 775, 777, 778, 779, 790, 1181, 1187], "explos": [278, 280, 1181], "huge": [278, 280, 777, 1181], "tool": [278, 281, 750, 759, 775, 779, 790, 791, 1181], "explod": [278, 279, 1181], "onto": [278, 279, 1181], "why": [278, 280, 750, 772, 776, 1181], "unifi": [278, 280, 284, 285, 768, 774, 791, 1181], "try": [278, 280, 281, 284, 285, 749, 750, 751, 753, 756, 762, 768, 769, 770, 774, 776, 791, 1181], "them": [278, 279, 280, 281, 750, 751, 761, 762, 763, 766, 767, 768, 769, 772, 774, 776, 777, 778, 791, 1180, 1181], "collabor": [278, 279, 280, 1181], "consortium": [278, 280, 1181, 1187], "python": [278, 279, 280, 749, 750, 753, 756, 761, 762, 774, 776, 777, 791, 1180, 1181, 1187], "project": [279, 280, 281, 749, 750, 753, 755, 761, 766, 778, 790, 791], "grown": 279, "consider": [279, 757, 759], "recent": [279, 280, 749, 750, 761], "year": [279, 281, 791, 1181], "especi": [279, 749], "deep": [279, 284, 285, 748, 750, 751, 762, 763, 769, 773, 776, 777, 1181], "seen": [279, 280, 759, 761, 774, 776, 777], "rapidli": 279, "increas": [279, 755], "github": [279, 750, 751, 752, 758, 759, 761, 770], "repo": [279, 280, 281, 749, 750, 752, 760, 770, 774, 776, 777, 778, 779, 790, 1181, 1187], "term": [279, 750, 769, 774, 1180], "These": [279, 280, 281, 750, 751, 752, 756, 757, 758, 759, 761, 762, 763, 764, 769, 770, 772, 774, 775, 777, 778, 779, 791, 1180, 1181, 1187], "written": [279, 749, 755, 757, 758, 761, 762, 768, 772, 774, 776, 779, 791], "while": [279, 280, 284, 285, 749, 750, 751, 756, 759, 760, 761, 766, 772, 776, 778, 779, 791], "wonder": [279, 281, 776], "thing": [279, 280, 281, 749, 750, 751, 756, 761, 766, 776, 777], "research": [279, 790], "develop": [279, 280, 281, 748, 749, 750, 751, 790, 791, 1180, 1181], "consid": [279, 280, 755, 764, 775, 776, 777], "speed": [279, 761], "evolv": 279, "sharabl": 279, "significantli": 279, "hinder": [279, 757], "becom": [279, 281, 750, 759, 762, 769, 791], "outdat": 279, "matter": [279, 759], "month": 279, "rigor": [279, 761], "newest": 279, "version": [279, 280, 281, 749, 750, 758, 762, 763, 770, 774, 1181], "softwar": [279, 280, 749, 750], "pipelin": [279, 768, 779, 1180], "rapid": [279, 280, 749], "prototyp": 279, "vital": [279, 779], "signific": [279, 280, 791], "bottleneck": 279, "futur": [279, 281, 749, 750, 755, 770, 776, 791], "quickli": [279, 281, 749, 750, 777, 778], "obsolet": [279, 281], "user": [279, 280, 749, 750, 752, 753, 754, 761, 762, 766, 767, 769, 772, 773, 774, 791], "constantli": 279, "invent": 279, "wheel": 279, "simultan": [279, 281], "modern": [279, 280], "simpl": [279, 749, 750, 751, 755, 758, 759, 761, 762, 764, 768, 769, 770, 771, 772, 776, 778, 779, 791, 1180], "scalabl": [279, 774], "exactli": [279, 281, 759, 769, 771, 1181, 1187], "common": [279, 284, 285, 751, 755, 756, 759, 764, 767, 769, 770, 771, 791], "ground": [279, 761, 762], "li": 279, "find": [279, 284, 285, 749, 750, 760, 761, 774, 777, 1180, 1181], "essenti": [279, 280, 751, 759, 764, 771], "design": [279, 280, 754, 763, 772, 774, 776, 791], "univers": 279, "abstract": [279, 769, 770, 778, 791], "languag": [279, 281, 774, 1180], "clear": [279, 280, 281, 750, 751, 759, 762, 770, 771, 774, 776], "front": [279, 773, 774, 777, 1181, 1187], "runner": 279, "look": [279, 749, 750, 752, 753, 755, 757, 759, 761, 762, 763, 764, 766, 769, 770, 771, 774, 776, 778, 779, 1181], "littl": [279, 776], "deeper": [279, 750, 754, 773], "core": [279, 749, 751, 771, 779, 1181], "principl": 279, "expos": [279, 774, 778], "almost": [279, 750, 763, 769, 775, 777], "ident": [279, 281, 284, 285, 755, 762, 763, 764, 767, 769, 776, 777, 791, 1180, 1181], "syntax": [279, 280, 756, 770], "There": [279, 749, 750, 751, 756, 759, 760, 762, 763, 764, 768, 769, 770, 774, 777, 791], "wai": [279, 280, 749, 751, 760, 761, 766, 772, 776, 777, 778, 779, 791], "unsurprisingli": [279, 759], "fundament": [279, 774], "consist": [279, 284, 285, 768, 770, 772], "veri": [279, 280, 749, 750, 751, 755, 757, 759, 761, 762, 764, 769, 771, 772, 775, 777, 778, 779, 791, 1181], "similar": [279, 751, 755, 761, 762, 767, 769, 770, 771, 777, 791], "convent": [279, 755, 757, 766, 790], "introduc": [279, 762, 769, 770, 777], "2006": 279, "present": [279, 284, 285, 750, 751, 757, 760, 769, 770, 771, 772, 774], "itself": [279, 749, 750, 762, 769, 772, 778, 790, 791], "cut": 279, "cloth": 279, "adher": [279, 280, 758, 760, 774, 779], "semant": [279, 774, 779], "up": [279, 280, 281, 748, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 790, 791], "hopefulli": [279, 280, 281, 749, 750, 751, 752, 753, 754, 755, 757, 758, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790], "paint": [279, 774], "pictur": [279, 751, 774], "how": [279, 281, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 790, 791, 1181, 1187], "pleas": [279, 280, 281, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 1181], "discuss": [279, 280, 281, 748, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 790, 791, 1181], "faq": [279, 280, 281, 774, 776, 777, 778, 779, 790], "reach": [279, 280, 281, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790], "discord": [279, 280, 281, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 790, 1181], "you": [279, 280, 281, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 790, 791, 1180, 1181, 1187], "question": [279, 280, 281, 749, 750, 752, 759, 761, 774, 776, 777, 778, 779, 790, 791, 1181], "central": 280, "goal": [280, 751], "being": [280, 281, 284, 285, 749, 750, 756, 757, 759, 761, 762, 766, 767, 768, 769, 770, 771, 772, 774, 777, 790, 791, 1181], "forgiven": 280, "eyebrow": 280, "somehow": 280, "tensorflow": [280, 281, 750, 751, 755, 757, 760, 761, 762, 763, 770, 771, 772, 774, 779, 791, 1180, 1181], "mxnet": [280, 770, 771, 772, 1181], "strong": [280, 791], "industri": 280, "back": [280, 750, 767, 768, 770, 773, 791, 1181, 1187], "momentum": 280, "won": [280, 281, 750, 779], "just": [280, 281, 749, 750, 758, 759, 760, 761, 762, 763, 764, 766, 767, 770, 772, 776, 777, 791], "make": [280, 281, 749, 750, 751, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 770, 771, 772, 774, 776, 777, 779], "problem": [280, 750, 768, 776], "even": [280, 281, 749, 750, 757, 758, 762, 764, 770, 771, 776, 777, 778, 779, 791], "wors": 280, "funni": 280, "comic": 280, "strip": 280, "easi": [280, 749, 750, 763, 764, 769], "feasibl": [280, 751], "howev": [280, 749, 750, 751, 757, 758, 759, 761, 762, 764, 766, 768, 769, 770, 771, 772, 776, 777, 778, 779, 791], "unlik": [280, 759, 769, 772], "charger": 280, "charact": [280, 756], "instant": [280, 1181], "messag": [280, 750, 756, 759, 774, 776], "much": [280, 749, 750, 751, 755, 762, 768, 769, 770, 772, 774, 776, 777], "mandat": [280, 755, 761, 772], "adopt": [280, 750, 768], "continu": [280, 281, 756, 760, 761, 791], "own": [280, 281, 749, 755, 758, 761, 762, 774, 791, 1180], "call": [280, 712, 713, 750, 753, 755, 757, 758, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 791], "your": [280, 281, 748, 749, 751, 752, 753, 755, 758, 760, 762, 777, 778, 791, 1181], "100": [280, 281, 761, 777, 778, 779, 791, 1181], "despit": [280, 769, 770, 771], "distinct": [280, 749, 758, 769, 772, 773, 1181], "still": [280, 284, 285, 750, 751, 758, 761, 762, 770, 772, 778, 791, 1181], "believ": [280, 750], "share": [280, 284, 285, 759, 761, 763, 764, 766, 769, 774], "bring": [280, 761, 774, 775, 1180], "benefit": [280, 281, 749, 750, 768, 769, 772, 776, 777, 791], "unrel": [280, 750], "what": [280, 281, 750, 752, 754, 757, 758, 759, 761, 767, 769, 773, 774, 776, 777, 778, 779, 790, 791, 1181], "again": [280, 281, 750, 755, 759, 761, 766, 769, 772, 777, 779, 791], "contrari": 280, "bumpi": 280, "road": 280, "allud": [280, 777], "most": [280, 284, 285, 749, 755, 756, 757, 761, 762, 763, 764, 768, 769, 770, 771, 772, 774, 776, 777, 778, 791], "technologi": 280, "success": 280, "reason": [280, 750, 755, 759, 762, 764, 768, 769, 770, 772, 774, 776], "build": [280, 748, 749, 752, 764, 773, 775, 778, 779, 791, 1180, 1181], "custom": [280, 761, 778], "thank": [280, 777], "interoper": 280, "compon": [280, 774], "bio": [280, 749], "hardwar": [280, 749], "initi": [280, 284, 285, 750, 761, 762, 766, 770, 771, 774], "pcie": 280, "interfac": [280, 776, 779, 791, 1180], "motherboard": 280, "raid": 280, "storag": [280, 777], "virtual": [280, 750, 752, 753], "bluetooth": 280, "wireless": 280, "exchang": 280, "btx": 280, "sata": 280, "connect": [280, 749, 778, 779], "host": [280, 791], "bu": 280, "adapt": 280, "enabl": [280, 284, 285, 749, 750, 761, 762, 764, 767, 768, 769, 772, 773, 775, 777, 779, 791, 1180], "anyon": [280, 748, 750, 791], "websit": 280, "tcp": 280, "ip": 280, "node": [280, 284, 285, 769], "commun": [280, 748, 750, 751, 791, 1181, 1187], "network": [280, 764, 769, 774, 778, 790, 1181], "smtp": 280, "send": 280, "gmail": 280, "outlook": 280, "pop": 280, "email": 280, "ieee": 280, "754": 280, "allow": [280, 750, 751, 752, 756, 760, 761, 762, 763, 767, 774, 776, 791, 1180], "live": [280, 281, 770], "did": [280, 751, 779], "aris": [280, 791], "until": [280, 750, 756, 774, 791, 1181], "substanti": [280, 750, 761, 768, 770], "innov": 280, "growth": 280, "usag": [280, 774, 791], "relev": [280, 749, 750, 751, 759, 769, 770, 777], "necess": 280, "parti": [280, 791], "could": [280, 281, 749, 750, 751, 759, 761, 767, 770, 772, 774, 776, 777, 778], "easili": [280, 750, 762, 777, 778, 779, 791, 1181], "engag": [280, 748, 749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772], "regard": [280, 769], "2015": 280, "sinc": [280, 749, 750, 761, 772, 791], "alongsid": 280, "frame": [280, 790], "matur": [280, 791], "state": [280, 757, 758, 761, 770, 773, 774, 775, 777, 790, 1181], "preced": [280, 778], "mention": [280, 749, 750, 757, 759, 764, 772], "aros": 280, "70": 280, "80": 280, "90": [280, 716, 717], "effort": [280, 748, 761, 791], "stage": [280, 748, 750, 753, 754, 756, 1181], "complet": [280, 284, 285, 750, 751, 759, 768, 769, 776, 777], "natur": [280, 759, 768, 790], "certainli": 280, "mission": [280, 1181], "At": [280, 751, 755, 760], "process": [280, 281, 748, 749, 750, 753, 761, 763, 764, 769, 774, 779], "ourselv": 280, "lead": [280, 281, 284, 285, 759, 791], "quansight": 280, "compani": 280, "made": [280, 750, 751, 752, 772, 774, 776], "organ": [280, 755, 764, 768, 769, 1180], "panda": 280, "scipi": 280, "conda": [280, 749, 753], "dask": 280, "apach": 280, "onnx": 280, "scikit": 280, "jupyt": 280, "aw": 280, "cupi": 280, "net": [280, 281, 774, 779], "sympi": 280, "rai": 280, "modin": 280, "spyder": 280, "member": [280, 750, 751], "googl": [280, 1181], "octoml": 280, "further": [280, 281, 750, 753, 759, 761, 762, 768, 773, 777, 778, 1181], "sponsor": 280, "lg": 280, "electron": 280, "microsoft": 280, "shaw": 280, "intel": 280, "togeth": [280, 284, 285, 755, 756, 768, 769, 778, 779, 791], "major": [280, 761, 762, 770, 771, 791], "anoth": [280, 749, 750, 751, 761, 762, 763, 764, 767, 769, 770, 776, 779, 1180], "promis": 280, "pursuit": 280, "unif": [280, 748, 776, 1181, 1187], "clearli": [280, 750, 751, 759, 761], "lot": [280, 281, 767, 770, 791], "thought": [280, 749, 750, 757], "care": [280, 750, 779], "attent": [280, 750, 768], "gone": [280, 773], "simplifi": [280, 774, 775, 778], "excit": [280, 748, 754, 1181], "complianc": 280, "hope": [280, 791], "suit": [280, 749, 754, 760, 761, 777, 790, 1180], "some": [280, 281, 284, 285, 749, 750, 751, 755, 756, 757, 758, 759, 761, 762, 763, 764, 767, 768, 769, 770, 771, 772, 776, 777, 778, 790, 791, 1180, 1181], "motiv": [280, 776], "great": [280, 281, 750, 761, 774, 776], "convinc": 280, "celebr": 280, "encourag": [280, 790, 791, 1181, 1187], "foundat": 280, "ask": [281, 759, 774, 776, 791, 1181], "perfectli": 281, "happi": [281, 749, 791], "current": [281, 284, 285, 749, 750, 751, 753, 762, 763, 764, 766, 767, 769, 771, 774, 779, 790, 791, 1181], "abund": 281, "better": [281, 752, 754, 755, 762, 763, 773, 776, 777, 778], "ll": [281, 748, 750, 759, 772, 777], "give": [281, 749, 750, 752, 754, 757, 758, 759, 766], "streamlin": 281, "workflow": [281, 750, 751, 766, 777, 789, 1180, 1181], "save": [281, 284, 285, 752, 756, 761, 791], "week": [281, 750, 1181], "sai": [281, 749, 767, 776], "deepmind": 281, "releas": [281, 749, 750, 751, 755, 770, 791, 1181], "awesom": 281, "paper": 281, "love": 281, "perceiverio": 281, "happen": [281, 749, 750, 761, 777], "slew": 281, "rush": 281, "f": [281, 748, 750, 753, 754, 756, 761, 769, 774, 777], "inevit": 281, "often": [281, 756, 761, 764, 791], "erron": 281, "poor": 281, "converg": 281, "issu": [281, 748, 751, 759, 761, 766, 770, 774, 778, 791], "publish": [281, 791], "manag": [281, 748, 772, 791], "get": [281, 284, 285, 748, 749, 751, 754, 761, 763, 764, 767, 770, 771, 772, 774, 775, 776, 777, 778, 1180, 1181, 1187], "work": [281, 749, 750, 751, 754, 759, 760, 761, 762, 770, 771, 773, 774, 776, 778, 779, 1181, 1187], "repositori": [281, 749, 750, 752, 753, 756, 760], "pull": [281, 748, 749, 751, 752, 753, 755, 759, 791], "request": [281, 748, 751, 755, 759], "confus": [281, 772, 1180], "expect": [281, 750, 761, 791, 1181], "codebas": [281, 748, 754, 755, 761, 770, 772, 773, 1181], "hour": 281, "spent": 281, "spin": 281, "off": [281, 749, 773], "address": [281, 750, 751, 768, 774], "sake": 281, "line": [281, 749, 756, 759, 760, 761, 767, 768, 775, 776, 777, 778, 789, 1181, 1187], "directli": [281, 750, 755, 758, 761, 762, 764, 767, 768, 769, 770, 771, 772, 774, 776, 778, 779, 790, 791], "guarante": [281, 768, 791], "turn": [281, 749, 759, 761, 769], "few": [281, 750, 751, 761, 764, 769, 770, 771, 772, 775, 776, 777, 778, 789, 1181, 1187], "automat": [281, 749, 750, 751, 754, 756, 764, 769, 770, 773, 775, 778, 779, 1180, 1181], "everyon": [281, 748, 750, 791], "regardless": [281, 284, 285, 748, 776, 779], "wouldn": [281, 770], "nice": [281, 761], "know": [281, 750, 761, 770], "among": [281, 284, 285, 761], "frantic": 281, "port": 281, "lucid": 281, "honk": 281, "improv": [281, 750, 764, 774, 1180], "understand": [281, 749, 750, 751, 752, 753, 754, 757, 758, 759, 760, 762, 763, 773], "hasn": 281, "now": [281, 749, 753, 755, 756, 757, 761, 766, 767, 769, 770, 776, 777, 779, 790, 791], "spend": 281, "torchvis": 281, "sonnet": 281, "about": [281, 749, 750, 755, 757, 760, 761, 770, 773, 774, 776, 777, 778, 779, 791], "next": [281, 749, 750, 751, 752, 753, 758, 759, 766, 767, 775, 776, 777, 1181], "everyth": [281, 750, 751, 759, 761, 763, 775, 791], "said": 281, "level": [281, 748, 750, 751, 764, 773, 774, 777, 778, 779, 791, 1180], "trainer": [281, 789, 791, 1181], "statu": [281, 751], "quo": 281, "kera": 281, "dopamin": 281, "ignit": 281, "catalyst": 281, "lightn": 281, "fastai": 281, "haiku": [281, 779], "flax": [281, 779, 791], "trax": [281, 779], "objax": [281, 779], "idea": [281, 752, 755, 762, 790], "fulli": [281, 757, 768, 772, 774, 775, 776, 777, 778, 779, 791], "offer": [281, 778], "containerwithactiv": 282, "dict_in": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "queue": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 777], "queue_load_s": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "container_combine_method": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "list_join": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "queue_timeout": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "print_limit": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "key_length_limit": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "print_ind": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "print_line_spac": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "ivyh": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "default_key_color": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "green": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 749, 750], "keyword_color_dict": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "rebuild_child_contain": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "types_to_iteratively_nest": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "alphabetical_kei": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "containerbas": [282, 283, 284, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 769], "key_chain": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "to_appli": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "prune_unappli": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "map_sequ": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "exact": [282, 283, 284, 285, 750, 759, 774], "formul": [282, 283], "chain": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 768, 769, 778, 779, 791], "skip": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 753, 761, 767], "prune": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717], "map": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 755, 757, 761, 764, 769, 777, 790, 791, 1180], "unit": [282, 283, 760, 761, 762, 770, 791], "slope": [282, 283], "leaki": [282, 283], "rectifi": [282, 283], "static": [282, 283, 284, 285, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 746, 747, 751, 758, 759, 764, 767, 791], "static_gelu": [282, 283], "static_leaky_relu": [282, 283], "static_relu": [282, 283], "static_sigmoid": [282, 283], "static_softmax": [282, 283], "static_softplu": [282, 283], "__getitem__": [284, 285, 769], "queri": [284, 285, 769, 770, 776], "slice": [284, 285], "dictionari": [284, 285, 762, 777, 791], "around": [284, 285, 750, 757, 762, 764, 768, 776, 791, 1180], "multiprocess": [284, 285, 777, 791], "asynchron": [284, 285], "wait": [284, 285, 750, 751], "combin": [284, 285, 750, 759, 761, 764, 768, 769, 779], "arriv": [284, 285], "timeout": [284, 285], "limit": [284, 285, 750, 756, 759, 761, 762, 777, 791], "whitespac": [284, 285], "indent": [284, 285, 777], "extra": [284, 285, 759, 761, 762, 763, 767, 768, 770, 774], "newlin": [284, 285, 758], "color": [284, 285], "termin": [284, 285, 749, 750, 753, 760, 769, 774, 777], "termcolor": [284, 285], "rebuild": [284, 285, 752], "found": [284, 285, 749, 750, 752, 756, 758, 762, 766, 767, 768, 769, 772], "constructor": [284, 285, 770, 771, 776], "param": [284, 285, 779], "kept": [284, 285, 750, 755, 772], "structur": [284, 285, 750, 753, 755, 764, 768, 769, 777, 778], "alphabet": [284, 285], "__setitem__": [284, 285, 768, 769, 776], "all_fals": [284, 285], "assert_is_bool": [284, 285], "assert": [284, 285, 755, 756, 761, 776, 777], "all_key_chain": [284, 285], "include_empti": [284, 285], "all_tru": [284, 285, 769, 777], "as_bool": [284, 285], "assert_contains_sub_contain": [284, 285], "sub_cont": [284, 285], "partial": [284, 285, 750], "diff": [284, 285, 759, 769, 777], "screen": [284, 285, 777], "assert_contains_sub_structur": [284, 285], "check_shap": [284, 285], "assert_ident": [284, 285], "check_typ": [284, 285], "same_arrai": [284, 285, 777], "assert_identical_structur": [284, 285], "at_key_chain": [284, 285], "ignore_key_error": [284, 285], "ignore_non": [284, 285], "at_kei": [284, 285], "ignor": [284, 285, 759, 761, 791], "substr": [284, 285], "access": [284, 285, 750, 751, 753, 762, 770], "config": [284, 285, 777], "prioriti": [284, 285, 750, 772], "right": [284, 285, 748, 749, 750, 754, 759, 777], "duplic": [284, 285, 756, 758, 766, 767, 778], "configur": [284, 285, 749, 750, 752, 753, 767, 770], "container_rightmost": [284, 285], "common_key_chain": [284, 285, 769], "cont_inplace_upd": [284, 285], "content": [284, 285, 751, 753, 762, 772, 774, 777], "contains_sub_contain": [284, 285], "contains_sub_structur": [284, 285], "create_if_abs": [284, 285], "alreadi": [284, 285, 749, 750, 751, 757, 766, 769, 770, 791, 1181], "noth": [284, 285, 750], "cutoff_at_depth": [284, 285], "depth_cutoff": [284, 285], "summari": [284, 285, 749, 750, 761], "cutoff_at_height": [284, 285], "height_cutoff": [284, 285], "deep_copi": [284, 285, 777], "belong": [284, 285, 751, 778], "dev_str": [284, 285], "diff_kei": [284, 285], "detect_key_diff": [284, 285], "detect_value_diff": [284, 285], "detect_shape_diff": [284, 285], "treat": [284, 285, 761, 775, 779], "detect": [284, 285, 749, 751, 756, 761, 766, 769, 777, 778], "without": [284, 285, 750, 755, 756, 757, 759, 761, 762, 764, 768, 769, 770, 771, 776, 777, 778, 790, 791], "container0": [284, 285], "duplicate_array_keychain": [284, 285], "find_sub_contain": [284, 285], "sub_cont_to_find": [284, 285], "exsit": [284, 285], "find_sub_structur": [284, 285], "sub_struc_to_find": [284, 285], "flatten_key_chain": [284, 285, 777], "__": [284, 285, 759, 777], "above_height": [284, 285, 777], "below_depth": [284, 285, 777], "format_key_chain": [284, 285], "format_fn": [284, 285], "format": [284, 285, 708, 709, 753, 754, 758, 759, 770, 771, 774, 776, 777, 1181], "string": [284, 285, 756, 766, 770, 771, 774, 777], "from_disk_as_hdf5": [284, 285, 777], "h5_obj_or_filepath": [284, 285], "slice_obj": [284, 285], "load": [284, 285, 791], "disk": [284, 285, 777], "h5py": [284, 285], "file": [284, 285, 749, 750, 751, 753, 755, 756, 758, 761, 764, 766, 768, 769, 774, 777], "hdf5": [284, 285, 777], "filepath": [284, 285, 750], "h5": [284, 285], "from_disk_as_json": [284, 285, 777], "json_filepath": [284, 285], "json": [284, 285, 777], "were": [284, 285, 712, 713, 750, 755, 756, 761, 774], "abl": [284, 285, 749, 750, 764, 770, 772, 779], "from_disk_as_pickl": [284, 285, 777], "pickle_filepath": [284, 285], "pickl": [284, 285, 769, 777], "from_flat_list": [284, 285], "flat_list": [284, 285], "hierarchi": [284, 285, 777], "flat": [284, 285], "h5_file_s": [284, 285], "handle_inplac": [284, 285], "prime": [284, 285], "overwritten": [284, 285, 766, 768], "has_kei": [284, 285], "query_kei": [284, 285], "somewher": [284, 285], "has_key_chain": [284, 285], "leafwis": [284, 285], "well": [284, 285, 750, 761, 762, 770, 772, 778, 779, 790], "identical_array_shap": [284, 285], "identical_config": [284, 285], "identical_structur": [284, 285], "if_exist": [284, 285], "key_chains_contain": [284, 285], "sub_str": [284, 285], "list_stack": [284, 285, 777], "dim": [284, 285, 763, 770], "func": [284, 285], "map_cont": [284, 285], "include_self": [284, 285], "possibi": [284, 285], "max_depth": [284, 285], "multi_map": [284, 285, 769], "map_nest": [284, 285], "leftmost": [284, 285], "multi_map_in_static_method": [284, 285, 769], "fn_name": [284, 285, 763, 766], "num_arrai": [284, 285, 761], "overwrite_at_key_chain": [284, 285], "overwrit": [284, 285, 750, 772, 774], "target_dict": [284, 285], "return_dict": [284, 285], "prune_empti": [284, 285], "keep_non": [284, 285], "prune_key_chain": [284, 285], "key1": [284, 285, 778], "key2": [284, 285], "key3": [284, 285], "prune_key_from_key_chain": [284, 285], "certain": [284, 285, 749, 750, 761, 762, 770, 791], "decid": [284, 285, 749, 751, 762, 770], "remov": [284, 285, 750, 751, 753, 758, 761, 764, 766, 770, 779], "prune_kei": [284, 285], "prune_keys_from_key_chain": [284, 285], "remove_key_length_limit": [284, 285], "remove_print_limit": [284, 285], "reshape_lik": [284, 285], "leading_shap": [284, 285], "return_cont": [284, 285], "restructur": [284, 285], "keep_orig": [284, 285], "transpos": [284, 285, 772, 776, 779, 1181], "old": [284, 285, 749, 766, 772], "start": [284, 285, 710, 711, 748, 749, 750, 751, 752, 753, 754, 758, 759, 762, 770, 773, 774, 776, 777, 778, 790, 791], "restructure_key_chain": [284, 285], "keychain_map": [284, 285], "set_at_key_chain": [284, 285], "set_at_kei": [284, 285], "set_framework": [284, 285], "set_ivy_backend": [284, 285], "ivy_backend": [284, 285], "attribut": [284, 285, 758, 762, 767, 769, 770, 772, 775, 776, 777, 778], "show": [284, 285, 749, 750, 751, 759, 761, 772, 790, 791, 1181], "show_sub_contain": [284, 285], "sub_cont_or_keychain": [284, 285], "shuffle_h5_fil": [284, 285], "seed_valu": [284, 285], "dataset": [284, 285, 777, 789, 1181], "align": [284, 285, 749, 750, 762, 774, 776, 1180, 1181, 1187], "seed": [284, 285, 1181], "size_ordered_arrai": [284, 285], "keychain": [284, 285], "smallest": [284, 285], "largest": [284, 285, 790], "slice_kei": [284, 285], "key_slic": [284, 285], "all_depth": [284, 285], "slice_via_kei": [284, 285], "sort_by_kei": [284, 285], "split_cont": [284, 285], "constitu": [284, 285, 779], "structural_diff": [284, 285], "to_dict": [284, 285], "to_disk_as_hdf5": [284, 285, 777], "starting_index": [284, 285], "max_batch_s": [284, 285], "read": [284, 285, 753, 1181], "r": [284, 285, 749, 750, 754], "later": [284, 285, 751, 761], "append": [284, 285, 753, 761, 774, 777], "to_disk_as_json": [284, 285, 777], "to_disk_as_pickl": [284, 285, 777], "to_flat_list": [284, 285], "to_iter": [284, 285, 769], "leaf_keys_onli": [284, 285], "to_iterator_kei": [284, 285], "to_iterator_valu": [284, 285], "to_json": [284, 285], "to_nested_list": [284, 285], "to_raw": [284, 285], "raw": [284, 285, 758], "trim_kei": [284, 285], "max_length": [284, 285], "try_kc": [284, 285], "tri": [284, 285], "concatten": [284, 285], "unstack_cont": [284, 285], "dim_siz": [284, 285], "update_config": [284, 285], "with_default_key_color": [284, 285], "with_entries_as_list": [284, 285], "with_ivy_backend": [284, 285], "with_key_length_limit": [284, 285, 777], "with_print_ind": [284, 285, 777], "with_print_limit": [284, 285, 777], "with_print_line_spac": [284, 285], "containerwithconvers": 708, "static_to_ivi": [708, 709], "static_to_n": [708, 709], "containerwithcr": 710, "2324": [710, 711], "234": [710, 711], "123": [710, 711, 761], "static_arang": [710, 711], "static_asarrai": [710, 711], "static_empty_lik": [710, 711], "static_ey": [710, 711], "n_row": [710, 711], "n_col": [710, 711], "static_from_dlpack": [710, 711], "static_full_lik": [710, 711], "static_linspac": [710, 711], "num": [710, 711, 750, 774], "endpoint": [710, 711], "static_logspac": [710, 711], "static_meshgrid": [710, 711], "static_native_arrai": [710, 711], "static_on": [710, 711], "static_ones_lik": [710, 711], "static_tril": [710, 711], "static_triu": [710, 711], "static_zero": [710, 711], "static_zeros_lik": [710, 711], "containerwithdatatyp": 712, "718": [712, 713, 716, 717], "618": [712, 713, 716, 717], "broadcats": [712, 713], "static_astyp": [712, 713], "static_broadcast_arrai": [712, 713], "And": [712, 713], "static_broadcast_to": [712, 713], "static_can_cast": [712, 713], "from_": [712, 713], "static_default_float_dtyp": [712, 713], "float_dtyp": [712, 713], "static_dtyp": [712, 713], "static_finfo": [712, 713], "static_function_supported_dtyp": [712, 713], "fn": [712, 713, 774], "static_function_unsupported_dtyp": [712, 713], "static_iinfo": [712, 713], "static_is_bool_dtyp": [712, 713], "dtype_in": [712, 713], "static_is_float_dtyp": [712, 713], "roughli": [712, 713], "static_is_int_dtyp": [712, 713], "static_is_uint_dtyp": [712, 713], "static_result_typ": [712, 713], "containerwithdevic": 714, "static_dev": [714, 715], "static_to_devic": [714, 715], "move": [714, 715, 750, 755], "__dlpack__": [714, 715], "caveat": [714, 715], "portabl": [714, 715, 1181], "containerwithelementwis": [716, 769], "524": [716, 717], "644": [716, 717, 778], "305": [716, 717], "61": [716, 717], "41": [716, 717], "915": [716, 717], "29": [716, 717], "983": [716, 717], "75": [716, 717], "35": [716, 717], "978": [716, 717], "696": [716, 717], "993": [716, 717], "203": [716, 717], "34": [716, 717], "52": [716, 717], "333": [716, 717], "thefunct": [716, 717], "649": [716, 717], "220": [716, 717], "959": [716, 717], "865": [716, 717], "floordmod": [716, 717], "metho": [716, 717], "999999999999": [716, 717], "898": [716, 717], "0414": [716, 717], "956": [716, 717], "28": [716, 717], "84": [716, 717], "j": [716, 717, 750, 754], "threshold": [716, 717], "300": [716, 717, 761], "527": [716, 717], "301": [716, 717], "757": [716, 717], "279": [716, 717], "835": [716, 717], "347": [716, 717], "721": [716, 717], "static_ab": [716, 717], "static_aco": [716, 717], "static_acosh": [716, 717], "static_add": [716, 717, 758, 759, 769], "static_asin": [716, 717], "412": [716, 717], "201": [716, 717], "static_asinh": [716, 717], "static_atan": [716, 717], "static_atan2": [716, 717], "static_atanh": [716, 717], "static_bitwise_and": [716, 717], "static_bitwise_invert": [716, 717], "static_bitwise_left_shift": [716, 717], "static_bitwise_or": [716, 717], "static_bitwise_right_shift": [716, 717], "static_bitwise_xor": [716, 717], "static_ceil": [716, 717], "static_co": [716, 717], "static_cosh": [716, 717], "static_divid": [716, 717], "static_equ": [716, 717], "static_erf": [716, 717], "static_exp": [716, 717], "static_expm1": [716, 717], "areal": [716, 717], "static_floor": [716, 717], "static_floor_divid": [716, 717], "static_floormod": [716, 717], "static_great": [716, 717], "static_greater_equ": [716, 717], "static_isfinit": [716, 717], "static_isinf": [716, 717], "static_isnan": [716, 717], "static_less": [716, 717], "static_less_equ": [716, 717], "static_log": [716, 717], "static_log10": [716, 717], "static_log1p": [716, 717], "static_log2": [716, 717], "static_logaddexp": [716, 717], "static_logical_and": [716, 717], "static_logical_not": [716, 717], "static_logical_or": [716, 717], "static_logical_xor": [716, 717], "static_maximum": [716, 717], "static_minimum": [716, 717], "static_multipli": [716, 717], "static_neg": [716, 717], "static_not_equ": [716, 717], "static_posit": [716, 717], "static_pow": [716, 717], "static_remaind": [716, 717], "static_round": [716, 717], "thevfunct": [716, 717], "static_sign": [716, 717], "static_sin": [716, 717], "static_sinh": [716, 717], "static_sqrt": [716, 717], "static_squar": [716, 717], "static_subtract": [716, 717], "static_tan": [716, 717, 759, 769], "143": [716, 717, 759], "38": [716, 717, 759], "static_tanh": [716, 717], "995": [716, 717], "9999": [716, 717], "static_trunc": [716, 717], "add_ivy_container_instance_method": 746, "containerexampl": [746, 747], "strongli": [748, 749, 1181, 1187], "welcom": [748, 749, 750, 1181, 1187], "skill": 748, "veteran": 748, "beginn": 748, "aspect": [748, 777, 1181], "guid": [748, 749, 750, 751, 756, 1181], "through": [748, 750, 751, 754, 759, 761, 762, 763, 764, 766, 767, 769, 772, 773, 774, 777, 778, 779, 790], "journei": [748, 1181, 1187], "inclusvi": 748, "big": [748, 791], "team": [748, 749, 750, 751], "board": 748, "contributor": [748, 749, 750, 773, 1181], "section": [748, 750, 751, 752, 754, 755, 757, 758, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 777, 778], "best": [748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772], "go": [748, 749, 750, 751, 752, 754, 755, 759, 762, 763, 766, 773, 777, 791], "finish": [748, 749, 754, 1181], "dive": [748, 750, 751, 762, 763, 769, 773, 776, 777, 791, 1181], "environ": [748, 750, 752, 753, 790], "basic": [748, 751, 753, 759], "fork": [748, 749], "doc": [748, 751, 757, 758, 759, 763, 774, 777, 778, 1181], "document": [748, 750, 759, 761, 762, 763, 777, 779], "local": [748, 749, 752, 753, 760, 764], "task": [748, 750, 790, 1181], "help": [748, 749, 751, 752, 759, 761, 762, 766, 767, 768, 769, 776, 777, 778, 789, 1180, 1181], "video": [748, 750, 755, 757, 758, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772], "realli": [749, 769, 791], "contribut": [749, 750, 751, 752, 774, 1187], "page": [749, 750, 775, 776, 779, 789, 1181, 1187], "explain": [749, 750, 751, 755, 756, 757, 758, 759, 761, 762, 764, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 1181, 1187], "prefer": [749, 760, 762, 767, 769], "git": [749, 750, 752, 761], "submodul": [749, 750, 751, 753, 760, 761, 764, 767, 771, 773, 774, 778, 1180, 1181], "com": [749, 752, 770], "unifyai": [749, 750, 752, 753], "gh": 749, "your_fold": 749, "id": [749, 752, 756, 768, 769], "cours": [749, 750, 759, 777, 791], "whatev": [749, 769, 791], "familiar": [749, 751], "sure": [749, 750, 751, 760, 761], "elig": 749, "free": [749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 790, 1181], "student": 749, "licenc": 749, "peopl": [749, 750, 754], "seem": [749, 778, 779, 791], "miss": [749, 751, 756, 759, 761, 768, 769], "explicit": [749, 753, 769, 770, 772, 774, 791], "remind": 749, "here": [749, 750, 751, 755, 757, 759, 761, 762, 763, 769, 772, 774, 775, 776, 777, 778, 779, 790, 791], "pace": 749, "suggest": [749, 750, 751, 755, 761], "packag": [749, 752, 753, 756, 762, 791], "pypi": [749, 751, 791], "person": [749, 750], "experi": [749, 775, 777, 791], "avoid": [749, 750, 755, 756, 761, 766, 767, 769], "pip": [749, 752, 790, 1181], "instal": [749, 750, 752, 753, 756, 766, 790, 1181], "abil": [749, 775, 791], "perhap": [749, 776, 777, 778, 791], "track": [749, 750], "command": [749, 753, 760, 767, 1181], "ivy_dev": [749, 750, 752, 753], "setup": [749, 750, 752], "click": [749, 750, 758, 775, 1181], "icon": [749, 750], "panel": 749, "drop": [749, 791], "down": [749, 761, 1180], "path": [749, 753, 763, 772], "manual": [749, 750, 751, 761, 762, 778], "builtin": [749, 753, 776, 778], "doesn": [749, 753, 759, 761, 762, 766, 770, 774, 791], "requir": [749, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 767, 768, 770, 771, 774, 776, 791], "cmd": [749, 753], "directori": [749, 750, 752, 753, 761, 762], "folder": [749, 750, 752, 753, 755, 760, 761, 764], "python3": [749, 750, 752, 753], "script": [749, 750, 753, 759, 774, 791], "bat": [749, 750, 752, 753], "bin": [749, 750, 752, 753, 760], "mac": [749, 750, 752, 753], "linux": [749, 750, 752, 753], "virtualenv": 749, "o": [749, 754, 774], "note": [749, 750, 751, 752, 755, 758, 759, 761, 762, 763, 770], "tick": [749, 750], "To": [749, 752, 755, 756, 759, 760, 761, 762, 763, 764, 769, 777, 778, 779, 1181], "ivy_test": [749, 750, 762, 763], "test_array_api": [749, 750, 760, 761], "cd": [749, 750, 752, 753], "txt": 749, "visual": [749, 791], "jetbrain": 749, "remot": 749, "mitig": 749, "potenti": [749, 750, 751, 773], "conflict": [749, 750, 777], "yet": [749, 791], "particular": [749, 750, 755, 759, 760, 761, 762, 763, 766, 767, 770, 772], "system": [749, 750, 766, 791], "jaxlib": [749, 755, 757, 770, 771, 774, 776], "instruct": [749, 751], "desktop": [749, 752], "wsl": 749, "powershel": 749, "admin": 749, "visit": [749, 750, 763], "link": [749, 751, 752, 762, 770], "profession": 749, "execut": [749, 750, 753, 759, 769, 772, 774, 776, 779, 791, 1180], "deploy": 749, "press": [749, 750, 777, 1181], "ok": 749, "caus": [749, 750, 759, 761, 766, 769, 772, 791], "earlier": [749, 750], "virtualis": 749, "sudo": 749, "apt": 749, "ca": 749, "certif": 749, "curl": 749, "gnupg": 749, "lsb": 749, "mkdir": 749, "keyr": 749, "fssl": 749, "download": [749, 761], "gpg": 749, "dearmor": 749, "echo": 749, "deb": 749, "arch": 749, "dpkg": 749, "architectur": [749, 779, 791], "lsb_releas": 749, "tee": 749, "null": 749, "ce": 749, "cli": 749, "containerd": 749, "io": 749, "compos": [749, 761, 769, 791], "plugin": 749, "systemctl": 749, "permiss": 749, "relat": [749, 750, 752, 755, 756, 761, 790], "simplest": [749, 759, 761], "becaus": [749, 750, 757, 758, 761, 762, 763, 764, 766, 767, 768, 770, 771, 772, 774, 778, 779, 791], "header": [749, 750], "recommend": [749, 750, 766], "advanc": 749, "bar": 749, "pytest": [749, 750, 761, 763], "checkbox": [749, 751], "q": [749, 750, 754, 791], "fail": [749, 750, 751, 756, 759, 770], "headach": 749, "arm": [749, 750], "m1": 749, "featur": [749, 750, 755, 757, 762, 777, 791, 1181], "vm": 749, "azur": 749, "cloud": [749, 790], "dockerfil": [749, 753], "longer": [749, 761, 767, 770, 772], "worri": 749, "platform": 749, "agnost": [749, 757, 768, 774, 776, 779, 791, 1181], "usual": [749, 761, 762], "studio": 749, "favourit": 749, "theme": 749, "too": [749, 750, 751, 756, 791], "done": [749, 750, 751, 756, 759, 761, 777], "unsupport": [749, 756, 762], "slow": 749, "ipad": 749, "long": [749, 750, 759, 770, 774], "browser": 749, "cool": [749, 755], "requisit": 749, "head": [749, 1181], "pane": [749, 750], "readi": [749, 762], "begin": [749, 760], "outlin": [749, 750, 751, 754, 758, 761, 764, 769, 772], "dropdown": 749, "tab": [749, 777, 1181], "master": [749, 750], "view": [749, 750], "built": [749, 750, 761, 775, 1180], "bottom": 749, "box": 749, "patient": [749, 751], "upto": [749, 750], "minut": 749, "subsequ": [749, 757, 759, 761, 764, 768, 772, 778], "launch": 749, "That": [749, 750, 761, 776, 777, 778], "previous": [749, 753, 761, 764, 774], "approach": [749, 750, 761, 764, 767, 769, 770, 776, 777, 791], "colour": 749, "applic": [749, 767, 770, 771, 778], "good": [749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 778], "chanc": 749, "vscode": [749, 752], "explor": [749, 750, 775, 779, 790], "troubleshoot": 749, "sometim": [749, 750, 751, 761, 762, 770], "ever": [749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772], "bit": [749, 759, 761, 764, 769, 774, 776], "usr": 749, "under": [749, 750, 754, 758, 759, 760, 761, 762, 764, 769, 773, 774, 777, 779, 791], "flask": 749, "toolbar": [749, 750], "_array_modul": [749, 760], "py": [749, 750, 751, 755, 756, 757, 758, 760, 761, 762, 763, 764, 766, 770, 771, 774, 776, 778, 779], "array_api_test": [749, 750, 760], "2022": 749, "conftest": 749, "comment": [749, 750, 751, 756, 760, 762, 770], "via": [749, 750, 755, 769, 770, 771, 772, 774, 776, 777, 790], "refresh": 749, "nutshel": [749, 757], "hook": 749, "lint": 749, "fix": [749, 750, 760, 761, 770], "attempt": [749, 756, 791], "succe": 749, "problemat": [749, 751], "proce": [749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772], "modifi": [749, 750, 751, 755, 756, 758, 764, 766, 770, 771, 774], "properli": [749, 754], "enter": [749, 750, 757, 767, 768, 770, 771], "unsur": [749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772], "feel": [749, 750, 751, 752, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 771, 772, 773, 1181], "server": [750, 1181], "suitabl": [750, 755, 762, 769], "quick": [750, 754, 778], "tendenc": 750, "land": 750, "isn": [750, 767, 777, 791], "end": [750, 755, 766, 772, 773, 790, 791, 1181, 1187], "world": 750, "come": [750, 761, 762, 778, 789, 1180, 1181, 1187], "fly": 750, "hard": [750, 776], "receiv": [750, 761, 770, 771], "respons": [750, 753, 770], "internship": 750, "trigger": [750, 751], "unansw": 750, "respond": 750, "someon": [750, 791], "strive": [750, 761, 791], "repli": 750, "bug": [750, 761, 770], "serv": [750, 757, 761, 764, 768, 769, 773, 1180, 1181], "suspect": 750, "behaviour": [750, 751, 754, 755, 757, 758, 761, 762, 768, 769, 770, 772, 776], "observ": 750, "confid": 750, "wrong": 750, "someth": [750, 755, 777, 778, 791], "bet": 750, "act": [750, 759, 762, 791], "placehold": [750, 756, 757, 762, 768, 1180], "mark": [750, 751, 761], "ii": 750, "iii": 750, "titl": [750, 751, 1181], "issue_numb": 750, "delet": [750, 753], "No": 750, "progress": [750, 779], "pr": [750, 751, 760], "soon": [750, 770, 789, 791, 1181, 1187], "solut": [750, 761, 769, 770], "review": [750, 751, 755, 759], "merg": [750, 751], "dai": 750, "warn": 750, "appear": 750, "close": [750, 751, 758, 761], "likewis": [750, 757, 758, 764, 769, 770, 777], "freed": 750, "purpos": [750, 753, 757, 759, 761, 762, 764, 767, 768, 769, 773, 776, 1180, 1181], "short": [750, 770, 774, 778], "basi": [750, 760, 777], "situat": [750, 779], "upon": [750, 759, 761, 772, 791], "period": 750, "unabl": 750, "obvious": 750, "reflect": [750, 752, 761, 768], "qualiti": 750, "hypothet": 750, "frustrat": 750, "delai": 750, "busi": 750, "fine": [750, 759, 776, 779], "inact": 750, "me": 750, "unfairli": 750, "investig": 750, "incomplet": 750, "three": [750, 759, 761, 762, 769, 773, 1181], "though": [750, 751, 758, 764, 770, 777, 791], "assign": [750, 756, 762, 766, 772, 776], "regist": 750, "wherea": [750, 757, 759, 761, 764, 768, 770, 771, 779], "primarili": 750, "invit": 750, "roadmap": 750, "mainli": [750, 754, 775, 777, 1180], "fall": [750, 770, 773, 1181], "extend": [750, 755, 757, 758, 766, 791], "ideal": [750, 772, 777], "Such": [750, 761], "describ": [750, 761, 774, 779], "easier": [750, 755, 768, 770, 1180], "regular": 750, "forth": 750, "rare": [750, 771, 791], "scenario": [750, 761], "unfortun": 750, "redund": [750, 770], "Then": [750, 753, 755, 762, 767, 791], "practic": 750, "separ": [750, 761, 763, 768, 769, 774, 776, 777], "branch": [750, 791], "role": [750, 762, 775], "date": 750, "upstream": [750, 760], "complic": [750, 763, 774], "merge_with_upstream": 750, "sh": [750, 760], "name_of_your_branch": 750, "resolv": [750, 770, 774], "clone": [750, 752, 753], "push": [750, 751, 756, 760], "abort": 750, "tediou": [750, 759], "resolut": 750, "stash": 750, "reinstat": 750, "fetch": 750, "uncommit": 750, "unstag": 750, "untrack": 750, "comprehens": 750, "explan": [750, 757, 758, 762, 769, 776], "atlassian": 750, "tutori": [750, 762], "wrote": 750, "piec": [750, 764, 767, 768, 774], "tag": 750, "navig": [750, 754], "blame": 750, "revis": 750, "author": [750, 751, 1181], "eg": [750, 761], "past": 750, "grep": 750, "retriev": 750, "commit_id": 750, "handi": [750, 761], "histori": 750, "toggl": 750, "vertic": 750, "highlight": [750, 759], "whenev": [750, 761, 763, 767, 777], "think": [750, 759], "gain": [750, 773, 778], "quit": [750, 758, 759, 761, 764, 767, 768], "yourself": [750, 751, 761, 790], "simpler": [750, 751, 762], "cannot": [750, 762, 766, 770, 779], "least": [750, 759, 761, 764, 768], "approv": 750, "hash": [750, 777], "detail": [750, 751, 755, 757, 760, 761, 763, 764, 766, 767, 769, 776, 777, 778], "cancel": 750, "speedup": 750, "button": 750, "unavail": 750, "tickbox": 750, "corner": 750, "span": 750, "intent": [750, 772], "larg": [750, 777], "discourag": 750, "philosophi": 750, "frequent": [750, 751], "valuabl": 750, "infrequ": 750, "earli": [750, 1181], "wast": 750, "spot": [750, 759, 764], "mistak": [750, 756], "propos": 750, "mountain": 750, "advoc": [750, 791], "individu": [750, 751, 764, 772], "style": 750, "actual": [750, 754, 762, 764, 772, 773, 778, 791], "aim": [750, 761, 773], "subsect": 750, "session": [750, 1181], "block": [750, 752, 756, 761, 764, 773, 775, 779, 791, 1180, 1181], "edit": [750, 751, 752], "beauti": 750, "particularli": [750, 761, 777, 791], "concern": [750, 754, 759, 769, 772, 773], "effici": [750, 756, 760, 761, 764, 767, 769, 772, 774, 777, 791], "difficult": [750, 761, 770, 791], "undo": 750, "stress": 750, "advantag": [750, 772], "nifti": 750, "reassur": 750, "isol": 750, "bash": [750, 753], "shell": 750, "rm": [750, 752], "fact": [750, 761, 777], "mount": [750, 752], "local_path_to_ivi": 750, "subfold": [750, 755, 761, 763], "insid": [750, 753, 755, 761, 767, 769, 770], "wide": [750, 761], "dep": 750, "fresh": 750, "arsen": 750, "declar": 750, "exec": 750, "rf": 750, "cp": 750, "ivy_contain": 750, "test_ivi": [750, 761, 762, 763], "test_funct": [750, 761], "test_cor": 750, "test_imag": 750, "test_random_crop": 750, "test_creation_funct": 750, "test_arang": 750, "variou": [750, 757, 758, 761, 767, 790, 1180], "gpu": [750, 771, 776], "torch": [750, 755, 757, 761, 762, 763, 764, 766, 768, 770, 771, 772, 774, 776, 777, 779, 791, 1180, 1181], "hypothesi": [750, 751, 760, 763, 767], "text": [750, 751, 758, 759], "ctrl": 750, "prompt": [750, 1181], "whole": 750, "cursor": 750, "alt": 750, "locat": [750, 755, 761, 763, 766, 771], "blog": 750, "debug": [750, 760, 761, 769, 777], "breakpoint": 750, "gutter": 750, "caret": 750, "f8": 750, "f9": 750, "Into": 750, "f7": 750, "smart": 750, "sever": [750, 755, 791], "interest": 750, "consol": [750, 760, 761, 776], "fragment": 750, "pychram": 750, "dummi": 750, "wherein": [750, 761, 767], "failur": [750, 760, 761], "wherebi": 751, "broad": 751, "todo": [751, 762, 765, 770], "commit": [751, 752, 759, 760, 761], "NOT": 751, "resourc": 751, "cover": [751, 758, 759, 761, 764, 767, 773], "lambda": [751, 774, 777], "direct": [751, 762, 778, 779, 790], "bind": [751, 769], "def": [751, 755, 756, 757, 759, 760, 761, 762, 763, 764, 769, 770, 771, 772, 774, 776, 777, 778, 779, 1181], "aforement": 751, "categori": [751, 755, 762, 768, 769, 770, 773, 1181], "parent": [751, 776], "containerwithmanipul": 751, "thorough": [751, 757, 758, 761, 763], "produc": [751, 755, 761], "add_reformatting_checklist_": 751, "category_nam": [751, 757, 758, 764, 770, 771], "autom": [751, 761, 1180, 1181], "bot": 751, "proper": 751, "markdown": 751, "symbol": 751, "emoji": 751, "legend": 751, "stuck": 751, "elabor": 751, "struggl": 751, "assigne": 751, "status": 751, "refrain": 751, "transpil": [751, 762, 773, 775, 1180, 1181, 1187], "verifi": [751, 755, 761, 770, 771, 1181, 1187], "func_nam": [751, 758, 759, 762, 764], "assess": 751, "composit": [751, 754, 761, 763, 766, 768, 769, 770, 772, 774, 778, 779, 791, 1180], "temporari": [751, 770], "altern": [751, 772, 777], "composition": [751, 772], "pend": 751, "helpfulli": 751, "unimpl": 751, "issue_link": 751, "chosen": [751, 762], "thu": [751, 752, 762], "alias": 751, "alias_nam": 751, "function_nam": 751, "notic": [751, 762, 763], "alia": 751, "liner": 751, "meanwhil": 751, "complex": [751, 752, 759, 762, 770, 777, 778, 779, 791, 1180], "reselect": 751, "backend_nam": [751, 757, 758, 764, 766, 767, 770, 771], "extenst": 751, "behav": [751, 763, 772, 776], "helper": [751, 762, 763, 770, 777, 1180], "recreat": [751, 762], "defer": [751, 761, 764, 767, 768, 769, 770, 771, 772], "clearer": [751, 777], "mind": [751, 761, 768, 769], "postion": 751, "keywork": 751, "strategi": [751, 763, 767], "slightli": [752, 762, 769, 774, 778], "alon": [752, 761], "mech": 752, "vision": [752, 789, 1181], "demo": [752, 790, 1181], "grasp": [752, 762], "tree": [752, 753, 770], "dir": [752, 777], "mutual": [752, 764, 769], "venv": 752, "ivy_devscriptsactiv": 752, "immedi": [752, 1181], "ivy_robot": [752, 790], "docker": 752, "my": [752, 755], "pwd": 752, "volum": 752, "pycharm": 752, "pre": [752, 779, 791], "builder": [753, 789, 791, 1180, 1181], "maco": 753, "ubuntu": 753, "uid": 753, "make_docs_without_dock": 753, "synchron": 753, "rest": [753, 779], "remove_doc": 753, "privat": [753, 761], "fulfil": [753, 773, 1181], "autogenerated_sourc": 753, "png": [753, 777], "_imag": 753, "lastli": 753, "rst": 753, "partial_sourc": 753, "conf": 753, "create_rst_fil": 753, "overal": [753, 758, 769, 770, 771, 779], "markup": 753, "extract": [753, 755], "get_functions_and_class": 753, "doctr": 753, "readm": [753, 791], "module_nam": 753, "copy_readme_to_rst": 753, "tabl": 753, "toc": 753, "append_toctree_to_rst": 753, "create_index_rst": 753, "\u03c0": 753, "namespac": [753, 755, 763, 767, 770, 774, 779], "who": [754, 773, 791], "target": [754, 762, 773, 777, 778, 779, 1181], "hood": [754, 759, 761, 764, 769, 773, 774, 777, 779], "weed": [754, 773], "tour": 754, "primari": [754, 761, 762, 766, 770, 772, 791, 1180], "superset": [754, 770, 791], "goe": 754, "unifyin": 754, "dynam": [754, 770, 771, 772, 774], "runtim": [754, 761], "borrow": 754, "frontend": [754, 770, 773, 775, 1180], "taken": [755, 756, 779], "compil": [755, 769, 773, 775, 791, 1180, 1181], "meta": [755, 768], "overlap": 755, "judgement": 755, "some_namespac": 755, "some_backend": [755, 770], "another_backend": 755, "break": [755, 756, 757, 766, 791, 1181], "anyth": [755, 761, 1181], "refactor": 755, "ongo": 755, "file_nam": [755, 761], "my_func": [755, 759], "op": [755, 774, 791], "cooler": 755, "current_backend": [755, 762, 764, 774], "extern": [755, 757, 761], "usabl": [755, 757], "sole": [755, 757], "flexibl": [755, 757], "forward": [755, 758, 761, 766, 779, 790, 791], "something_cool": 755, "clean": [755, 774, 775, 777], "readabl": [755, 757, 768, 769, 776, 777], "_assert_fill_value_and_dtype_are_compat": 755, "isinst": [755, 778, 779], "jaxarrai": [755, 757, 770, 771, 772, 774], "jnp": [755, 757, 770, 771, 772, 774, 779, 1181], "xla_extens": [755, 757, 770, 771, 774, 776], "_to_devic": 755, "np": [755, 757, 761, 762, 763, 768, 770, 771, 772, 774, 776, 777, 779, 1180, 1181], "tf": [755, 757, 762, 768, 770, 771, 772, 774, 779, 791, 1180, 1181], "experiment": [755, 774], "flake8": 756, "ci": [756, 760, 761, 770, 791], "unus": [756, 759, 772], "undefin": 756, "statement": [756, 761, 772, 791], "outsid": [756, 764, 771, 776], "handler": [756, 773, 775, 779, 1180, 1181], "annot": [756, 757], "liter": 756, "star": 756, "byte": 756, "notimpl": 756, "notimplementederror": 756, "achiev": [756, 760, 761, 767, 770, 777, 779, 1180], "unsuccess": 756, "reformat": 756, "exceed": 756, "black": 756, "disobei": 756, "successfulli": 756, "inde": [756, 757, 791], "adress": 757, "conveni": [757, 763, 770, 771, 775, 777, 778, 1180], "revisit": 757, "dedic": [757, 776, 778], "four": [757, 759, 761, 764, 770, 777], "to_native_arrays_and_back": [757, 767, 774], "handle_out_argu": [757, 767, 770, 771, 772, 774], "outputs_to_ivy_arrai": [757, 767, 768, 770, 771], "infer_dtyp": [757, 767, 770, 771], "infer_devic": [757, 767, 770, 771], "__sub__": [757, 759, 768, 769, 776], "__mul__": [757, 759, 768, 769, 776], "__div__": 757, "permit": [757, 761, 768], "dicat": 757, "contrast": [757, 758], "futher": 757, "absenc": [757, 769], "pep": 757, "484": 757, "dictat": [757, 759, 768, 772], "brittl": 757, "intend": 757, "subset": [757, 758, 761, 762, 774], "freeli": 757, "consum": [757, 761, 763, 769], "technic": [757, 772, 791], "original_typ": 757, "cumbersom": 757, "omit": [757, 772], "account": 758, "instanti": 758, "firstli": [758, 759, 764, 767, 768, 770, 772, 777], "templat": [758, 761, 1181], "spec": [758, 759], "array_api": 758, "preview": 758, "render": 758, "incorrectli": 758, "onlin": [758, 759, 1181], "domain": 758, "codomain": 758, "operand": [758, 769], "ref": 758, "But": [758, 767, 769, 772, 779], "needless": 758, "info": [758, 1181], "renam": 758, "judgment": 758, "beyond": [758, 762], "pure": [758, 762, 776, 779, 791], "themselv": [758, 764, 769, 770, 771, 778], "operator_nam": 758, "succinct": 758, "contstructor": 758, "_forward": [758, 774, 777, 778, 1181], "former": [758, 770], "explicitli": [758, 760, 764, 766, 767, 768, 769, 770, 772, 774, 791], "latter": [758, 766, 770], "implicit": [758, 761, 769, 774], "docst": 758, "eight": [759, 773], "static_": 759, "op_nam": 759, "__r": 759, "__truediv__": [759, 768, 769], "recap": [759, 769, 778], "combinatorili": 759, "variat": [759, 761], "grid": [759, 761, 790], "vari": [759, 761, 769, 776], "excess": [759, 766], "okai": [759, 774], "showcas": [759, 790], "demonstr": [759, 776], "replic": [759, 762, 770], "meant": 759, "imaginari": 759, "some_flag": 759, "another_flag": 759, "jointli": 759, "x0": 759, "procedur": 759, "sens": [759, 776], "5574077": 759, "1850398": 759, "5463025": 759, "8422884": 759, "91601413": 759, "9647598": 759, "3738229": 759, "1597457": 759, "0963247": 759, "9955841": 759, "3278579": 759, "multi": [759, 773, 791, 1181, 1187], "pars": [759, 791], "satisfi": 759, "far": [759, 771, 775], "asid": [759, 790], "irrelev": [759, 770], "increasingli": 759, "14254655": 759, "1578213": 759, "380515": 759, "trivial": 759, "static_rol": [759, 769], "exlud": 759, "action": [759, 761], "failing_fn_nam": 759, "minutest": 759, "suffici": 759, "segment": 759, "fault": 759, "thoroughli": 760, "insert_chosen_backend": 760, "array_modul": 760, "set_backend": [760, 764, 766, 767, 770, 774, 776, 779, 1181], "typic": [760, 764], "falsifi": [760, 761], "test_trac": 760, "kw": 760, "decor": [760, 761, 763, 764, 767, 769, 770, 771, 772], "On": [761, 762, 775, 779], "fixtur": 761, "hit": [761, 774], "eleg": 761, "intellig": 761, "rang": [761, 770, 774, 777, 778, 779, 1181], "cach": [761, 764], "unexplor": 761, "known": 761, "repeatedli": 761, "upload": 761, "artifact": 761, "parametr": 761, "plai": [761, 762, 779], "kind": [761, 774, 791], "exhaust": 761, "impli": 761, "henc": [761, 769], "bespok": 761, "_array_or_typ": 761, "standalon": [761, 1180], "test_default_int_dtyp": 761, "clariti": 761, "varieti": [761, 770, 771], "valid_int_dtyp": [761, 763], "uint8": [761, 770], "uint16": [761, 770, 774], "uint32": [761, 770, 774], "uint64": [761, 770, 774], "custom_strategi": 761, "st": [761, 763], "sampled_from": [761, 763], "min_siz": 761, "max_siz": 761, "referenc": 761, "print_hypothesis_exampl": 761, "searchstrategi": 761, "randomis": 761, "simplist": 761, "intricaci": 761, "briefli": [761, 764, 777], "bound": [761, 774], "mechan": [761, 789, 791, 1181], "math": [761, 762, 772, 779, 1181], "inclus": [761, 766, 772], "width": 761, "losslessli": 761, "mostli": 761, "one_of": 761, "datum": 761, "pipe": 761, "overload": 761, "shorthand": 761, "min_valu": [761, 763], "max_valu": [761, 763], "input_dtyp": [761, 763], "as_vari": [761, 763, 767], "reject": 761, "flatmap": 761, "suppos": 761, "interact": [761, 1181], "dataobject": 761, "test_argsort": 761, "initialis": 761, "snippet": 761, "handle_cmd_line_arg": [761, 763, 767], "dtype_and_x": [761, 763], "dtype_and_valu": [761, 763], "ivy_np": [761, 763], "valid_float_dtyp": [761, 763], "num_positional_arg": [761, 763], "test_leaky_relu": 761, "instance_method": [761, 767], "num_posit": 761, "indirectli": 761, "advis": 761, "seri": [761, 762], "9433925": 761, "401298464324817e": 761, "574352379": 761, "99999": 761, "2250738585072014e": 761, "308": 761, "103515625e": 761, "seamlessli": 761, "edg": [761, 1181], "encount": 761, "criterion": 761, "straight": [761, 776, 1181], "array_valu": 761, "valid_ax": 761, "hand": [761, 764, 791], "craft": 761, "polici": [761, 790], "hoc": 761, "overview": [761, 773, 790], "array_dtyp": 761, "array_bool": [761, 763], "na": 761, "test_concat": 761, "test_devic": 761, "array_shap": 761, "test_manipul": 761, "common_shap": 761, "test_lay": 761, "size_bound": 761, "precis": [761, 770], "283405296074752": 761, "564049465049088": 761, "0417876997507982e": 761, "allow_inf": 761, "min_num_dim": [761, 763], "wherev": 761, "reshape_shap": 761, "stand": 761, "fashion": 761, "some_sequ": 761, "allow_subnorm": 761, "exclude_min": 761, "960464477539063e": 761, "coverag": [761, 770], "allow_nan": 761, "get_shap": [761, 763], "allow_non": [761, 763], "max_num_dim": [761, 763], "min_dim_s": [761, 763], "none_or_list_of_float": 761, "200": [761, 777], "199": 761, "99999999999997": 761, "000000000000002": 761, "125": 761, "43759670925832": 761, "get_mean_std": 761, "probabilist": 761, "811428143185347e": 761, "none_or_list_float": 761, "get_bound": 761, "arrays_valu": 761, "put": [761, 762, 791], "73": 761, "36418": 761, "213": 761, "21716926": 761, "get_prob": 761, "099609375": 761, "get_axi": 761, "number_positional_argu": 761, "bodi": 761, "possibli": [761, 791], "test_valu": [761, 763], "enough": [761, 776, 777, 778], "justifi": 761, "unduli": 761, "labori": 761, "straightforward": [761, 777], "report": 761, "test_demo": 761, "failing_test": 761, "traceback": 761, "assertionerror": 761, "shrink": 761, "prescrib": 761, "behavior": [761, 769, 770, 774, 791], "identifi": 761, "closest": 761, "checkout": 761, "scratch": 761, "databas": 761, "therebi": 761, "event": [761, 1181], "test_gelu": 761, "test_fil": 761, "brief": 761, "phase": [761, 791], "notabl": 761, "displai": [761, 769, 777], "verbos": [761, 774, 1181], "newer": 761, "max_exampl": 761, "impact": [761, 778], "deadlin": 761, "weird": 761, "truth": [761, 762], "opt": [761, 766, 770, 772], "suffic": [761, 767], "systemat": 761, "safeguard": 761, "inabl": 761, "num_gpu": [761, 771], "test_result_typ": 761, "bfloat16": [761, 770], "9090909090909091": 761, "lax": [762, 763, 779, 791], "categoris": 762, "unsupported_dtyp": [762, 770], "mathematical_funct": 762, "arithmetic_oper": 762, "same_kind": [762, 763], "subok": [762, 763], "as_ivy_dtyp": 762, "mathemat": 762, "recov": 762, "obtain": 762, "trigonometric_funct": 762, "pointwise_op": 762, "meet": 762, "criteria": 762, "incorpor": [762, 777], "resembl": 762, "omiss": 762, "median": 762, "heavili": [762, 767, 791], "light": [762, 764, 791, 1180], "sensibl": 762, "decis": [762, 769, 774, 776], "deliber": 762, "timelin": 762, "heavi": [762, 763], "logicaland": 762, "addition": [762, 769, 772], "anywai": [762, 767, 768], "supported_dtyp": [762, 770], "counterpart": [762, 767, 769], "deal": [762, 764, 791], "_classes_to_ivy_class": 762, "test_frontend": [762, 763], "test_": 762, "pair": 762, "test_numpi": [762, 763], "numpy_classes_to_ivy_class": 762, "_novalu": 762, "_novaluetyp": 762, "_global": 762, "obviou": [762, 777], "pick": [762, 763], "mimic": 762, "record": [762, 791], "nativeclass": 762, "_native_class": 762, "test_frontend_funct": [762, 763], "background": 762, "keep_dim": 762, "novalu": 762, "youtub": 762, "jump": 763, "knowledg": 763, "function_wrap": 763, "lift": 763, "np_frontend_help": 763, "valid_numeric_dtyp": 763, "fn_tree": 763, "nn": [763, 779, 1181], "test_jax": 763, "test_jax_lax_oper": 763, "available_dtyp": 763, "ivy_jax": 763, "test_jax_lax_tan": 763, "as_variable_flag": 763, "with_out": [763, 767], "native_array_flag": 763, "test_mathematical_funct": 763, "test_np_trigonometric_funct": 763, "test_numpy_tan": 763, "handle_where_and_array_bool": 763, "test_tensorflow": 763, "test_tf_funct": 763, "ivy_tf": 763, "test_tensorflow_tan": 763, "test_torch": 763, "test_pointwise_op": 763, "intersect": [763, 790], "ivy_torch": 763, "test_torch_tan": 763, "_dtype": [763, 776], "list_of_length": 763, "_fill_valu": 763, "elif": [763, 772], "max_dim_s": 763, "test_jax_lax_ful": 763, "uint": [763, 770], "creation_routin": 763, "test_from_shape_or_valu": 763, "test_numpy_ful": 763, "test_tensorflow_ful": 763, "discrep": 763, "test_creation_op": 763, "_requires_grad": 763, "requires_grad": [763, 766], "test_torch_ful": 763, "accommod": 763, "unsign": [763, 774], "categor": [764, 771], "venn": 764, "diagram": 764, "log_pr": [764, 769, 772], "array_arg": 764, "whatsoev": [764, 769, 1180], "cache_fn": 764, "concurr": [764, 769], "modif": 764, "handle_nest": [764, 767, 769, 774], "group": [764, 769], "set_default_dtyp": [764, 770], "default_dtyp": [764, 770], "get_all_arrays_on_dev": 764, "get_backend": [764, 766], "nested_map": 764, "index_nest": 764, "implicit_backend": [766, 774], "__dict__": [766, 774], "ivy_original_dict": [766, 774], "unmodifi": [766, 770], "unset_backend": 766, "unset": [766, 774], "fallback": 766, "backend_handl": [766, 774, 1181], "layout": 766, "memory_format": 766, "preserve_format": 766, "weren": 766, "Not": [766, 777, 778, 791], "vast": [766, 770], "minor": [766, 774, 791], "fn_name_v_1p12_and_abov": 766, "similarli": [766, 770, 776], "fn_name_v_1p01_to_1p1": 766, "wrapper": [767, 768, 769, 770, 772, 776, 1180], "inputs_to_native_arrai": [767, 768], "inputs_to_ivy_arrai": 767, "nearli": 767, "facilit": 767, "integer_array_to_float": 767, "arbitrarili": [767, 769, 777], "test_gradi": 767, "topic": [767, 776], "_data": [768, 776], "organiz": [768, 769], "inherit": [768, 769, 776, 791, 1180], "bear": [768, 769, 770], "necessarili": [768, 769], "although": [768, 769], "underpin": [768, 769, 774], "programmat": [768, 769], "backup": [768, 769], "accident": [768, 769], "absent": [768, 769], "perk": [768, 769], "auto": [768, 769, 777], "throw": [768, 770, 776], "imposs": 768, "coupl": [768, 776, 778], "secondli": [768, 770], "five": [769, 777], "__repr__": 769, "control": [769, 770, 772, 776, 777, 790, 1180], "__getattr__": 769, "underli": 769, "__setattr__": 769, "__contains__": 769, "__getstate__": 769, "__setstate__": 769, "unpickl": 769, "lefthand": 769, "righthand": 769, "presenc": [769, 772], "implicitli": [769, 774], "intuit": [769, 777, 778], "chronolog": 769, "had": [769, 772], "sequenti": [769, 778], "flow": [769, 790], "implic": 769, "eager": [769, 791], "children": 769, "shallowest": 769, "deepest": 769, "all_dtyp": 770, "all_numeric_dtyp": 770, "all_int_dtyp": 770, "all_float_dtyp": 770, "thirdli": 770, "native_float32": 770, "importantli": [770, 776, 779, 790], "arguabl": [770, 771], "compound": 770, "overflow": 770, "default_int_dtyp": 770, "default_float_dtyp": 770, "settabl": [770, 771], "set_default_int_dtyp": 770, "set_default_float_dtyp": 770, "arang": [770, 1181], "mx": [770, 771, 772, 1181], "nd": [770, 771, 772, 1181], "deleg": 770, "shape_to_tupl": 770, "unment": 770, "function_supported_dtyp": 770, "function_unsupported_dtyp": 770, "respest": 770, "invalid_dtyp": 770, "lack": [770, 772], "patch": 770, "84530": 770, "unwarr": 770, "risk": 770, "needlessli": 770, "bloat": 770, "slight": [770, 778], "downsid": 770, "inflat": 770, "donot": 770, "idx": [771, 776], "tpu": 771, "get_all_ivy_arrays_on_dev": 771, "aliv": 771, "total_mem_on_dev": 771, "dev_util": 771, "num_cpu_cor": 771, "default_devic": 771, "dual": 771, "thrown": [771, 791], "set_default_devic": 771, "program": 772, "strictli": 772, "ration": 772, "speak": 772, "subtli": 772, "x_nativ": 772, "val_n": 772, "unspecifi": 772, "predominantli": [772, 790], "support_native_out": 772, "_handle_0_dim_output": 772, "_wrap_fn": 772, "linalg": [772, 1181], "dim0": 772, "len": [772, 776, 779], "dim1": 772, "maxim": [772, 774], "inner": 772, "third": [772, 791], "leverag": 772, "capabl": 772, "input_arrai": 772, "sound": 773, "fledg": [774, 775], "syntact": [774, 779], "fit": 774, "logspac": 774, "construct": [774, 778, 779], "power_seq": 774, "linspac": [774, 1181], "resid": [774, 778], "devicearrai": [774, 776], "face": 774, "backend_stack": 774, "cprint": 774, "_determine_backend_from_arg": 774, "current_backend_str": [774, 776], "importlib": 774, "import_modul": 774, "_backend_dict": 774, "illustr": [774, 790], "un": 774, "unrol": [774, 777], "lstm": 774, "cell": 774, "hidden": [774, 778], "recurr": 774, "timestep": 774, "x_shape": 774, "input_channel": [774, 778], "x_flat": 774, "wi": 774, "wi_x": 774, "wii_x": 774, "wif_x": 774, "wig_x": 774, "wio_x": 774, "wh": 774, "ht": 774, "ct": 774, "hts_list": 774, "wii_xt": 774, "wif_xt": 774, "wig_xt": 774, "wio_xt": 774, "zip": 774, "htm1": 774, "ctm1": 774, "wh_htm1": 774, "whi_htm1": 774, "whf_htm1": 774, "whg_htm1": 774, "who_htm1": 774, "ft": 774, "gt": 774, "ot": 774, "offici": 774, "reliabl": 774, "sacrific": 774, "hear": 774, "virtu": 774, "pure_ivi": 774, "compile_graph": [774, 779], "pure_torch": 774, "cat": [774, 779], "backbon": [774, 777], "_layer": 774, "super": [774, 777, 778, 779], "random_unifrom": 774, "unclean": 774, "wx": 774, "temp": 774, "torchscript": [774, 1180], "example_input": 774, "static_argnum": 774, "static_argnam": 774, "jit": [774, 791], "primit": [775, 791], "upcom": 775, "hierarch": [775, 777, 778], "_init": 776, "_shape": 776, "_size": 776, "functool": 776, "mul": 776, "_devic": 776, "_dev_str": 776, "as_ivy_dev": 776, "_pre_repr": 776, "_post_repr": 776, "framework_str": 776, "_is_vari": 776, "noinspect": 776, "pypep8nam": 776, "answer": [776, 791], "typeerror": 776, "immut": 776, "claim": 776, "truli": 776, "_native_wrapp": 776, "attributeerror": 776, "genuin": 776, "some_method": 776, "rewritten": 776, "__pow__": 776, "strang": 776, "enforc": 776, "compartment": 776, "public": 776, "newshap": 776, "new_shap": 776, "tidi": 776, "shorter": 776, "crystal": 776, "50": 776, "ton": 777, "ado": [777, 778], "incredibli": [777, 791], "soup": 777, "walk": [777, 778], "dct": 777, "cnt": 777, "combo": [777, 1181, 1187], "1000": 777, "3333335": 777, "Or": 777, "grad": [777, 778, 779, 1181], "delimit": 777, "autocomplet": 777, "midwai": 777, "agent": 777, "total_spe": 777, "total_height": 777, "total_width": 777, "ag": 777, "tot": 777, "total_": 777, "total_h": 777, "cnt0": 777, "cnt1": 777, "diff_0": 777, "diff_1": 777, "config0": 777, "config1": 777, "decod": 777, "l0": 777, "l1": 777, "truncat": 777, "decoder__l0": 777, "decoder__l1": 777, "encoder__l0": 777, "encoder__l1": 777, "height": 777, "l0__b": 777, "l0__w": 777, "l1__b": 777, "l1__w": 777, "printabl": 777, "foresight": 777, "untidili": 777, "update_ag": 777, "normalize_img": 777, "img": 777, "img_max": 777, "reduce_max": [777, 1181], "img_min": 777, "reduce_min": [777, 1181], "img_rang": 777, "agent_posit": 777, "agent_veloc": 777, "agent_cam_front_rgb": 777, "agent_cam_front_depth": 777, "agent_cam_rear_rgb": 777, "agent_cam_rear_depth": 777, "agent_cam_lidar": 777, "cleaner": 777, "camera": 777, "front_rgb": 777, "front_depth": 777, "rear_rgb": 777, "rear_depth": 777, "lidar": 777, "rgb": 777, "rear": 777, "veloc": 777, "cam": 777, "cam_max": 777, "cam_min": 777, "cam_rang": 777, "Of": 777, "perman": 777, "afterward": 777, "thread": 777, "pretti": 777, "dataload": [777, 789, 1181], "_cnt": 777, "img_": 777, "_dataset_s": 777, "_batch_siz": 777, "_count": [777, 778], "__next__": 777, "filenam": 777, "img_fnam": 777, "fname": 777, "loaded_img": 777, "cv2": 777, "imread": 777, "from_numpi": 777, "loader": [777, 791], "batch_slic": 777, "mymodel": [777, 1181], "linear0": [777, 778, 1181], "linear1": [777, 778, 1181], "x_in": [777, 778, 779, 1181], "loss_fn": [777, 778, 779, 1181], "reduce_mean": [777, 778, 779, 1181], "execute_with_gradi": [777, 778, 779, 791, 1181], "0145": 777, "grad_fn": 777, "addbackward0": 777, "_create_vari": 778, "output_channel": 778, "with_bia": 778, "_input_channel": 778, "_output_channel": 778, "_w_shape": 778, "_b_shape": 778, "_with_bia": 778, "729": 778, "396": 778, "764": 778, "872": 778, "211": 778, "439": 778, "nightmar": 778, "overcom": 778, "fc": 778, "v0": 778, "v1": 778, "key0": 778, "linear3": 778, "v2": 778, "counter": 778, "fed": 778, "decoupl": 778, "scheme": 778, "weight_initi": 778, "glorotuniform": 778, "bias_initi": 778, "_w_init": 778, "_b_init": 778, "create_vari": 778, "var_shap": 778, "fan_out": 778, "fan_in": 778, "fan_mod": 778, "fan_sum": 778, "misnom": 778, "saw": 778, "vanilla": 778, "compile_on_next_step": 778, "_beta1": 778, "_beta2": 778, "_epsilon": 778, "_mw": 778, "_vw": 778, "_first_pass": 778, "_should_compil": 778, "_step": 778, "new_v": 778, "_lr": 778, "_inplac": 778, "_stop_gradi": 778, "set_stat": 778, "clamp": 779, "clip_by_valu": 779, "captur": 779, "sparse_funct": 779, "num_class": 779, "ey": 779, "num_dim": 779, "new_axi": 779, "_linear": 779, "to_backend": 779, "jax_graph": 779, "to_ivy_modul": 779, "thinli": 779, "whilst": [779, 1180], "to_haiku_modul": 779, "hk": 779, "loss_fn_t": 779, "transform": [779, 790, 1180], "without_apply_rng": 779, "rng": 779, "prngkei": 779, "init": 779, "update_rul": 779, "tree_multimap": 779, "robot": [789, 1181], "focus": 790, "perfect": 790, "3d": 790, "differenti": 790, "orient": 790, "pose": 790, "euler": 790, "quaternion": 790, "rotat": 790, "ivy_mech": 790, "target_facing_rotation_matrix": 790, "polar_to_cartesian_coord": 790, "ordin": 790, "warp": 790, "optic": 790, "voxel": 790, "ivy_vis": 790, "coords_to_voxel_grid": 790, "render_pixel_coord": 790, "neural": [790, 1181], "radianc": 790, "nerf": 790, "trajectori": 790, "motion": 790, "plan": [790, 1181], "mobil": 790, "sample_spline_path": 790, "rigidmobil": 790, "sample_bodi": 790, "drone": 790, "sample_link": 790, "openai": 790, "swimmer": 790, "reward": 790, "supervis": 790, "reinforc": 790, "door": [790, 791], "cartpol": 790, "mountain_car": 790, "pendulum": 790, "reacher": 790, "learnt": 790, "ture": 790, "ntm": 790, "egospher": 790, "spatial": 790, "esm": 790, "ivy_memori": 790, "egocentr": 790, "room": 790, "inspir": 790, "doubt": 791, "grate": 791, "probe": 791, "undergo": 791, "remark": 791, "surpris": 791, "lock": 791, "xla": [791, 1180], "gold": 791, "dex": 791, "ye": 791, "scan": 791, "tricki": [791, 1180], "predictor": 791, "tight": 791, "driver": 791, "schedul": 791, "dispatch": 791, "Will": 791, "ast": 791, "cond": 791, "jacobian": 791, "checkpoint": 791, "autodiff": 791, "shine": 791, "merci": 791, "autograd": 791, "cluster": 791, "compet": 791, "paradigm": 791, "parallelis": 791, "spmd": 791, "mixtur": 791, "expert": 791, "sophist": 791, "depart": 791, "routin": 791, "hundr": 791, "thousand": 791, "deepli": 791, "broadli": 791, "supplementari": 791, "reusabl": 791, "fanci": 791, "fusion": 791, "lose": 791, "vmap": 791, "pmap": 791, "overhead": 791, "ineffici": 791, "eventu": 791, "supplement": 791, "backdoor": 791, "callback": 791, "metric": 791, "somewhat": 791, "outsourc": 791, "nail": 1180, "retain": 1180, "funtion": 1180, "asset": 1180, "functiona": 1180, "scientist": 1180, "deploi": 1180, "faster": 1180, "correl": 1180, "analyz": 1180, "grow": 1181, "ai": 1181, "got": 1181, "colab": 1181, "sharp": 1181, "weekli": 1181, "favorit": 1181, "jax_concat": 1181, "tf_concat": 1181, "np_concat": 1181, "mx_concat": 1181, "torch_concat": 1181, "get_devic": 1181, "reduce_prod": 1181, "reduce_sum": 1181, "gradient_imag": 1181, "bilinear_resampl": 1181, "stack_imag": 1181, "neural_net": 1181, "ecosystem": [1181, 1187], "popular": [1181, 1187], "acceler": 1181, "articl": 1181, "lenton2021ivi": 1181, "inter": 1181, "lenton": 1181, "daniel": 1181, "pardo": 1181, "fabio": 1181, "falck": 1181, "fabian": 1181, "jame": 1181, "stephen": 1181, "clark": 1181, "ronald": 1181, "journal": 1181, "arxiv": 1181, "preprint": 1181, "2102": 1181, "02886": 1181, "2021": 1181}, "objects": {"ivy.array": [[0, 0, 0, "-", "activations"], [2, 0, 0, "-", "array"], [221, 0, 0, "-", "conversions"], [226, 0, 0, "-", "creation"], [228, 0, 0, "-", "data_type"], [230, 0, 0, "-", "device"], [232, 0, 0, "-", "elementwise"], [234, 0, 0, "-", "general"], [236, 0, 0, "-", "gradients"], [238, 0, 0, "-", "image"], [240, 0, 0, "-", "layers"], [242, 0, 0, "-", "linear_algebra"], [244, 0, 0, "-", "losses"], [246, 0, 0, "-", "manipulation"], [248, 0, 0, "-", "norms"], [250, 0, 0, "-", "random"], [252, 0, 0, "-", "searching"], [254, 0, 0, "-", "set"], [256, 0, 0, "-", "sorting"], [258, 0, 0, "-", "statistical"], [260, 0, 0, "-", "utility"], [262, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[1, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[1, 2, 1, "", "gelu"], [1, 2, 1, "", "leaky_relu"], [1, 2, 1, "", "relu"], [1, 2, 1, "", "sigmoid"], [1, 2, 1, "", "softmax"], [1, 2, 1, "", "softplus"]], "ivy.array.array": [[3, 1, 1, "", "Array"], [4, 1, 1, "", "Variable"]], "ivy.array.array.Array": [[3, 3, 1, "", "T"], [3, 2, 1, "", "__add__"], [3, 2, 1, "", "__init__"], [3, 2, 1, "", "__le__"], [3, 2, 1, "", "__radd__"], [3, 2, 1, "", "__rrshift__"], [3, 2, 1, "", "__rshift__"], [3, 3, 1, "", "data"], [3, 3, 1, "", "device"], [3, 3, 1, "", "dtype"], [3, 3, 1, "", "is_variable"], [3, 3, 1, "", "mT"], [3, 3, 1, "", "ndim"], [3, 3, 1, "", "shape"], [3, 3, 1, "", "size"]], "ivy.array.array.Variable": [[4, 2, 1, "", "__init__"]], "ivy.array.conversions": [[222, 4, 1, "", "args_to_ivy"], [223, 4, 1, "", "args_to_native"], [224, 4, 1, "", "to_ivy"], [225, 4, 1, "", "to_native"]], "ivy.array.creation": [[227, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[227, 2, 1, "", "asarray"], [227, 2, 1, "", "empty_like"], [227, 2, 1, "", "from_dlpack"], [227, 2, 1, "", "full_like"], [227, 2, 1, "", "meshgrid"], [227, 2, 1, "", "native_array"], [227, 2, 1, "", "ones_like"], [227, 2, 1, "", "tril"], [227, 2, 1, "", "triu"], [227, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[229, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[229, 2, 1, "", "astype"], [229, 2, 1, "", "broadcast_arrays"], [229, 2, 1, "", "broadcast_to"], [229, 2, 1, "", "can_cast"], [229, 2, 1, "", "dtype"], [229, 2, 1, "", "finfo"], [229, 2, 1, "", "iinfo"], [229, 2, 1, "", "is_bool_dtype"], [229, 2, 1, "", "is_float_dtype"], [229, 2, 1, "", "is_int_dtype"], [229, 2, 1, "", "is_uint_dtype"], [229, 2, 1, "", "result_type"]], "ivy.array.device": [[231, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[231, 2, 1, "", "dev"], [231, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[233, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[233, 2, 1, "", "abs"], [233, 2, 1, "", "acos"], [233, 2, 1, "", "acosh"], [233, 2, 1, "", "add"], [233, 2, 1, "", "asin"], [233, 2, 1, "", "asinh"], [233, 2, 1, "", "atan"], [233, 2, 1, "", "atan2"], [233, 2, 1, "", "atanh"], [233, 2, 1, "", "bitwise_and"], [233, 2, 1, "", "bitwise_invert"], [233, 2, 1, "", "bitwise_left_shift"], [233, 2, 1, "", "bitwise_or"], [233, 2, 1, "", "bitwise_right_shift"], [233, 2, 1, "", "bitwise_xor"], [233, 2, 1, "", "ceil"], [233, 2, 1, "", "cos"], [233, 2, 1, "", "cosh"], [233, 2, 1, "", "divide"], [233, 2, 1, "", "equal"], [233, 2, 1, "", "erf"], [233, 2, 1, "", "exp"], [233, 2, 1, "", "expm1"], [233, 2, 1, "", "floor"], [233, 2, 1, "", "floor_divide"], [233, 2, 1, "", "floormod"], [233, 2, 1, "", "greater"], [233, 2, 1, "", "greater_equal"], [233, 2, 1, "", "isfinite"], [233, 2, 1, "", "isinf"], [233, 2, 1, "", "isnan"], [233, 2, 1, "", "less"], [233, 2, 1, "", "less_equal"], [233, 2, 1, "", "log"], [233, 2, 1, "", "log10"], [233, 2, 1, "", "log1p"], [233, 2, 1, "", "log2"], [233, 2, 1, "", "logaddexp"], [233, 2, 1, "", "logical_and"], [233, 2, 1, "", "logical_not"], [233, 2, 1, "", "logical_or"], [233, 2, 1, "", "logical_xor"], [233, 2, 1, "", "multiply"], [233, 2, 1, "", "negative"], [233, 2, 1, "", "not_equal"], [233, 2, 1, "", "positive"], [233, 2, 1, "", "pow"], [233, 2, 1, "", "remainder"], [233, 2, 1, "", "round"], [233, 2, 1, "", "sign"], [233, 2, 1, "", "sin"], [233, 2, 1, "", "sinh"], [233, 2, 1, "", "sqrt"], [233, 2, 1, "", "square"], [233, 2, 1, "", "subtract"], [233, 2, 1, "", "tan"], [233, 2, 1, "", "tanh"], [233, 2, 1, "", "trunc"]], "ivy.array.general": [[235, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[235, 2, 1, "", "all_equal"], [235, 2, 1, "", "array_equal"], [235, 2, 1, "", "arrays_equal"], [235, 2, 1, "", "assert_supports_inplace"], [235, 2, 1, "", "clip_matrix_norm"], [235, 2, 1, "", "clip_vector_norm"], [235, 2, 1, "", "copy_array"], [235, 2, 1, "", "cumprod"], [235, 2, 1, "", "cumsum"], [235, 2, 1, "", "default"], [235, 2, 1, "", "einops_rearrange"], [235, 2, 1, "", "einops_reduce"], [235, 2, 1, "", "einops_repeat"], [235, 2, 1, "", "exists"], [235, 2, 1, "", "fourier_encode"], [235, 2, 1, "", "gather"], [235, 2, 1, "", "gather_nd"], [235, 2, 1, "", "get_num_dims"], [235, 2, 1, "", "has_nans"], [235, 2, 1, "", "indices_where"], [235, 2, 1, "", "inplace_decrement"], [235, 2, 1, "", "inplace_increment"], [235, 2, 1, "", "inplace_update"], [235, 2, 1, "", "is_array"], [235, 2, 1, "", "is_ivy_array"], [235, 2, 1, "", "is_ivy_container"], [235, 2, 1, "", "is_native_array"], [235, 2, 1, "", "one_hot"], [235, 2, 1, "", "scatter_flat"], [235, 2, 1, "", "scatter_nd"], [235, 2, 1, "", "stable_divide"], [235, 2, 1, "", "stable_pow"], [235, 2, 1, "", "supports_inplace"], [235, 2, 1, "", "to_list"], [235, 2, 1, "", "to_numpy"], [235, 2, 1, "", "to_scalar"], [235, 2, 1, "", "unstack"], [235, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[237, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[237, 2, 1, "", "adam_step"], [237, 2, 1, "", "adam_update"], [237, 2, 1, "", "gradient_descent_update"], [237, 2, 1, "", "is_variable"], [237, 2, 1, "", "lamb_update"], [237, 2, 1, "", "lars_update"], [237, 2, 1, "", "optimizer_update"], [237, 2, 1, "", "stop_gradient"], [237, 2, 1, "", "variable"], [237, 2, 1, "", "variable_data"]], "ivy.array.image": [[239, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[241, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[241, 2, 1, "", "conv1d"], [241, 2, 1, "", "conv1d_transpose"], [241, 2, 1, "", "conv2d"], [241, 2, 1, "", "conv3d"], [241, 2, 1, "", "conv3d_transpose"], [241, 2, 1, "", "depthwise_conv2d"], [241, 2, 1, "", "dropout"], [241, 2, 1, "", "linear"], [241, 2, 1, "", "lstm_update"], [241, 2, 1, "", "multi_head_attention"], [241, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[243, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[243, 2, 1, "", "cholesky"], [243, 2, 1, "", "cross"], [243, 2, 1, "", "det"], [243, 2, 1, "", "diagonal"], [243, 2, 1, "", "eigh"], [243, 2, 1, "", "eigvalsh"], [243, 2, 1, "", "inv"], [243, 2, 1, "", "matmul"], [243, 2, 1, "", "matrix_norm"], [243, 2, 1, "", "matrix_rank"], [243, 2, 1, "", "matrix_transpose"], [243, 2, 1, "", "outer"], [243, 2, 1, "", "pinv"], [243, 2, 1, "", "qr"], [243, 2, 1, "", "solve"], [243, 2, 1, "", "svd"], [243, 2, 1, "", "svdvals"], [243, 2, 1, "", "tensordot"], [243, 2, 1, "", "trace"], [243, 2, 1, "", "vecdot"], [243, 2, 1, "", "vector_norm"], [243, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[245, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[245, 2, 1, "", "binary_cross_entropy"], [245, 2, 1, "", "cross_entropy"], [245, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[247, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[247, 2, 1, "", "clip"], [247, 2, 1, "", "concat"], [247, 2, 1, "", "constant_pad"], [247, 2, 1, "", "expand_dims"], [247, 2, 1, "", "flip"], [247, 2, 1, "", "permute_dims"], [247, 2, 1, "", "repeat"], [247, 2, 1, "", "reshape"], [247, 2, 1, "", "roll"], [247, 2, 1, "", "split"], [247, 2, 1, "", "squeeze"], [247, 2, 1, "", "stack"], [247, 2, 1, "", "swapaxes"], [247, 2, 1, "", "tile"], [247, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[249, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[249, 2, 1, "", "layer_norm"]], "ivy.array.random": [[251, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[251, 2, 1, "", "multinomial"], [251, 2, 1, "", "randint"], [251, 2, 1, "", "random_normal"], [251, 2, 1, "", "random_uniform"], [251, 2, 1, "", "shuffle"]], "ivy.array.searching": [[253, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[253, 2, 1, "", "argmax"], [253, 2, 1, "", "argmin"], [253, 2, 1, "", "nonzero"], [253, 2, 1, "", "where"]], "ivy.array.set": [[255, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[255, 2, 1, "", "unique_all"], [255, 2, 1, "", "unique_counts"], [255, 2, 1, "", "unique_inverse"], [255, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[257, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[257, 2, 1, "", "argsort"], [257, 2, 1, "", "searchsorted"], [257, 2, 1, "", "sort"]], "ivy.array.statistical": [[259, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[259, 2, 1, "", "einsum"], [259, 2, 1, "", "max"], [259, 2, 1, "", "mean"], [259, 2, 1, "", "min"], [259, 2, 1, "", "prod"], [259, 2, 1, "", "std"], [259, 2, 1, "", "sum"], [259, 2, 1, "", "var"]], "ivy.array.utility": [[261, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[261, 2, 1, "", "all"], [261, 2, 1, "", "any"]], "ivy.array.wrapping": [[263, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy.container": [[282, 0, 0, "-", "activations"], [284, 0, 0, "-", "base"], [708, 0, 0, "-", "conversions"], [710, 0, 0, "-", "creation"], [712, 0, 0, "-", "data_type"], [714, 0, 0, "-", "device"], [716, 0, 0, "-", "elementwise"], [746, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[283, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[283, 2, 1, "", "gelu"], [283, 2, 1, "", "leaky_relu"], [283, 2, 1, "", "relu"], [283, 2, 1, "", "sigmoid"], [283, 2, 1, "", "softmax"], [283, 2, 1, "", "softplus"], [283, 2, 1, "", "static_gelu"], [283, 2, 1, "", "static_leaky_relu"], [283, 2, 1, "", "static_relu"], [283, 2, 1, "", "static_sigmoid"], [283, 2, 1, "", "static_softmax"], [283, 2, 1, "", "static_softplus"]], "ivy.container.base": [[285, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[285, 2, 1, "", "__getitem__"], [285, 2, 1, "", "__init__"], [285, 2, 1, "", "__setitem__"], [285, 2, 1, "", "all_false"], [285, 2, 1, "", "all_key_chains"], [285, 2, 1, "", "all_true"], [285, 2, 1, "", "as_bools"], [285, 2, 1, "", "assert_contains_sub_container"], [285, 2, 1, "", "assert_contains_sub_structure"], [285, 2, 1, "", "assert_identical"], [285, 2, 1, "", "assert_identical_structure"], [285, 2, 1, "", "at_key_chain"], [285, 2, 1, "", "at_key_chains"], [285, 2, 1, "", "at_keys"], [285, 2, 1, "", "combine"], [285, 2, 1, "", "common_key_chains"], [285, 3, 1, "", "config"], [285, 2, 1, "", "cont_inplace_update"], [285, 2, 1, "", "contains_sub_container"], [285, 2, 1, "", "contains_sub_structure"], [285, 2, 1, "", "copy"], [285, 2, 1, "", "create_if_absent"], [285, 2, 1, "", "cutoff_at_depth"], [285, 2, 1, "", "cutoff_at_height"], [285, 2, 1, "", "deep_copy"], [285, 3, 1, "", "dev"], [285, 3, 1, "", "dev_str"], [285, 2, 1, "", "diff"], [285, 2, 1, "", "duplicate_array_keychains"], [285, 2, 1, "", "find_sub_container"], [285, 2, 1, "", "find_sub_structure"], [285, 2, 1, "", "flatten_key_chain"], [285, 2, 1, "", "flatten_key_chains"], [285, 2, 1, "", "format_key_chains"], [285, 2, 1, "", "from_disk_as_hdf5"], [285, 2, 1, "", "from_disk_as_json"], [285, 2, 1, "", "from_disk_as_pickled"], [285, 2, 1, "", "from_flat_list"], [285, 2, 1, "", "h5_file_size"], [285, 2, 1, "", "handle_inplace"], [285, 2, 1, "", "has_key"], [285, 2, 1, "", "has_key_chain"], [285, 2, 1, "", "has_nans"], [285, 2, 1, "", "identical"], [285, 2, 1, "", "identical_array_shapes"], [285, 2, 1, "", "identical_configs"], [285, 2, 1, "", "identical_structure"], [285, 2, 1, "", "if_exists"], [285, 3, 1, "", "ivy"], [285, 2, 1, "", "key_chains_containing"], [285, 2, 1, "", "list_join"], [285, 2, 1, "", "list_stack"], [285, 2, 1, "", "map"], [285, 2, 1, "", "map_conts"], [285, 3, 1, "", "max_depth"], [285, 2, 1, "", "multi_map"], [285, 2, 1, "", "multi_map_in_static_method"], [285, 2, 1, "", "num_arrays"], [285, 2, 1, "", "overwrite_at_key_chain"], [285, 2, 1, "", "overwrite_at_key_chains"], [285, 2, 1, "", "prune_empty"], [285, 2, 1, "", "prune_key_chain"], [285, 2, 1, "", "prune_key_chains"], [285, 2, 1, "", "prune_key_from_key_chains"], [285, 2, 1, "", "prune_keys"], [285, 2, 1, "", "prune_keys_from_key_chains"], [285, 2, 1, "", "reduce"], [285, 2, 1, "", "remove_key_length_limit"], [285, 2, 1, "", "remove_print_limit"], [285, 2, 1, "", "reshape_like"], [285, 2, 1, "", "restructure"], [285, 2, 1, "", "restructure_key_chains"], [285, 2, 1, "", "set_at_key_chain"], [285, 2, 1, "", "set_at_key_chains"], [285, 2, 1, "", "set_at_keys"], [285, 2, 1, "", "set_framework"], [285, 2, 1, "", "set_ivy_backend"], [285, 3, 1, "", "shape"], [285, 3, 1, "", "shapes"], [285, 2, 1, "", "show"], [285, 2, 1, "", "show_sub_container"], [285, 2, 1, "", "shuffle_h5_file"], [285, 2, 1, "", "size_ordered_arrays"], [285, 2, 1, "", "slice_keys"], [285, 2, 1, "", "slice_via_key"], [285, 2, 1, "", "sort_by_key"], [285, 2, 1, "", "split_conts"], [285, 2, 1, "", "structural_diff"], [285, 2, 1, "", "to_dict"], [285, 2, 1, "", "to_disk_as_hdf5"], [285, 2, 1, "", "to_disk_as_json"], [285, 2, 1, "", "to_disk_as_pickled"], [285, 2, 1, "", "to_flat_list"], [285, 2, 1, "", "to_iterator"], [285, 2, 1, "", "to_iterator_keys"], [285, 2, 1, "", "to_iterator_values"], [285, 2, 1, "", "to_jsonable"], [285, 2, 1, "", "to_nested_list"], [285, 2, 1, "", "to_raw"], [285, 2, 1, "", "trim_key"], [285, 2, 1, "", "try_kc"], [285, 2, 1, "", "unify"], [285, 2, 1, "", "unstack_conts"], [285, 2, 1, "", "update_config"], [285, 2, 1, "", "with_default_key_color"], [285, 2, 1, "", "with_entries_as_lists"], [285, 2, 1, "", "with_ivy_backend"], [285, 2, 1, "", "with_key_length_limit"], [285, 2, 1, "", "with_print_indent"], [285, 2, 1, "", "with_print_limit"], [285, 2, 1, "", "with_print_line_spacing"]], "ivy.container.conversions": [[709, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[709, 2, 1, "", "static_to_ivy"], [709, 2, 1, "", "static_to_native"], [709, 2, 1, "", "to_ivy"], [709, 2, 1, "", "to_native"]], "ivy.container.creation": [[711, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[711, 2, 1, "", "empty_like"], [711, 2, 1, "", "from_dlpack"], [711, 2, 1, "", "full_like"], [711, 2, 1, "", "meshgrid"], [711, 2, 1, "", "native_array"], [711, 2, 1, "", "ones_like"], [711, 2, 1, "", "static_arange"], [711, 2, 1, "", "static_asarray"], [711, 2, 1, "", "static_empty_like"], [711, 2, 1, "", "static_eye"], [711, 2, 1, "", "static_from_dlpack"], [711, 2, 1, "", "static_full_like"], [711, 2, 1, "", "static_linspace"], [711, 2, 1, "", "static_logspace"], [711, 2, 1, "", "static_meshgrid"], [711, 2, 1, "", "static_native_array"], [711, 2, 1, "", "static_ones"], [711, 2, 1, "", "static_ones_like"], [711, 2, 1, "", "static_tril"], [711, 2, 1, "", "static_triu"], [711, 2, 1, "", "static_zeros"], [711, 2, 1, "", "static_zeros_like"], [711, 2, 1, "", "tril"], [711, 2, 1, "", "triu"], [711, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[713, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[713, 2, 1, "", "astype"], [713, 2, 1, "", "broadcast_arrays"], [713, 2, 1, "", "broadcast_to"], [713, 2, 1, "", "can_cast"], [713, 2, 1, "", "dtype"], [713, 2, 1, "", "finfo"], [713, 2, 1, "", "iinfo"], [713, 2, 1, "", "is_bool_dtype"], [713, 2, 1, "", "is_float_dtype"], [713, 2, 1, "", "is_int_dtype"], [713, 2, 1, "", "is_uint_dtype"], [713, 2, 1, "", "result_type"], [713, 2, 1, "", "static_astype"], [713, 2, 1, "", "static_broadcast_arrays"], [713, 2, 1, "", "static_broadcast_to"], [713, 2, 1, "", "static_can_cast"], [713, 2, 1, "", "static_default_float_dtype"], [713, 2, 1, "", "static_dtype"], [713, 2, 1, "", "static_finfo"], [713, 2, 1, "", "static_function_supported_dtypes"], [713, 2, 1, "", "static_function_unsupported_dtypes"], [713, 2, 1, "", "static_iinfo"], [713, 2, 1, "", "static_is_bool_dtype"], [713, 2, 1, "", "static_is_float_dtype"], [713, 2, 1, "", "static_is_int_dtype"], [713, 2, 1, "", "static_is_uint_dtype"], [713, 2, 1, "", "static_result_type"]], "ivy.container.device": [[715, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[715, 2, 1, "", "dev"], [715, 2, 1, "", "static_dev"], [715, 2, 1, "", "static_to_device"], [715, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[717, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[717, 2, 1, "", "abs"], [717, 2, 1, "", "acos"], [717, 2, 1, "", "acosh"], [717, 2, 1, "", "add"], [717, 2, 1, "", "asin"], [717, 2, 1, "", "asinh"], [717, 2, 1, "", "atan"], [717, 2, 1, "", "atan2"], [717, 2, 1, "", "atanh"], [717, 2, 1, "", "bitwise_and"], [717, 2, 1, "", "bitwise_invert"], [717, 2, 1, "", "bitwise_left_shift"], [717, 2, 1, "", "bitwise_or"], [717, 2, 1, "", "bitwise_right_shift"], [717, 2, 1, "", "bitwise_xor"], [717, 2, 1, "", "ceil"], [717, 2, 1, "", "cos"], [717, 2, 1, "", "cosh"], [717, 2, 1, "", "divide"], [717, 2, 1, "", "equal"], [717, 2, 1, "", "erf"], [717, 2, 1, "", "exp"], [717, 2, 1, "", "expm1"], [717, 2, 1, "", "floor"], [717, 2, 1, "", "floor_divide"], [717, 2, 1, "", "floormod"], [717, 2, 1, "", "greater"], [717, 2, 1, "", "greater_equal"], [717, 2, 1, "", "isfinite"], [717, 2, 1, "", "isinf"], [717, 2, 1, "", "isnan"], [717, 2, 1, "", "less"], [717, 2, 1, "", "less_equal"], [717, 2, 1, "", "log"], [717, 2, 1, "", "log10"], [717, 2, 1, "", "log1p"], [717, 2, 1, "", "log2"], [717, 2, 1, "", "logaddexp"], [717, 2, 1, "", "logical_and"], [717, 2, 1, "", "logical_not"], [717, 2, 1, "", "logical_or"], [717, 2, 1, "", "logical_xor"], [717, 2, 1, "", "maximum"], [717, 2, 1, "", "minimum"], [717, 2, 1, "", "multiply"], [717, 2, 1, "", "negative"], [717, 2, 1, "", "not_equal"], [717, 2, 1, "", "positive"], [717, 2, 1, "", "pow"], [717, 2, 1, "", "remainder"], [717, 2, 1, "", "round"], [717, 2, 1, "", "sign"], [717, 2, 1, "", "sin"], [717, 2, 1, "", "sinh"], [717, 2, 1, "", "sqrt"], [717, 2, 1, "", "square"], [717, 2, 1, "", "static_abs"], [717, 2, 1, "", "static_acos"], [717, 2, 1, "", "static_acosh"], [717, 2, 1, "", "static_add"], [717, 2, 1, "", "static_asin"], [717, 2, 1, "", "static_asinh"], [717, 2, 1, "", "static_atan"], [717, 2, 1, "", "static_atan2"], [717, 2, 1, "", "static_atanh"], [717, 2, 1, "", "static_bitwise_and"], [717, 2, 1, "", "static_bitwise_invert"], [717, 2, 1, "", "static_bitwise_left_shift"], [717, 2, 1, "", "static_bitwise_or"], [717, 2, 1, "", "static_bitwise_right_shift"], [717, 2, 1, "", "static_bitwise_xor"], [717, 2, 1, "", "static_ceil"], [717, 2, 1, "", "static_cos"], [717, 2, 1, "", "static_cosh"], [717, 2, 1, "", "static_divide"], [717, 2, 1, "", "static_equal"], [717, 2, 1, "", "static_erf"], [717, 2, 1, "", "static_exp"], [717, 2, 1, "", "static_expm1"], [717, 2, 1, "", "static_floor"], [717, 2, 1, "", "static_floor_divide"], [717, 2, 1, "", "static_floormod"], [717, 2, 1, "", "static_greater"], [717, 2, 1, "", "static_greater_equal"], [717, 2, 1, "", "static_isfinite"], [717, 2, 1, "", "static_isinf"], [717, 2, 1, "", "static_isnan"], [717, 2, 1, "", "static_less"], [717, 2, 1, "", "static_less_equal"], [717, 2, 1, "", "static_log"], [717, 2, 1, "", "static_log10"], [717, 2, 1, "", "static_log1p"], [717, 2, 1, "", "static_log2"], [717, 2, 1, "", "static_logaddexp"], [717, 2, 1, "", "static_logical_and"], [717, 2, 1, "", "static_logical_not"], [717, 2, 1, "", "static_logical_or"], [717, 2, 1, "", "static_logical_xor"], [717, 2, 1, "", "static_maximum"], [717, 2, 1, "", "static_minimum"], [717, 2, 1, "", "static_multiply"], [717, 2, 1, "", "static_negative"], [717, 2, 1, "", "static_not_equal"], [717, 2, 1, "", "static_positive"], [717, 2, 1, "", "static_pow"], [717, 2, 1, "", "static_remainder"], [717, 2, 1, "", "static_round"], [717, 2, 1, "", "static_sign"], [717, 2, 1, "", "static_sin"], [717, 2, 1, "", "static_sinh"], [717, 2, 1, "", "static_sqrt"], [717, 2, 1, "", "static_square"], [717, 2, 1, "", "static_subtract"], [717, 2, 1, "", "static_tan"], [717, 2, 1, "", "static_tanh"], [717, 2, 1, "", "static_trunc"], [717, 2, 1, "", "subtract"], [717, 2, 1, "", "tan"], [717, 2, 1, "", "tanh"], [717, 2, 1, "", "trunc"]], "ivy.container.wrapping": [[747, 4, 1, "", "add_ivy_container_instance_methods"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"activ": [0, 282, 804, 1188], "arraywithactiv": 1, "arrai": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 280, 757, 760, 768, 770, 776], "variabl": [4, 213, 700, 1060], "method": [5, 288, 769, 776, 777], "ab": [6, 289, 900], "aco": [7, 290, 901], "acosh": [8, 291, 902], "adam_step": [9, 292, 1046], "adam_upd": [10, 293, 1047], "add": [11, 294, 759, 903], "add_ivy_array_instance_method": [12, 263], "all": [13, 296, 1178], "all_equ": [14, 297, 967], "ani": [15, 298, 1179], "argmax": [16, 299, 1155], "argmin": [17, 300, 1156], "argsort": [18, 301, 1165], "array_equ": [19, 970], "arrays_equ": [20, 971], "asarrai": [21, 816], "asin": [22, 302, 904], "asinh": [23, 303, 905], "assert_supports_inplac": [24, 304, 972], "astyp": [25, 305, 836], "atan": [26, 306, 906], "atan2": [27, 307, 907], "atanh": [28, 308, 908], "binary_cross_entropi": [29, 309, 1104], "bitwise_and": [30, 310, 909], "bitwise_invert": [31, 311, 910], "bitwise_left_shift": [32, 312, 911], "bitwise_or": [33, 313, 912], "bitwise_right_shift": [34, 314, 913], "bitwise_xor": [35, 315, 914], "broadcast_arrai": [36, 316, 837], "broadcast_to": [37, 317, 838], "can_cast": [38, 318, 839], "ceil": [39, 319, 915], "choleski": [40, 320, 1079], "clip": [41, 321, 1108], "clip_matrix_norm": [42, 322, 974], "clip_vector_norm": [43, 323, 975], "concat": [44, 324, 1109], "constant_pad": [45, 325, 1110], "conv1d": [46, 326, 1064, 1204], "conv1d_transpos": [47, 327, 1065], "conv2d": [48, 328, 1066, 1206], "conv3d": [49, 330, 1068, 1208], "conv3d_transpos": [50, 331, 1069], "copy_arrai": [51, 977], "co": [52, 332, 916], "cosh": [53, 333, 917], "cross": [54, 334, 1080], "cross_entropi": [55, 335, 1105], "cumprod": [56, 336, 978], "cumsum": [57, 337, 979], "default": [58, 981], "depthwise_conv2d": [59, 338, 1071], "det": [60, 339, 1081], "dev": [61, 340, 877], "diagon": [62, 341, 1082], "divid": [63, 342, 918], "dropout": [64, 343, 1072, 1211], "dtype": [65, 344, 757, 846], "eigh": [66, 345, 1083], "eigvalsh": [67, 1084], "einops_rearrang": [68, 346, 982], "einops_reduc": [69, 347, 983], "einops_repeat": [70, 348, 984], "einsum": [71, 349, 1169], "empty_lik": [72, 350, 818], "equal": [73, 351, 919], "erf": [74, 352, 920], "exist": [75, 985], "exp": [76, 353, 921], "expand_dim": [77, 354, 1111], "expm1": [78, 355, 922], "finfo": [79, 356, 848], "flip": [80, 357, 1112], "floor": [81, 358, 923], "floor_divid": [82, 359, 924], "floormod": [83, 360, 925], "fourier_encod": [84, 361, 986], "from_dlpack": [85, 362, 820], "full_lik": [86, 363, 822], "gather": [87, 364, 989], "gather_nd": [88, 365, 990], "gelu": [89, 366, 805, 1190], "get_num_dim": [90, 996], "gradient_descent_upd": [91, 367, 1050], "greater": [92, 368, 926], "greater_equ": [93, 369, 927], "has_nan": [94, 370, 1000], "iinfo": [95, 371, 851], "indices_wher": [96, 372, 1001], "inplace_decr": [97, 373, 1003], "inplace_incr": [98, 374, 1004], "inplace_upd": [99, 375, 1005], "inv": [100, 376, 1085], "is_arrai": [101, 377, 1007, 1008, 1009], "is_bool_dtyp": [102, 378, 854], "is_float_dtyp": [103, 379, 855], "is_int_dtyp": [104, 380, 856], "is_ivy_arrai": [105, 381, 1010], "is_ivy_contain": [106, 382, 1011], "is_native_arrai": [107, 383, 1012], "is_uint_dtyp": [108, 384, 857], "is_vari": [109, 385, 1051], "isfinit": [110, 386, 928], "isinf": [111, 387, 929], "isnan": [112, 388, 930], "lamb_upd": [113, 389, 1053], "lars_upd": [114, 390, 1054], "layer_norm": [115, 391, 1146], "leaky_relu": [116, 392, 806], "less": [117, 393, 931], "less_equ": [118, 394, 932], "linear": [119, 242, 395, 726, 1074, 1078, 1213], "log": [120, 396, 749, 933], "log10": [121, 397, 934], "log1p": [122, 398, 935], "log2": [123, 399, 936], "logaddexp": [124, 400, 937], "logical_and": [125, 401, 938], "logical_not": [126, 402, 939], "logical_or": [127, 403, 940], "logical_xor": [128, 404, 941], "lstm_updat": [129, 405, 1075], "matmul": [130, 406, 1086], "matrix_norm": [131, 407, 1087], "matrix_rank": [132, 409, 1089], "matrix_transpos": [133, 410, 1090], "max": [134, 411, 1170], "mean": [135, 413, 1171], "meshgrid": [136, 414, 825], "min": [137, 415, 1172], "multi_head_attent": [138, 417, 1076], "multinomi": [139, 418, 1148], "multipli": [140, 419, 944], "native_arrai": [141, 420, 826], "neg": [142, 421, 945], "nonzero": [143, 422, 1157], "not_equ": [144, 423, 946], "one_hot": [145, 424, 1016], "ones_lik": [146, 425, 828], "optimizer_upd": [147, 426, 1055], "outer": [148, 427, 1091], "permute_dim": [149, 428, 1113], "pinv": [150, 1092], "posit": [151, 429, 757, 947], "pow": [152, 430, 948], "prod": [153, 431, 1173], "qr": [154, 432, 1093], "randint": [155, 433, 1149], "random_norm": [156, 434, 1150], "random_uniform": [157, 435, 1151], "relu": [158, 436, 807], "remaind": [159, 437, 950, 951], "repeat": [160, 438, 1114], "reshap": [161, 439, 1115], "result_typ": [162, 440, 860], "roll": [163, 441, 759, 1116], "round": [164, 442, 953], "scaled_dot_product_attent": [165, 443, 1077], "scatter_flat": [166, 444, 1018], "scatter_nd": [167, 445, 1019], "searchsort": [168, 446, 1166], "shuffl": [169, 447, 1153], "sigmoid": [170, 448, 808], "sign": [171, 449, 954], "sin": [172, 450, 955], "sinh": [173, 451, 956], "softmax": [174, 453, 809], "softplu": [175, 454, 810], "solv": [176, 455, 1095], "sort": [177, 256, 456, 740, 1164, 1167], "sparse_cross_entropi": [178, 457, 1106], "split": [179, 458, 1117], "sqrt": [180, 459, 957], "squar": [181, 460, 958], "squeez": [182, 461, 1118], "stable_divid": [183, 462, 1029], "stable_pow": [184, 463, 1030], "stack": [185, 464, 1119], "std": [186, 671, 1174], "stop_gradi": [187, 672, 1057], "subtract": [188, 673, 959, 960, 961], "sum": [189, 674, 762, 1175], "supports_inplac": [190, 1031], "svd": [191, 676, 1096], "svdval": [192, 677, 1097], "swapax": [193, 678, 1120], "tan": [194, 679, 759, 763, 962], "tanh": [195, 680, 963], "tensordot": [196, 681, 1098], "tile": [197, 682, 1121], "to_devic": [198, 683, 892, 893, 894], "to_list": [199, 685, 1033], "to_numpi": [200, 687, 1035], "to_scalar": [201, 688, 1036], "trace": [202, 689, 1099], "tril": [203, 690, 829], "triu": [204, 691, 830], "trunc": [205, 692, 964], "unique_al": [206, 693, 1160], "unique_count": [207, 694, 1161], "unique_invers": [208, 695, 1162], "unique_valu": [209, 696, 1163], "unstack": [210, 697, 1042], "value_is_nan": [211, 698, 1043], "var": [212, 699, 1176], "variable_data": [214, 701, 1061], "vecdot": [215, 702, 1100], "vector_norm": [216, 703, 1101], "vector_to_skew_symmetric_matrix": [217, 704, 1102], "where": [218, 705, 1158], "zero_pad": [219, 706, 1122], "zeros_lik": [220, 707, 832], "convers": [221, 708], "args_to_ivi": 222, "args_to_n": 223, "to_ivi": [224, 684], "to_n": [225, 686], "creation": [226, 710, 814], "arraywithcr": 227, "data": [228, 712, 761, 762, 770, 777, 791, 833], "type": [228, 712, 762, 764, 770, 791, 833], "arraywithdatatyp": 229, "devic": [230, 714, 757, 762, 771, 871], "arraywithdevic": 231, "elementwis": [232, 716, 899], "arraywithelementwis": 233, "gener": [234, 718, 761, 966], "arraywithgener": 235, "gradient": [236, 720, 1045], "arraywithgradi": 237, "imag": [238, 722], "arraywithimag": 239, "layer": [240, 724, 1063, 1203], "arraywithlay": 241, "algebra": [242, 726, 1078], "arraywithlinearalgebra": 243, "loss": [244, 728, 1103], "arraywithloss": 245, "manipul": [246, 730, 1107], "arraywithmanipul": 247, "norm": [248, 732, 1145, 1217], "arraywithnorm": 249, "random": [250, 734, 1147], "arraywithrandom": 251, "search": [252, 736, 1154], "arraywithsearch": 253, "set": [254, 738, 749, 766, 1159], "arraywithset": 255, "arraywithsort": 257, "statist": [258, 742, 1168], "arraywithstatist": 259, "util": [260, 744, 1177], "arraywithutil": 261, "wrap": [262, 746, 767], "backend": [264, 755, 766, 774, 791], "handler": [264, 774], "choose_random_backend": 265, "clear_backend_stack": 266, "current_backend": 267, "fn_name_from_version_specific_fn_nam": 268, "get_backend": 269, "set_backend": 270, "set_backend_to_specific_vers": 271, "try_import_ivy_jax": 272, "try_import_ivy_mxnet": 273, "try_import_ivy_numpi": 274, "try_import_ivy_tf": 275, "try_import_ivy_torch": 276, "unset_backend": 277, "background": [278, 1181], "ml": 279, "explos": 279, "standard": 280, "skeptic": 280, "complimentari": 280, "v": [280, 791], "competit": 280, "do": [280, 761], "work": [280, 753], "The": [280, 750, 776, 791], "api": [280, 751, 755, 760, 769, 774, 776, 778, 779], "why": [281, 761], "unifi": [281, 776], "No": [281, 749], "more": [281, 749], "re": [281, 760, 761], "implement": 281, "infinit": 281, "shelf": 281, "life": 281, "containerwithactiv": 283, "base": 284, "containerbas": 285, "contain": [286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 750, 769, 777, 893, 952, 960, 1008], "add_ivy_container_instance_method": [295, 747], "conv2d_transpos": [329, 1067], "matrix_pow": [408, 1088], "maximum": [412, 942], "minimum": [416, 943], "slogdet": [452, 1094], "static_ab": 465, "static_aco": 466, "static_acosh": 467, "static_add": 468, "static_al": 469, "static_all_equ": 470, "static_ani": 471, "static_arang": 472, "static_argmax": 473, "static_argmin": 474, "static_argsort": 475, "static_asarrai": 476, "static_asin": 477, "static_asinh": 478, "static_assert_supports_inplac": 479, "static_astyp": 480, "static_atan": 481, "static_atan2": 482, "static_atanh": 483, "static_binary_cross_entropi": 484, "static_bitwise_and": 485, "static_bitwise_invert": 486, "static_bitwise_left_shift": 487, "static_bitwise_or": 488, "static_bitwise_right_shift": 489, "static_bitwise_xor": 490, "static_broadcast_arrai": 491, "static_broadcast_to": 492, "static_can_cast": 493, "static_ceil": 494, "static_choleski": 495, "static_clip": 496, "static_clip_matrix_norm": 497, "static_clip_vector_norm": 498, "static_concat": 499, "static_constant_pad": 500, "static_conv1d": 501, "static_conv1d_transpos": 502, "static_conv2d": 503, "static_conv2d_transpos": 504, "static_conv3d": 505, "static_conv3d_transpos": 506, "static_co": 507, "static_cosh": 508, "static_cross": 509, "static_cross_entropi": 510, "static_cumprod": 511, "static_cumsum": 512, "static_default_float_dtyp": 513, "static_depthwise_conv2d": 514, "static_det": 515, "static_dev": 516, "static_diagon": 517, "static_divid": 518, "static_dropout": 519, "static_dtyp": 520, "static_einops_rearrang": 521, "static_einops_reduc": 522, "static_einops_repeat": 523, "static_empty_lik": 524, "static_equ": 525, "static_erf": 526, "static_exp": 527, "static_expand_dim": 528, "static_expm1": 529, "static_ey": 530, "static_finfo": 531, "static_flip": 532, "static_floor": 533, "static_floor_divid": 534, "static_floormod": 535, "static_fourier_encod": 536, "static_from_dlpack": 537, "static_full_lik": 538, "static_function_supported_dtyp": 539, "static_function_unsupported_dtyp": 540, "static_gath": 541, "static_gather_nd": 542, "static_gelu": 543, "static_great": 544, "static_greater_equ": 545, "static_has_nan": 546, "static_iinfo": 547, "static_indices_wher": 548, "static_inplace_decr": 549, "static_inplace_incr": 550, "static_inplace_upd": 551, "static_inv": 552, "static_is_arrai": 553, "static_is_bool_dtyp": 554, "static_is_float_dtyp": 555, "static_is_int_dtyp": 556, "static_is_ivy_arrai": 557, "static_is_ivy_contain": 558, "static_is_native_arrai": 559, "static_is_uint_dtyp": 560, "static_is_vari": 561, "static_isfinit": 562, "static_isinf": 563, "static_isnan": 564, "static_leaky_relu": 565, "static_less": 566, "static_less_equ": 567, "static_linear": 568, "static_linspac": 569, "static_log": 570, "static_log10": 571, "static_log1p": 572, "static_log2": 573, "static_logaddexp": 574, "static_logical_and": 575, "static_logical_not": 576, "static_logical_or": 577, "static_logical_xor": 578, "static_logspac": 579, "static_lstm_upd": 580, "static_matrix_norm": 581, "static_matrix_pow": 582, "static_matrix_rank": 583, "static_matrix_transpos": 584, "static_maximum": 585, "static_meshgrid": 586, "static_minimum": 587, "static_multi_head_attent": 588, "static_multinomi": 589, "static_multipli": 590, "static_native_arrai": 591, "static_neg": 592, "static_nonzero": 593, "static_not_equ": 594, "static_one_hot": 595, "static_on": 596, "static_ones_lik": 597, "static_out": 598, "static_permute_dim": 599, "static_posit": 600, "static_pow": 601, "static_qr": 602, "static_randint": 603, "static_random_norm": 604, "static_random_uniform": 605, "static_relu": 606, "static_remaind": [607, 952], "static_repeat": 608, "static_reshap": 609, "static_result_typ": 610, "static_rol": 611, "static_round": 612, "static_scaled_dot_product_attent": 613, "static_scatter_flat": 614, "static_scatter_nd": 615, "static_searchsort": 616, "static_shuffl": 617, "static_sigmoid": 618, "static_sign": 619, "static_sin": 620, "static_sinh": 621, "static_slogdet": 622, "static_softmax": 623, "static_softplu": 624, "static_solv": 625, "static_sort": 626, "static_sparse_cross_entropi": 627, "static_split": 628, "static_sqrt": 629, "static_squar": 630, "static_squeez": 631, "static_stable_divid": 632, "static_stable_pow": 633, "static_stack": 634, "static_stop_gradi": 635, "static_subtract": 636, "static_supports_inplace_upd": 637, "static_svd": 638, "static_svdv": 639, "static_swapax": 640, "static_tan": 641, "static_tanh": 642, "static_tensordot": 643, "static_til": 644, "static_to_devic": 645, "static_to_ivi": 646, "static_to_list": 647, "static_to_n": 648, "static_to_numpi": 649, "static_to_scalar": 650, "static_trac": 651, "static_tril": 652, "static_triu": 653, "static_trunc": 654, "static_unique_al": 655, "static_unique_count": 656, "static_unique_invers": 657, "static_unique_valu": 658, "static_unstack": 659, "static_value_is_nan": 660, "static_var": 661, "static_vari": 662, "static_variable_data": 663, "static_vecdot": 664, "static_vector_norm": 665, "static_vector_to_skew_symmetric_matrix": 666, "static_wher": 667, "static_zero_pad": 668, "static_zero": 669, "static_zeros_lik": 670, "supports_inplace_upd": 675, "containerwithconvers": 709, "containerwithcr": 711, "containerwithdatatyp": 713, "containerwithdevic": 715, "containerwithelementwis": 717, "containerwithgener": 719, "containerwithgradi": 721, "containerwithimag": 723, "containerwithlay": 725, "containerwithlinearalgebra": 727, "containerwithloss": 729, "containerwithmanipul": 731, "containerwithnorm": 733, "containerwithrandom": 735, "containerwithsearch": 737, "containerwithset": 739, "containerwithsort": 741, "containerwithstatist": 743, "containerwithutil": 745, "contribut": [748, 1181], "up": 749, "clone": 749, "ivi": [749, 750, 751, 752, 755, 759, 761, 762, 763, 768, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 893, 894, 951, 952, 960, 961, 1008, 1009], "pycharm": [749, 750], "virtual": 749, "environ": 749, "docker": [749, 750, 753], "us": [749, 753, 760, 777], "miniconda": [749, 753], "venv": [749, 753], "interpret": 749, "window": 749, "maco": 749, "ubuntu": 749, "detail": 749, "hypothesi": [749, 761], "github": 749, "codespac": 749, "pre": [749, 756], "commit": [749, 750, 756], "basic": [750, 762], "get": 750, "help": 750, "todo": 750, "list": 750, "issu": 750, "extens": [750, 751, 789, 965, 1181], "manag": 750, "your": 750, "fork": 750, "who": 750, "To": 750, "ask": 750, "With": 750, "command": 750, "line": 750, "browser": 750, "pull": 750, "request": 750, "small": 750, "often": 750, "interact": 750, "run": [750, 760, 761], "test": [750, 760, 761, 763], "local": 750, "most": 750, "out": [750, 757, 772], "id": [750, 760], "open": 751, "task": 751, "function": [751, 755, 757, 761, 764, 767, 769, 770, 771, 774, 779, 791], "format": [751, 756], "checklist": 751, "frontend": [751, 762, 763, 766, 779], "appli": [752, 790], "librari": [752, 790], "develop": 752, "guid": 752, "introduct": [752, 762, 763], "exampl": [752, 757, 759, 763], "robot": [752, 787, 790], "build": [753, 774], "doc": 753, "dockerless": 753, "document": 753, "pipelin": [753, 791], "make_doc": 753, "sh": 753, "entrypoint": 753, "_make_doc": 753, "generate_src_rst_fil": 753, "py": 753, "sphinx": 753, "correct_built_html_fil": 753, "remove_fil": 753, "deep": 754, "dive": 754, "navig": 755, "code": 755, "categor": 755, "submodul": 755, "design": [755, 773, 1181], "helper": [755, 761], "lint": 756, "check": [756, 791], "hook": 756, "argument": [757, 770, 771, 772], "keyword": 757, "number": 757, "oper": [757, 776, 791], "integ": [757, 770], "sequenc": 757, "nestabl": [757, 764, 769], "docstr": [758, 759], "bash": 760, "file": 760, "fail": [760, 761], "import": 761, "strategi": 761, "integr": 761, "we": 761, "need": 761, "how": 761, "write": 761, "effect": 761, "bonu": 761, "extend": 761, "featur": 761, "self": 761, "consist": 761, "explicit": 761, "test_array_funct": 761, "composit": [762, 764], "temporari": 762, "support": [762, 766, 770, 791], "framework": [762, 775], "specif": 762, "class": [762, 776], "full": [763, 821], "primari": 764, "mix": 764, "standalon": 764, "conveni": 764, "superset": 765, "behaviour": 765, "version": [766, 791], "nativ": 768, "handl": [768, 791], "instanc": [769, 776], "static": 769, "special": 769, "modul": [770, 771, 778, 1215, 1216], "other": [770, 771], "unsupport": 770, "inplac": 772, "updat": 772, "copi": 772, "block": 774, "graph": [774, 779], "compil": [774, 779, 811, 812], "monkei": 776, "patch": 776, "construct": 777, "represent": 777, "recurs": 777, "built": 777, "ins": 777, "access": 777, "save": 777, "load": 777, "comparison": 777, "custom": [777, 791], "case": 777, "compartment": 777, "configur": 777, "network": [777, 779], "weight": 777, "state": [778, 791], "initi": [778, 1193, 1197], "optim": [778, 1219, 1223], "transpil": 779, "role": 779, "convert": [779, 1191], "model": [779, 786, 791], "builder": 781, "ecosystem": 782, "gym": [783, 790], "mech": 784, "memori": [785, 790], "vision": [788, 790], "mechan": 790, "faq": 791, "maintain": 791, "dynam": 791, "size": 791, "shape": [791, 1027], "gpu": 791, "deploy": 791, "control": 791, "flow": 791, "auto": 791, "differenti": 791, "replica": 791, "parallel": 791, "altern": 791, "structur": 791, "func": 792, "wrapper": 792, "from_zero_dim_arrays_to_float": 793, "handle_nest": 794, "handle_out_argu": 795, "infer_devic": 796, "infer_dtyp": 797, "inputs_to_ivy_arrai": 798, "inputs_to_native_arrai": 799, "integer_arrays_to_float": 800, "outputs_to_ivy_arrai": 801, "to_native_arrays_and_back": 802, "constant": [813, 1194], "arang": 815, "empti": 817, "ey": 819, "linspac": 823, "logspac": 824, "ones": 827, "zero": [831, 1202], "as_ivy_dtyp": 834, "as_native_dtyp": 835, "check_float": 840, "closest_valid_dtyp": 841, "default_dtyp": 842, "default_float_dtyp": 843, "default_int_dtyp": 844, "default_uint_dtyp": 845, "dtype_bit": 847, "function_supported_dtyp": 849, "function_unsupported_dtyp": 850, "infer_default_dtyp": 852, "invalid_dtyp": 853, "promote_typ": 858, "promote_types_of_input": 859, "set_default_dtyp": 861, "set_default_float_dtyp": 862, "set_default_int_dtyp": 863, "set_default_uint_dtyp": 864, "type_promote_arrai": 865, "unset_default_dtyp": 866, "unset_default_float_dtyp": 867, "unset_default_int_dtyp": 868, "unset_default_uint_dtyp": 869, "valid_dtyp": 870, "profil": 872, "as_ivy_dev": 873, "as_native_dev": 874, "clear_mem_on_dev": 875, "default_devic": 876, "dev_util": 878, "function_supported_devic": 879, "function_unsupported_devic": 880, "get_all_ivy_arrays_on_dev": 881, "gpu_is_avail": 882, "num_cpu_cor": 883, "num_gpu": 884, "num_ivy_arrays_on_dev": 885, "percent_used_mem_on_dev": 886, "print_all_ivy_arrays_on_dev": 887, "set_default_devic": 888, "set_split_factor": 889, "split_factor": 890, "split_func_cal": 891, "total_mem_on_dev": 895, "tpu_is_avail": 896, "unset_default_devic": 897, "used_mem_on_dev": 898, "reciproc": 949, "arg_info": 968, "arg_nam": 969, "cache_fn": 973, "container_typ": 976, "current_backend_str": 980, "function_supported_devices_and_dtyp": 987, "function_unsupported_devices_and_dtyp": 988, "get_all_arrays_in_memori": 991, "get_array_mod": 992, "get_min_bas": 993, "get_min_denomin": 994, "get_nestable_mod": 995, "get_queue_timeout": 997, "get_referrers_recurs": 998, "get_tmp_dir": 999, "inplace_arrays_support": 1002, "inplace_variables_support": 1006, "match_kwarg": 1013, "multiprocess": 1014, "num_arrays_in_memori": 1015, "print_all_arrays_in_memori": 1017, "set_array_mod": 1020, "set_min_bas": 1021, "set_min_denomin": 1022, "set_nestable_mod": 1023, "set_queue_timeout": 1024, "set_shape_array_mod": 1025, "set_tmp_dir": 1026, "shape_array_mod": 1028, "to_ivy_shap": 1032, "to_native_shap": 1034, "try_else_non": 1037, "unset_array_mod": 1038, "unset_nestable_mod": 1039, "unset_queue_timeout": 1040, "unset_shape_array_mod": 1041, "vmap": 1044, "execute_with_gradi": 1048, "grad": 1049, "jac": 1052, "set_with_grad": 1056, "unset_with_grad": 1058, "value_and_grad": 1059, "with_grad": 1062, "deconv_length": 1070, "handle_pad": 1073, "meta": 1123, "fomaml_step": 1124, "maml_step": 1125, "reptile_step": 1126, "nest": 1127, "all_nested_indic": 1128, "copy_nest": 1129, "index_nest": 1130, "insert_into_nest_at_index": 1131, "insert_into_nest_at_indic": 1132, "map": 1133, "map_nest_at_index": 1134, "map_nest_at_indic": 1135, "multi_index_nest": 1136, "nested_ani": 1137, "nested_indices_wher": 1138, "nested_map": 1139, "nested_multi_map": 1140, "prune_nest_at_index": 1141, "prune_nest_at_indic": 1142, "set_nest_at_index": 1143, "set_nest_at_indic": 1144, "seed": 1152, "glossari": 1180, "content": 1181, "overview": 1181, "quick": 1181, "start": 1181, "roadmap": [1181, 1187], "citat": 1181, "inspect": 1184, "add_array_spec": 1185, "fn_array_spec": 1186, "geglu": 1189, "to_ivy_modul": 1192, "firstlayersiren": 1195, "glorotuniform": 1196, "kaimingnorm": 1198, "Ones": 1199, "siren": 1200, "uniform": 1201, "conv1dtranspos": 1205, "conv2dtranspos": 1207, "conv3dtranspos": 1209, "depthwiseconv2d": 1210, "lstm": 1212, "multiheadattent": 1214, "layernorm": 1218, "adam": 1220, "lamb": 1221, "lar": 1222, "sgd": 1224, "sequenti": [1225, 1226], "verbos": 1228, "cprint": 1229}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})